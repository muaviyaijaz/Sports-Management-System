/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ooad_project;

import java.util.*;
import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.awt.Dimension;
import javax.swing.ScrollPaneConstants;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import java.awt.GridLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;


/**
 *
 * @author hamza khalid
 */

public class JFrame1 extends javax.swing.JFrame {

    /**
     * Creates new form JFrame1
     */
    Color menuColor=new Color(0,51,51);
    Color hoverColor=new Color(0,30,30);
    Color menuColor2=new Color(255,255,235);
    Color hoverColor2=new Color(255,255,200); 
    
    int SportType;
    int UserSportType;
    SportsManagement manage = new SportsManagement();
    dbConnectivity db = dbConnectivity.getInstance();
    User appUser;
    
    
    
    public JFrame1() {
        initComponents();
        Send_Notification_Button.setBackground(menuColor);
        Notification_Search_Button.setBackground(menuColor);
        LogInError.setForeground(menuColor);
        //jScrollPane1.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        //jScrollPane4.getVerticalScrollBar().setPreferredSize(new Dimension(0,0));
        this.User_Layout();
        this.Fixtures_Basketball_Table.getColumnModel().getColumn(0).setPreferredWidth(0);
        this.Fixtures_Basketball_Table.getColumnModel().getColumn(4).setPreferredWidth(100);
        this.Fixtures_Basketball_Table.getColumnModel().getColumn(7).setPreferredWidth(100);
        
        this.Fixtures_Football_Table.getColumnModel().getColumn(0).setPreferredWidth(0);
        this.Fixtures_Football_Table.getColumnModel().getColumn(4).setPreferredWidth(100);
        this.Fixtures_Football_Table.getColumnModel().getColumn(7).setPreferredWidth(100);
        
        this.Fixtures_Cricket_Table.getColumnModel().getColumn(0).setPreferredWidth(0);
        this.Fixtures_Cricket_Table.getColumnModel().getColumn(4).setPreferredWidth(100);
        this.Fixtures_Cricket_Table.getColumnModel().getColumn(7).setPreferredWidth(100);
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        LogIn_Panel = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        LoginUsernameField = new javax.swing.JTextField();
        LogInConfirmButton = new javax.swing.JButton();
        LoginPasswordField = new javax.swing.JPasswordField();
        LogInError = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        Football_Team_Data = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        FootballTeamDataNameField = new javax.swing.JTextField();
        FootballTeamPlayerTable = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        SignUp_Panel = new javax.swing.JDialog();
        jPanel47 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        SignUpEmailField = new javax.swing.JTextField();
        SignUpButton = new javax.swing.JButton();
        SignUpConfirmPasswordField = new javax.swing.JPasswordField();
        jLabel66 = new javax.swing.JLabel();
        SignUpPhoneField = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        SignUpPasswordField = new javax.swing.JPasswordField();
        jLabel68 = new javax.swing.JLabel();
        SignUpNameField = new javax.swing.JTextField();
        InvalidPhone = new javax.swing.JLabel();
        Invalidname = new javax.swing.JLabel();
        InvalidEmail = new javax.swing.JLabel();
        InvalidPassword = new javax.swing.JLabel();
        ErrorConfirmPassword = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        SignUpUsernameField = new javax.swing.JTextField();
        InvalidUsername = new javax.swing.JLabel();
        InvalidPhone1 = new javax.swing.JLabel();
        FootballMatch = new javax.swing.JDialog();
        jPanel50 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        FootballMatchTeam2PlayerTable = new javax.swing.JTable();
        FootballSummarySaveButton = new java.awt.Button();
        FootballMatchTeam2Score = new javax.swing.JTextField();
        FootballMatchTeam1Score = new javax.swing.JTextField();
        FootballMatchTeam2Name = new javax.swing.JTextField();
        FootballMatchTeam1Name = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        FootballMatchTeam1PlayerTable = new javax.swing.JTable();
        jLabel109 = new javax.swing.JLabel();
        FootballManOfTheMatch = new javax.swing.JTextField();
        CricketMatch = new javax.swing.JDialog();
        jPanel51 = new javax.swing.JPanel();
        SaveCricketSummaryButton = new java.awt.Button();
        CricketSummaryTeam2Wickets = new javax.swing.JTextField();
        CricketSummaryTeam2Overs = new javax.swing.JTextField();
        CricketSummaryTeam2Name = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        Team2BowlingTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        Team2BattingTable = new javax.swing.JTable();
        CrcketSummaryTeam1Name = new javax.swing.JTextField();
        CricketSummaryTeam1Overs = new javax.swing.JTextField();
        CricketSummaryTeam1Wickets = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        Team1BattingTable = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        Team1BowlingTable = new javax.swing.JTable();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        CricketSummaryTeam1Runs = new javax.swing.JTextField();
        CricketSummaryTeam2Runs = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        CricketManOfTheMatch = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        Cricket_Team_Data = new javax.swing.JDialog();
        jPanel55 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        CricketTeamDataNameField = new javax.swing.JTextField();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        Volleyball_Team_Data = new javax.swing.JDialog();
        jPanel56 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        VolleyballTeamDataNameField = new javax.swing.JTextField();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable15 = new javax.swing.JTable();
        OrganizerAddPanel = new javax.swing.JDialog();
        jPanel57 = new javax.swing.JPanel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        Add_Organizer_Email_Field = new javax.swing.JTextField();
        AddOrganizerConfirmButton = new javax.swing.JButton();
        Add_Organizer_Confirm_Field = new javax.swing.JPasswordField();
        jLabel99 = new javax.swing.JLabel();
        Add_Organizer_Password_Field = new javax.swing.JPasswordField();
        jLabel100 = new javax.swing.JLabel();
        Add_Organizer_Username_Field = new javax.swing.JTextField();
        jLabel101 = new javax.swing.JLabel();
        Add_Organizer_Phone_Field = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        Add_Organizer_Name_Field = new javax.swing.JTextField();
        PaymentOption = new javax.swing.JDialog();
        jPanel60 = new javax.swing.JPanel();
        jLabel92 = new javax.swing.JLabel();
        PayNowButton = new javax.swing.JButton();
        PayLaterButton = new javax.swing.JButton();
        AddMatchDialog = new javax.swing.JDialog();
        jPanel61 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        SignUpButton1 = new javax.swing.JButton();
        jLabel105 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        VenueComboBox = new javax.swing.JComboBox<>();
        Team1ComboBox = new javax.swing.JComboBox<>();
        jLabel107 = new javax.swing.JLabel();
        Team2ComboBox = new javax.swing.JComboBox<>();
        TimeComboBox = new javax.swing.JComboBox<>();
        datetextfield = new javax.swing.JTextField();
        OfficialComboBox1 = new javax.swing.JComboBox<>();
        jLabel121 = new javax.swing.JLabel();
        BasketballMatch = new javax.swing.JDialog();
        jPanel62 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        BasketballMatchTeam2PlayerTable = new javax.swing.JTable();
        BasketballSummarySaveButton = new java.awt.Button();
        BasketballMatchTeam2Score = new javax.swing.JTextField();
        BasketballMatchTeam1Score = new javax.swing.JTextField();
        BasketballMatchTeam2Name = new javax.swing.JTextField();
        BasketballMatchTeam1Name = new javax.swing.JTextField();
        jLabel102 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        BasketballMatchTeam1PlayerTable = new javax.swing.JTable();
        jLabel81 = new javax.swing.JLabel();
        BasketballManofTheMatch = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        ChangeMatchDialog = new javax.swing.JDialog();
        jPanel65 = new javax.swing.JPanel();
        jLabel135 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        SignUpButton2 = new javax.swing.JButton();
        jLabel137 = new javax.swing.JLabel();
        jLabel148 = new javax.swing.JLabel();
        VenueComboBox1 = new javax.swing.JComboBox<>();
        MatchIdComboBox1 = new javax.swing.JComboBox<>();
        jLabel150 = new javax.swing.JLabel();
        TimeComboBox1 = new javax.swing.JComboBox<>();
        datetextfield1 = new javax.swing.JTextField();
        MainPanel = new javax.swing.JPanel();
        HeaderPanel = new javax.swing.JPanel();
        LogoPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        LoginButton = new javax.swing.JPanel();
        LogInLabel = new javax.swing.JLabel();
        SignUpHeaderButton = new javax.swing.JPanel();
        Signuplabel = new javax.swing.JLabel();
        MenuPanel = new javax.swing.JPanel();
        homemenu = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        CricketMenu = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        FootballMenu = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        VolleyballMenu = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        RegisterTeamMenu = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        UsersListMenu = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        OrganizersListMenu = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        NotificationMenu = new javax.swing.JPanel();
        jLabel82 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        UserProfileMenu = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        PaymentMenu = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        CertificateMenu = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        InnerMainPanel = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel144 = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        jLabel146 = new javax.swing.JLabel();
        jLabel147 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jLabel139 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        jLabel141 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        FootballPanel = new javax.swing.JTabbedPane();
        Teams_Football = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        Teams_Football_scroller = new javax.swing.JScrollPane();
        Teams_Football_data = new javax.swing.JTable();
        Remove_Football_team_Button = new javax.swing.JButton();
        Points_Football = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        Points_Volley_Scroller1 = new javax.swing.JScrollPane();
        PointsTable_Football = new javax.swing.JTable();
        Fixtures_Football = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        Fixtures_Football_Scroller = new javax.swing.JScrollPane();
        Fixtures_Football_Table = new javax.swing.JTable();
        Football_Add_Match_Button = new javax.swing.JButton();
        Change_Football_Match_Button = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        Football_Players_Scores = new javax.swing.JPanel();
        jPanel72 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jPanel73 = new javax.swing.JPanel();
        jPanel74 = new javax.swing.JPanel();
        Fixtures_Cricket_Scroller5 = new javax.swing.JScrollPane();
        Football_Assist_Scorers_Table = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        Fixtures_Cricket_Scroller6 = new javax.swing.JScrollPane();
        Football_Goal_Scorers_Table = new javax.swing.JTable();
        BasketballPanel = new javax.swing.JTabbedPane();
        Teams_Basketball = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        Teams_Basketball_scroller = new javax.swing.JScrollPane();
        Teams_Basketball_data = new javax.swing.JTable();
        Remove_Basketball_team_button = new javax.swing.JButton();
        Points_Basketball = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        Points_Basketball_Scroller = new javax.swing.JScrollPane();
        PointsTableBasketball = new javax.swing.JTable();
        Fixtures_Basketball = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        Fixtures_Basketball_Scroller = new javax.swing.JScrollPane();
        Fixtures_Basketball_Table = new javax.swing.JTable();
        Basketball_Add_Match_Button = new javax.swing.JButton();
        Change_Basketball_Match_Button = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        Basketball_Players_Scores = new javax.swing.JPanel();
        jPanel69 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jPanel70 = new javax.swing.JPanel();
        jPanel71 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        Basketball_top_dunkers = new javax.swing.JScrollPane();
        Basketball_Point_Scorers_Table = new javax.swing.JTable();
        CricketPanel = new javax.swing.JTabbedPane();
        Teams_Cricket = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        Remove_Cricket_Team_Button = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        Teams_Cricket_scroller = new javax.swing.JScrollPane();
        Teams_Cricket_data = new javax.swing.JTable();
        Points_Cricket = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        Points_Volley_Scroller2 = new javax.swing.JScrollPane();
        PointsTable_Cricket = new javax.swing.JTable();
        Fixtures_Cricket = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jPanel39 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        Fixtures_Cricket_Scroller = new javax.swing.JScrollPane();
        Fixtures_Cricket_Table = new javax.swing.JTable();
        Cricket_Add_Match_Button = new javax.swing.JButton();
        Change_Cricket_Match_Button = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        Cricket_Players_Scores = new javax.swing.JPanel();
        jPanel66 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jPanel67 = new javax.swing.JPanel();
        jPanel68 = new javax.swing.JPanel();
        Fixtures_Cricket_Scroller1 = new javax.swing.JScrollPane();
        Cricket_Wicket_Takers_Table = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        Fixtures_Cricket_Scroller2 = new javax.swing.JScrollPane();
        Cricket_Run_Scorers_Table = new javax.swing.JTable();
        RegisterTeamPanel = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        RegisterInnerPanel = new javax.swing.JPanel();
        SelectSportPanel = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        RegisterVolleyballChoice = new javax.swing.JButton();
        RegisterFootballChoice = new javax.swing.JButton();
        RegisterCricketChoice = new javax.swing.JButton();
        TeamInfoPanel = new javax.swing.JPanel();
        jLabel76 = new javax.swing.JLabel();
        TeamRegistrationNameField = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        TeamRegistrationPlayerTable = new javax.swing.JTable();
        jLabel77 = new javax.swing.JLabel();
        RegisterTeamButton = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        UserProfilePanel = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jPanel49 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        UserProfileTeamLabel = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        UserProfileId = new javax.swing.JLabel();
        UserProfileName = new javax.swing.JLabel();
        UserProfileUSername = new javax.swing.JLabel();
        UserProfilePhoneNo = new javax.swing.JLabel();
        UserProfileEmail = new javax.swing.JLabel();
        UserProfileTeamName = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        UsersListPanel = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jPanel45 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PlayersListTable = new javax.swing.JTable();
        jLabel30 = new javax.swing.JLabel();
        OrganizersListPanel = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jLabel75 = new javax.swing.JLabel();
        jPanel44 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        OrganizersListTable = new javax.swing.JTable();
        jButton25 = new javax.swing.JButton();
        NotificationPanel = new javax.swing.JPanel();
        jPanel48 = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        jPanel54 = new javax.swing.JPanel();
        Send_Notification_Button = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        Notification_Search_Table = new javax.swing.JTable();
        Notification_Player_Option = new javax.swing.JRadioButton();
        Notification_Organizer_Option = new javax.swing.JRadioButton();
        Notification_Search_Name_Field = new javax.swing.JTextField();
        Notification_Search_Button = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        Notification_Text_Area = new javax.swing.JTextArea();
        Notification_Subject_Field = new javax.swing.JTextField();
        jLabel87 = new javax.swing.JLabel();
        Notification_SMS_Option = new javax.swing.JRadioButton();
        Notification_Email_Option = new javax.swing.JRadioButton();
        Notification_Select_All_Option = new javax.swing.JRadioButton();
        PaymentPanel = new javax.swing.JPanel();
        jPanel58 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jPanel59 = new javax.swing.JPanel();
        jLabel98 = new javax.swing.JLabel();
        AccountInfoField = new javax.swing.JTextField();
        jLabel103 = new javax.swing.JLabel();
        PayButton = new javax.swing.JButton();
        JazzCashButton = new javax.swing.JRadioButton();
        EasyPaisaButton = new javax.swing.JRadioButton();
        CertificatePanel = new javax.swing.JPanel();
        jPanel52 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        jPanel63 = new javax.swing.JPanel();
        Certificate_Purpose_Field = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        CertificateNameField = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        Certificate_Description_Field = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();

        LogIn_Panel.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        LogIn_Panel.setTitle("Log IN Form");
        LogIn_Panel.setBackground(new java.awt.Color(255, 255, 204));
        LogIn_Panel.setLocation(new java.awt.Point(450, 90));
        LogIn_Panel.setMinimumSize(new java.awt.Dimension(550, 600));
        LogIn_Panel.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        LogIn_Panel.setType(java.awt.Window.Type.POPUP);

        jPanel4.setBackground(new java.awt.Color(0, 51, 51));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("LogIn ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 38, 0, 0);
        jPanel4.add(jLabel12, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Username :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 90, 0, 0);
        jPanel4.add(jLabel19, gridBagConstraints);

        jLabel51.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(52, 90, 0, 0);
        jPanel4.add(jLabel51, gridBagConstraints);

        LoginUsernameField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        LoginUsernameField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        LoginUsernameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginUsernameFieldMouseClicked(evt);
            }
        });
        LoginUsernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginUsernameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 38, 0, 113);
        jPanel4.add(LoginUsernameField, gridBagConstraints);

        LogInConfirmButton.setText("LogIn");
        LogInConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogInConfirmButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 58, 76, 0);
        jPanel4.add(LogInConfirmButton, gridBagConstraints);

        LoginPasswordField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        LoginPasswordField.setForeground(new java.awt.Color(51, 51, 51));
        LoginPasswordField.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, null));
        LoginPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginPasswordFieldMouseClicked(evt);
            }
        });
        LoginPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginPasswordFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(52, 38, 0, 113);
        jPanel4.add(LoginPasswordField, gridBagConstraints);

        LogInError.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        LogInError.setForeground(new java.awt.Color(255, 0, 0));
        LogInError.setText("Invalid Username or Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(43, 160, 0, 0);
        jPanel4.add(LogInError, gridBagConstraints);

        javax.swing.GroupLayout LogIn_PanelLayout = new javax.swing.GroupLayout(LogIn_Panel.getContentPane());
        LogIn_Panel.getContentPane().setLayout(LogIn_PanelLayout);
        LogIn_PanelLayout.setHorizontalGroup(
            LogIn_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        LogIn_PanelLayout.setVerticalGroup(
            LogIn_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Football_Team_Data.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Football_Team_Data.setTitle("Team Data ");
        Football_Team_Data.setMinimumSize(new java.awt.Dimension(900, 700));
        Football_Team_Data.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jPanel12.setBackground(new java.awt.Color(0, 51, 51));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel52.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setText("Team Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        jPanel12.add(jLabel52, gridBagConstraints);

        jLabel53.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("Team Name : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 0, 0);
        jPanel12.add(jLabel53, gridBagConstraints);

        FootballTeamDataNameField.setEditable(false);
        FootballTeamDataNameField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        FootballTeamDataNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        FootballTeamDataNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FootballTeamDataNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, 0);
        jPanel12.add(FootballTeamDataNameField, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player Name", "Total Goals", "Total Assists"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(24);
        FootballTeamPlayerTable.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 683;
        gridBagConstraints.ipady = 406;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 65, 42);
        jPanel12.add(FootballTeamPlayerTable, gridBagConstraints);

        javax.swing.GroupLayout Football_Team_DataLayout = new javax.swing.GroupLayout(Football_Team_Data.getContentPane());
        Football_Team_Data.getContentPane().setLayout(Football_Team_DataLayout);
        Football_Team_DataLayout.setHorizontalGroup(
            Football_Team_DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        Football_Team_DataLayout.setVerticalGroup(
            Football_Team_DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 568, Short.MAX_VALUE)
        );

        SignUp_Panel.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        SignUp_Panel.setTitle("Sign Up Form");
        SignUp_Panel.setBackground(new java.awt.Color(255, 255, 204));
        SignUp_Panel.setLocation(new java.awt.Point(300, 50));
        SignUp_Panel.setMinimumSize(new java.awt.Dimension(900, 690));
        SignUp_Panel.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        SignUp_Panel.setType(java.awt.Window.Type.POPUP);

        jPanel47.setBackground(new java.awt.Color(0, 51, 51));
        jPanel47.setLayout(new java.awt.GridBagLayout());

        jLabel63.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 255, 255));
        jLabel63.setText("SignUp ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        jPanel47.add(jLabel63, gridBagConstraints);

        jLabel64.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setText("Email :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(48, 160, 0, 0);
        jPanel47.add(jLabel64, gridBagConstraints);

        jLabel65.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(255, 255, 255));
        jLabel65.setText("ConfirmPassword:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 160, 0, 0);
        jPanel47.add(jLabel65, gridBagConstraints);

        SignUpEmailField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        SignUpEmailField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpEmailFieldMouseClicked(evt);
            }
        });
        SignUpEmailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpEmailFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 70, 0, 0);
        jPanel47.add(SignUpEmailField, gridBagConstraints);

        SignUpButton.setText("SignUp");
        SignUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 10, 0, 0);
        jPanel47.add(SignUpButton, gridBagConstraints);

        SignUpConfirmPasswordField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        SignUpConfirmPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpConfirmPasswordFieldMouseClicked(evt);
            }
        });
        SignUpConfirmPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpConfirmPasswordFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 70, 0, 0);
        jPanel47.add(SignUpConfirmPasswordField, gridBagConstraints);

        jLabel66.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("PhoneNo :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 160, 0, 0);
        jPanel47.add(jLabel66, gridBagConstraints);

        SignUpPhoneField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        SignUpPhoneField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpPhoneFieldMouseClicked(evt);
            }
        });
        SignUpPhoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpPhoneFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 70, 0, 0);
        jPanel47.add(SignUpPhoneField, gridBagConstraints);

        jLabel67.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 255, 255));
        jLabel67.setText("Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 160, 0, 0);
        jPanel47.add(jLabel67, gridBagConstraints);

        SignUpPasswordField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        SignUpPasswordField.setForeground(new java.awt.Color(51, 51, 51));
        SignUpPasswordField.setMinimumSize(new java.awt.Dimension(14, 32));
        SignUpPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpPasswordFieldMouseClicked(evt);
            }
        });
        SignUpPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpPasswordFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 70, 0, 0);
        jPanel47.add(SignUpPasswordField, gridBagConstraints);

        jLabel68.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        jLabel68.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(43, 160, 0, 0);
        jPanel47.add(jLabel68, gridBagConstraints);

        SignUpNameField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        SignUpNameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpNameFieldMouseClicked(evt);
            }
        });
        SignUpNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(43, 70, 0, 0);
        jPanel47.add(SignUpNameField, gridBagConstraints);

        InvalidPhone.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        InvalidPhone.setForeground(new java.awt.Color(255, 0, 0));
        InvalidPhone.setText("*Invalid PhoneNo ( 03XX-XXXXXXX )");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 30, 0, 9);
        jPanel47.add(InvalidPhone, gridBagConstraints);

        Invalidname.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        Invalidname.setForeground(new java.awt.Color(255, 0, 0));
        Invalidname.setText("*Invalid name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(43, 30, 0, 0);
        jPanel47.add(Invalidname, gridBagConstraints);

        InvalidEmail.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        InvalidEmail.setForeground(new java.awt.Color(255, 0, 0));
        InvalidEmail.setText("*Invalid Email ( __@email.com )");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 30, 0, 0);
        jPanel47.add(InvalidEmail, gridBagConstraints);

        InvalidPassword.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        InvalidPassword.setForeground(new java.awt.Color(255, 0, 0));
        InvalidPassword.setText("Length ( 7 - 20 ) Characters");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 30, 0, 0);
        jPanel47.add(InvalidPassword, gridBagConstraints);

        ErrorConfirmPassword.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        ErrorConfirmPassword.setForeground(new java.awt.Color(255, 0, 0));
        ErrorConfirmPassword.setText("Mis-Match ( re-type Password )");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 0, 0);
        jPanel47.add(ErrorConfirmPassword, gridBagConstraints);

        jLabel89.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(255, 255, 255));
        jLabel89.setText("Username :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 160, 0, 0);
        jPanel47.add(jLabel89, gridBagConstraints);

        SignUpUsernameField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        SignUpUsernameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpUsernameFieldMouseClicked(evt);
            }
        });
        SignUpUsernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpUsernameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 226;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 70, 0, 0);
        jPanel47.add(SignUpUsernameField, gridBagConstraints);

        InvalidUsername.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        InvalidUsername.setForeground(new java.awt.Color(255, 0, 0));
        InvalidUsername.setText("*Invalid Username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 30, 0, 0);
        jPanel47.add(InvalidUsername, gridBagConstraints);

        InvalidPhone1.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        InvalidPhone1.setForeground(new java.awt.Color(0, 51, 51));
        InvalidPhone1.setText("*Invalid PhoneNo ( 03XX-XXXXXXX )");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -2;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 30, 41, 0);
        jPanel47.add(InvalidPhone1, gridBagConstraints);

        SignUp_Panel.getContentPane().add(jPanel47, java.awt.BorderLayout.CENTER);

        FootballMatch.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        FootballMatch.setTitle("Football Match Summary");
        FootballMatch.setBackground(new java.awt.Color(0, 51, 51));
        FootballMatch.setLocation(new java.awt.Point(100, 10));
        FootballMatch.setMinimumSize(new java.awt.Dimension(1280, 760));
        FootballMatch.setModal(true);
        FootballMatch.getContentPane().setLayout(null);

        jPanel50.setBackground(new java.awt.Color(0, 51, 51));
        jPanel50.setMinimumSize(new java.awt.Dimension(1240, 740));
        jPanel50.setLayout(null);

        FootballMatchTeam2PlayerTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        FootballMatchTeam2PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Player", "Goals", "Assists"
            }
        ));
        FootballMatchTeam2PlayerTable.setRowHeight(24);
        jScrollPane5.setViewportView(FootballMatchTeam2PlayerTable);

        jPanel50.add(jScrollPane5);
        jScrollPane5.setBounds(700, 250, 520, 330);

        FootballSummarySaveButton.setLabel("Save");
        FootballSummarySaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FootballSummarySaveButtonActionPerformed(evt);
            }
        });
        jPanel50.add(FootballSummarySaveButton);
        FootballSummarySaveButton.setBounds(570, 630, 70, 24);

        FootballMatchTeam2Score.setBackground(new java.awt.Color(0, 102, 102));
        FootballMatchTeam2Score.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        FootballMatchTeam2Score.setForeground(new java.awt.Color(255, 255, 255));
        FootballMatchTeam2Score.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FootballMatchTeam2Score.setText("0");
        FootballMatchTeam2Score.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FootballMatchTeam2ScoreActionPerformed(evt);
            }
        });
        jPanel50.add(FootballMatchTeam2Score);
        FootballMatchTeam2Score.setBounds(700, 80, 80, 50);

        FootballMatchTeam1Score.setBackground(new java.awt.Color(0, 102, 102));
        FootballMatchTeam1Score.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        FootballMatchTeam1Score.setForeground(new java.awt.Color(255, 255, 255));
        FootballMatchTeam1Score.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FootballMatchTeam1Score.setText("0");
        FootballMatchTeam1Score.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FootballMatchTeam1ScoreActionPerformed(evt);
            }
        });
        jPanel50.add(FootballMatchTeam1Score);
        FootballMatchTeam1Score.setBounds(430, 80, 80, 50);

        FootballMatchTeam2Name.setBackground(new java.awt.Color(0, 51, 51));
        FootballMatchTeam2Name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        FootballMatchTeam2Name.setForeground(new java.awt.Color(255, 255, 255));
        FootballMatchTeam2Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 40, 40), 2));
        jPanel50.add(FootballMatchTeam2Name);
        FootballMatchTeam2Name.setBounds(950, 80, 240, 50);

        FootballMatchTeam1Name.setBackground(new java.awt.Color(0, 51, 51));
        FootballMatchTeam1Name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        FootballMatchTeam1Name.setForeground(new java.awt.Color(255, 255, 255));
        FootballMatchTeam1Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 40, 40), 2));
        jPanel50.add(FootballMatchTeam1Name);
        FootballMatchTeam1Name.setBounds(90, 80, 200, 50);

        jLabel80.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(255, 255, 255));
        jLabel80.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel80.setText("-");
        jPanel50.add(jLabel80);
        jLabel80.setBounds(590, 90, 40, 32);

        FootballMatchTeam1PlayerTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        FootballMatchTeam1PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Player", "Goals", "Assists"
            }
        ));
        FootballMatchTeam1PlayerTable.setRowHeight(24);
        jScrollPane17.setViewportView(FootballMatchTeam1PlayerTable);

        jPanel50.add(jScrollPane17);
        jScrollPane17.setBounds(80, 250, 440, 330);

        jLabel109.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel109.setForeground(new java.awt.Color(255, 255, 255));
        jLabel109.setText("Man Of The Match :");
        jPanel50.add(jLabel109);
        jLabel109.setBounds(90, 176, 180, 40);

        FootballManOfTheMatch.setText("jTextField1");
        jPanel50.add(FootballManOfTheMatch);
        FootballManOfTheMatch.setBounds(300, 180, 190, 30);

        FootballMatch.getContentPane().add(jPanel50);
        jPanel50.setBounds(0, 0, 1300, 710);

        CricketMatch.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        CricketMatch.setTitle("Cricket Match Summary");
        CricketMatch.setBackground(new java.awt.Color(0, 51, 51));
        CricketMatch.setLocation(new java.awt.Point(70, 5));
        CricketMatch.setMinimumSize(new java.awt.Dimension(1260, 800));
        CricketMatch.getContentPane().setLayout(null);

        jPanel51.setBackground(new java.awt.Color(0, 51, 51));
        jPanel51.setMinimumSize(new java.awt.Dimension(1260, 800));
        jPanel51.setPreferredSize(new java.awt.Dimension(1140, 733));
        jPanel51.setLayout(new java.awt.GridBagLayout());

        SaveCricketSummaryButton.setLabel("Save");
        SaveCricketSummaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveCricketSummaryButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 50, 0, 0);
        jPanel51.add(SaveCricketSummaryButton, gridBagConstraints);

        CricketSummaryTeam2Wickets.setBackground(new java.awt.Color(0, 51, 51));
        CricketSummaryTeam2Wickets.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        CricketSummaryTeam2Wickets.setForeground(new java.awt.Color(255, 255, 255));
        CricketSummaryTeam2Wickets.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CricketSummaryTeam2Wickets.setText("7");
        CricketSummaryTeam2Wickets.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 40, 40), 2, true));
        CricketSummaryTeam2Wickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketSummaryTeam2WicketsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 10, 0, 0);
        jPanel51.add(CricketSummaryTeam2Wickets, gridBagConstraints);

        CricketSummaryTeam2Overs.setBackground(new java.awt.Color(0, 51, 51));
        CricketSummaryTeam2Overs.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        CricketSummaryTeam2Overs.setForeground(new java.awt.Color(255, 255, 255));
        CricketSummaryTeam2Overs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CricketSummaryTeam2Overs.setText("  18.6");
        CricketSummaryTeam2Overs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 40, 40), 2));
        CricketSummaryTeam2Overs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketSummaryTeam2OversActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 20, 0, 0);
        jPanel51.add(CricketSummaryTeam2Overs, gridBagConstraints);

        CricketSummaryTeam2Name.setBackground(new java.awt.Color(0, 51, 51));
        CricketSummaryTeam2Name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        CricketSummaryTeam2Name.setForeground(new java.awt.Color(255, 255, 255));
        CricketSummaryTeam2Name.setText("jTextField17");
        CricketSummaryTeam2Name.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 40, 40), 2, true));
        CricketSummaryTeam2Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketSummaryTeam2NameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 405;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 70, 0, 0);
        jPanel51.add(CricketSummaryTeam2Name, gridBagConstraints);

        Team2BowlingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bowler Name ", "Runs", "Wickets", "Overs"
            }
        ));
        jScrollPane6.setViewportView(Team2BowlingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 490;
        gridBagConstraints.ipady = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 80);
        jPanel51.add(jScrollPane6, gridBagConstraints);

        Team2BattingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Batsman Name ", "Runs", "Balls"
            }
        ));
        jScrollPane7.setViewportView(Team2BattingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 440;
        gridBagConstraints.ipady = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 70, 0, 0);
        jPanel51.add(jScrollPane7, gridBagConstraints);

        CrcketSummaryTeam1Name.setBackground(new java.awt.Color(0, 51, 51));
        CrcketSummaryTeam1Name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        CrcketSummaryTeam1Name.setForeground(new java.awt.Color(255, 255, 255));
        CrcketSummaryTeam1Name.setText("jTextField17");
        CrcketSummaryTeam1Name.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 40, 40), 2, true));
        CrcketSummaryTeam1Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrcketSummaryTeam1NameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 395;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 70, 0, 0);
        jPanel51.add(CrcketSummaryTeam1Name, gridBagConstraints);

        CricketSummaryTeam1Overs.setBackground(new java.awt.Color(0, 51, 51));
        CricketSummaryTeam1Overs.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        CricketSummaryTeam1Overs.setForeground(new java.awt.Color(255, 255, 255));
        CricketSummaryTeam1Overs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CricketSummaryTeam1Overs.setText("  18.6");
        CricketSummaryTeam1Overs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 40, 40), 2));
        CricketSummaryTeam1Overs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketSummaryTeam1OversActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 101;
        gridBagConstraints.ipady = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 20, 0, 0);
        jPanel51.add(CricketSummaryTeam1Overs, gridBagConstraints);

        CricketSummaryTeam1Wickets.setBackground(new java.awt.Color(0, 51, 51));
        CricketSummaryTeam1Wickets.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        CricketSummaryTeam1Wickets.setForeground(new java.awt.Color(255, 255, 255));
        CricketSummaryTeam1Wickets.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CricketSummaryTeam1Wickets.setText("7");
        CricketSummaryTeam1Wickets.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 40, 40), 2, true));
        CricketSummaryTeam1Wickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketSummaryTeam1WicketsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 10, 0, 0);
        jPanel51.add(CricketSummaryTeam1Wickets, gridBagConstraints);

        Team1BattingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Batsman Name ", "Runs", "Balls"
            }
        ));
        jScrollPane8.setViewportView(Team1BattingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 430;
        gridBagConstraints.ipady = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(40, 70, 0, 0);
        jPanel51.add(jScrollPane8, gridBagConstraints);

        Team1BowlingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bowler Name ", "Runs", "Wickets", "Overs"
            }
        ));
        jScrollPane9.setViewportView(Team1BowlingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 490;
        gridBagConstraints.ipady = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(40, 10, 0, 80);
        jPanel51.add(jScrollPane9, gridBagConstraints);

        jLabel84.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel84.setForeground(new java.awt.Color(255, 255, 255));
        jLabel84.setText("Overs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(70, 100, 0, 0);
        jPanel51.add(jLabel84, gridBagConstraints);

        jLabel85.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel85.setForeground(new java.awt.Color(255, 255, 255));
        jLabel85.setText("Overs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(64, 100, 0, 0);
        jPanel51.add(jLabel85, gridBagConstraints);

        jLabel86.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(255, 255, 255));
        jLabel86.setText("Match Summary");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 375;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 0, 0);
        jPanel51.add(jLabel86, gridBagConstraints);

        CricketSummaryTeam1Runs.setBackground(new java.awt.Color(0, 51, 51));
        CricketSummaryTeam1Runs.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        CricketSummaryTeam1Runs.setForeground(new java.awt.Color(255, 255, 255));
        CricketSummaryTeam1Runs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CricketSummaryTeam1Runs.setText("   220 ");
        CricketSummaryTeam1Runs.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 40, 40), 2, true));
        CricketSummaryTeam1Runs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketSummaryTeam1RunsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 22, 0, 0);
        jPanel51.add(CricketSummaryTeam1Runs, gridBagConstraints);

        CricketSummaryTeam2Runs.setBackground(new java.awt.Color(0, 51, 51));
        CricketSummaryTeam2Runs.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        CricketSummaryTeam2Runs.setForeground(new java.awt.Color(255, 255, 255));
        CricketSummaryTeam2Runs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CricketSummaryTeam2Runs.setText("   220 ");
        CricketSummaryTeam2Runs.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 40, 40), 2, true));
        CricketSummaryTeam2Runs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketSummaryTeam2RunsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 12, 0, 0);
        jPanel51.add(CricketSummaryTeam2Runs, gridBagConstraints);

        jLabel69.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("/");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 13, 0, 0);
        jPanel51.add(jLabel69, gridBagConstraints);

        jLabel88.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel88.setForeground(new java.awt.Color(255, 255, 255));
        jLabel88.setText("/");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 13, 0, 0);
        jPanel51.add(jLabel88, gridBagConstraints);

        jLabel104.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel104.setForeground(new java.awt.Color(255, 255, 255));
        jLabel104.setText("Man Of The Match :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 80, 0, 0);
        jPanel51.add(jLabel104, gridBagConstraints);

        CricketManOfTheMatch.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        CricketManOfTheMatch.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 0, 0);
        jPanel51.add(CricketManOfTheMatch, gridBagConstraints);

        jLabel32.setForeground(new java.awt.Color(0, 51, 51));
        jLabel32.setText("jLabel32");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 45, 23, 0);
        jPanel51.add(jLabel32, gridBagConstraints);

        CricketMatch.getContentPane().add(jPanel51);
        jPanel51.setBounds(0, 0, 1290, 733);

        Cricket_Team_Data.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Cricket_Team_Data.setTitle("Team Data ");
        Cricket_Team_Data.setMinimumSize(new java.awt.Dimension(900, 700));
        Cricket_Team_Data.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jPanel55.setBackground(new java.awt.Color(0, 51, 51));
        jPanel55.setLayout(new java.awt.GridBagLayout());

        jLabel54.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("Team Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        jPanel55.add(jLabel54, gridBagConstraints);

        jLabel55.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setText("Team Name : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 0, 0);
        jPanel55.add(jLabel55, gridBagConstraints);

        CricketTeamDataNameField.setEditable(false);
        CricketTeamDataNameField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        CricketTeamDataNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        CricketTeamDataNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CricketTeamDataNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, 0);
        jPanel55.add(CricketTeamDataNameField, gridBagConstraints);

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player Name", "Runs Scored", "Wickets Taken"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable13.setRowHeight(24);
        jScrollPane15.setViewportView(jTable13);
        if (jTable13.getColumnModel().getColumnCount() > 0) {
            jTable13.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 683;
        gridBagConstraints.ipady = 406;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 65, 42);
        jPanel55.add(jScrollPane15, gridBagConstraints);

        javax.swing.GroupLayout Cricket_Team_DataLayout = new javax.swing.GroupLayout(Cricket_Team_Data.getContentPane());
        Cricket_Team_Data.getContentPane().setLayout(Cricket_Team_DataLayout);
        Cricket_Team_DataLayout.setHorizontalGroup(
            Cricket_Team_DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel55, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        Cricket_Team_DataLayout.setVerticalGroup(
            Cricket_Team_DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel55, javax.swing.GroupLayout.PREFERRED_SIZE, 568, Short.MAX_VALUE)
        );

        Volleyball_Team_Data.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Volleyball_Team_Data.setTitle("Team Data ");
        Volleyball_Team_Data.setMinimumSize(new java.awt.Dimension(900, 700));
        Volleyball_Team_Data.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jPanel56.setBackground(new java.awt.Color(0, 51, 51));
        jPanel56.setLayout(new java.awt.GridBagLayout());

        jLabel56.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 255, 255));
        jLabel56.setText("Team Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        jPanel56.add(jLabel56, gridBagConstraints);

        jLabel57.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 255, 255));
        jLabel57.setText("Team Name : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 0, 0);
        jPanel56.add(jLabel57, gridBagConstraints);

        VolleyballTeamDataNameField.setEditable(false);
        VolleyballTeamDataNameField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        VolleyballTeamDataNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        VolleyballTeamDataNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolleyballTeamDataNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, 0);
        jPanel56.add(VolleyballTeamDataNameField, gridBagConstraints);

        jTable15.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player Name", "Points Scored"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable15.setRowHeight(24);
        jScrollPane16.setViewportView(jTable15);
        if (jTable15.getColumnModel().getColumnCount() > 0) {
            jTable15.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 683;
        gridBagConstraints.ipady = 406;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 65, 42);
        jPanel56.add(jScrollPane16, gridBagConstraints);

        javax.swing.GroupLayout Volleyball_Team_DataLayout = new javax.swing.GroupLayout(Volleyball_Team_Data.getContentPane());
        Volleyball_Team_Data.getContentPane().setLayout(Volleyball_Team_DataLayout);
        Volleyball_Team_DataLayout.setHorizontalGroup(
            Volleyball_Team_DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel56, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        Volleyball_Team_DataLayout.setVerticalGroup(
            Volleyball_Team_DataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel56, javax.swing.GroupLayout.PREFERRED_SIZE, 568, Short.MAX_VALUE)
        );

        OrganizerAddPanel.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        OrganizerAddPanel.setTitle("Sign Up Form");
        OrganizerAddPanel.setBackground(new java.awt.Color(255, 255, 204));
        OrganizerAddPanel.setLocation(new java.awt.Point(300, 50));
        OrganizerAddPanel.setMinimumSize(new java.awt.Dimension(850, 670));
        OrganizerAddPanel.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        OrganizerAddPanel.setType(java.awt.Window.Type.POPUP);

        jPanel57.setBackground(new java.awt.Color(0, 51, 51));
        jPanel57.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel95.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel95.setForeground(new java.awt.Color(255, 255, 255));
        jLabel95.setText("Organizer Info");
        jPanel57.add(jLabel95, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jLabel96.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel96.setForeground(new java.awt.Color(255, 255, 255));
        jLabel96.setText("Email :");
        jPanel57.add(jLabel96, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, -1, -1));

        jLabel97.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel97.setForeground(new java.awt.Color(255, 255, 255));
        jLabel97.setText("ConfirmPassword:");
        jPanel57.add(jLabel97, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 374, 170, 40));

        Add_Organizer_Email_Field.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Add_Organizer_Email_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Organizer_Email_FieldActionPerformed(evt);
            }
        });
        jPanel57.add(Add_Organizer_Email_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 240, -1));

        AddOrganizerConfirmButton.setText("Confirm");
        AddOrganizerConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddOrganizerConfirmButtonActionPerformed(evt);
            }
        });
        jPanel57.add(AddOrganizerConfirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 540, -1, -1));

        Add_Organizer_Confirm_Field.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Add_Organizer_Confirm_Field.setForeground(new java.awt.Color(51, 51, 51));
        Add_Organizer_Confirm_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Organizer_Confirm_FieldActionPerformed(evt);
            }
        });
        jPanel57.add(Add_Organizer_Confirm_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 240, -1));

        jLabel99.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel99.setForeground(new java.awt.Color(255, 255, 255));
        jLabel99.setText("Password :");
        jPanel57.add(jLabel99, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, -1, -1));

        Add_Organizer_Password_Field.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Add_Organizer_Password_Field.setForeground(new java.awt.Color(51, 51, 51));
        Add_Organizer_Password_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Organizer_Password_FieldActionPerformed(evt);
            }
        });
        jPanel57.add(Add_Organizer_Password_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, 240, -1));

        jLabel100.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel100.setForeground(new java.awt.Color(255, 255, 255));
        jLabel100.setText("Username :");
        jPanel57.add(jLabel100, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, -1, -1));

        Add_Organizer_Username_Field.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Add_Organizer_Username_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Organizer_Username_FieldActionPerformed(evt);
            }
        });
        jPanel57.add(Add_Organizer_Username_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, 240, -1));

        jLabel101.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel101.setForeground(new java.awt.Color(255, 255, 255));
        jLabel101.setText("PhoneNo :");
        jPanel57.add(jLabel101, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 444, -1, 40));

        Add_Organizer_Phone_Field.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Add_Organizer_Phone_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Organizer_Phone_FieldActionPerformed(evt);
            }
        });
        jPanel57.add(Add_Organizer_Phone_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, 240, -1));

        jLabel58.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setText("Name :");
        jLabel58.setMaximumSize(new java.awt.Dimension(102, 24));
        jLabel58.setMinimumSize(new java.awt.Dimension(102, 24));
        jLabel58.setName(""); // NOI18N
        jLabel58.setPreferredSize(new java.awt.Dimension(102, 24));
        jPanel57.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, -1));

        Add_Organizer_Name_Field.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Add_Organizer_Name_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Organizer_Name_FieldActionPerformed(evt);
            }
        });
        jPanel57.add(Add_Organizer_Name_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 100, 238, -1));

        javax.swing.GroupLayout OrganizerAddPanelLayout = new javax.swing.GroupLayout(OrganizerAddPanel.getContentPane());
        OrganizerAddPanel.getContentPane().setLayout(OrganizerAddPanelLayout);
        OrganizerAddPanelLayout.setHorizontalGroup(
            OrganizerAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel57, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
        );
        OrganizerAddPanelLayout.setVerticalGroup(
            OrganizerAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel57, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
        );

        PaymentOption.setLocation(new java.awt.Point(100, 100));
        PaymentOption.setMinimumSize(new java.awt.Dimension(634, 191));
        PaymentOption.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jPanel60.setBackground(new java.awt.Color(0, 51, 51));
        jPanel60.setLayout(new java.awt.GridBagLayout());

        jLabel92.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel92.setForeground(new java.awt.Color(255, 255, 255));
        jLabel92.setText("Your Team has been Registered Successfully !! Would you like to ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 16, 0, 38);
        jPanel60.add(jLabel92, gridBagConstraints);

        PayNowButton.setText("Pay Now");
        PayNowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PayNowButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 160, 39, 0);
        jPanel60.add(PayNowButton, gridBagConstraints);

        PayLaterButton.setText("Pay Later");
        PayLaterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PayLaterButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 131, 39, 0);
        jPanel60.add(PayLaterButton, gridBagConstraints);

        javax.swing.GroupLayout PaymentOptionLayout = new javax.swing.GroupLayout(PaymentOption.getContentPane());
        PaymentOption.getContentPane().setLayout(PaymentOptionLayout);
        PaymentOptionLayout.setHorizontalGroup(
            PaymentOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentOptionLayout.createSequentialGroup()
                .addComponent(jPanel60, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PaymentOptionLayout.setVerticalGroup(
            PaymentOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel60, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        AddMatchDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AddMatchDialog.setTitle("Sign Up Form");
        AddMatchDialog.setBackground(new java.awt.Color(255, 255, 204));
        AddMatchDialog.setLocation(new java.awt.Point(300, 50));
        AddMatchDialog.setMinimumSize(new java.awt.Dimension(900, 690));
        AddMatchDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        AddMatchDialog.setType(java.awt.Window.Type.POPUP);

        jPanel61.setBackground(new java.awt.Color(0, 51, 51));
        jPanel61.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel93.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel93.setForeground(new java.awt.Color(255, 255, 255));
        jLabel93.setText("AddMatch");
        jPanel61.add(jLabel93, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 190, -1));

        jLabel94.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel94.setForeground(new java.awt.Color(255, 255, 255));
        jLabel94.setText("Date :");
        jPanel61.add(jLabel94, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 90, 40));

        SignUpButton1.setText("Add Match");
        SignUpButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMatchButtonActionPerformed(evt);
            }
        });
        jPanel61.add(SignUpButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 590, 100, -1));

        jLabel105.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel105.setForeground(new java.awt.Color(255, 255, 255));
        jLabel105.setText("Venue :");
        jPanel61.add(jLabel105, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 90, 30));

        jLabel106.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel106.setForeground(new java.awt.Color(255, 255, 255));
        jLabel106.setText("Team 1 : ");
        jPanel61.add(jLabel106, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 100, 40));

        jLabel108.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel108.setForeground(new java.awt.Color(255, 255, 255));
        jLabel108.setText("Team 2 :");
        jPanel61.add(jLabel108, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 90, 50));

        VenueComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel61.add(VenueComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 456, 190, 30));

        Team1ComboBox.setMaximumRowCount(20);
        jPanel61.add(Team1ComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 136, 190, 30));

        jLabel107.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel107.setForeground(new java.awt.Color(255, 255, 255));
        jLabel107.setText("Time :");
        jPanel61.add(jLabel107, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 90, 30));

        Team2ComboBox.setMaximumRowCount(20);
        jPanel61.add(Team2ComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 216, 190, 30));

        TimeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel61.add(TimeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 380, 190, 30));

        datetextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datetextfieldActionPerformed(evt);
            }
        });
        jPanel61.add(datetextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 294, 190, 30));

        OfficialComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel61.add(OfficialComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 536, 190, 30));

        jLabel121.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel121.setForeground(new java.awt.Color(255, 255, 255));
        jLabel121.setText("Allocate Official :");
        jPanel61.add(jLabel121, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 540, 150, -1));

        javax.swing.GroupLayout AddMatchDialogLayout = new javax.swing.GroupLayout(AddMatchDialog.getContentPane());
        AddMatchDialog.getContentPane().setLayout(AddMatchDialogLayout);
        AddMatchDialogLayout.setHorizontalGroup(
            AddMatchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel61, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AddMatchDialogLayout.setVerticalGroup(
            AddMatchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddMatchDialogLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel61, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        BasketballMatch.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        BasketballMatch.setTitle("Football Match Summary");
        BasketballMatch.setBackground(new java.awt.Color(0, 51, 51));
        BasketballMatch.setLocation(new java.awt.Point(120, 15));
        BasketballMatch.setMinimumSize(new java.awt.Dimension(1250, 740));
        BasketballMatch.setModal(true);
        BasketballMatch.getContentPane().setLayout(null);

        jPanel62.setBackground(new java.awt.Color(0, 51, 51));
        jPanel62.setLayout(new java.awt.GridBagLayout());

        BasketballMatchTeam2PlayerTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        BasketballMatchTeam2PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Player", "Points", "Steals"
            }
        ));
        BasketballMatchTeam2PlayerTable.setRowHeight(24);
        jScrollPane10.setViewportView(BasketballMatchTeam2PlayerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 510;
        gridBagConstraints.ipady = 336;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 311);
        jPanel62.add(jScrollPane10, gridBagConstraints);

        BasketballSummarySaveButton.setLabel("Save");
        BasketballSummarySaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BasketballSummarySaveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 30, 0, 0);
        jPanel62.add(BasketballSummarySaveButton, gridBagConstraints);

        BasketballMatchTeam2Score.setBackground(new java.awt.Color(0, 102, 102));
        BasketballMatchTeam2Score.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        BasketballMatchTeam2Score.setForeground(new java.awt.Color(255, 255, 255));
        BasketballMatchTeam2Score.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        BasketballMatchTeam2Score.setText("0");
        BasketballMatchTeam2Score.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BasketballMatchTeam2ScoreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(70, 30, 0, 0);
        jPanel62.add(BasketballMatchTeam2Score, gridBagConstraints);

        BasketballMatchTeam1Score.setBackground(new java.awt.Color(0, 102, 102));
        BasketballMatchTeam1Score.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        BasketballMatchTeam1Score.setForeground(new java.awt.Color(255, 255, 255));
        BasketballMatchTeam1Score.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        BasketballMatchTeam1Score.setText("0");
        BasketballMatchTeam1Score.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BasketballMatchTeam1ScoreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(70, 90, 0, 0);
        jPanel62.add(BasketballMatchTeam1Score, gridBagConstraints);

        BasketballMatchTeam2Name.setBackground(new java.awt.Color(0, 51, 51));
        BasketballMatchTeam2Name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        BasketballMatchTeam2Name.setForeground(new java.awt.Color(255, 255, 255));
        BasketballMatchTeam2Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 40, 40), 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 346;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(70, 70, 0, 0);
        jPanel62.add(BasketballMatchTeam2Name, gridBagConstraints);

        BasketballMatchTeam1Name.setBackground(new java.awt.Color(0, 51, 51));
        BasketballMatchTeam1Name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        BasketballMatchTeam1Name.setForeground(new java.awt.Color(255, 255, 255));
        BasketballMatchTeam1Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 40, 40), 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 256;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(70, 70, 0, 0);
        jPanel62.add(BasketballMatchTeam1Name, gridBagConstraints);

        jLabel102.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel102.setForeground(new java.awt.Color(255, 255, 255));
        jLabel102.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel102.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 32;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(80, 40, 0, 0);
        jPanel62.add(jLabel102, gridBagConstraints);

        BasketballMatchTeam1PlayerTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        BasketballMatchTeam1PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Player", "Points", "Steals"
            }
        ));
        BasketballMatchTeam1PlayerTable.setRowHeight(24);
        jScrollPane18.setViewportView(BasketballMatchTeam1PlayerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 450;
        gridBagConstraints.ipady = 336;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 60, 0, 0);
        jPanel62.add(jScrollPane18, gridBagConstraints);

        jLabel81.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(255, 255, 255));
        jLabel81.setText("Man Of the Match:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 70, 0, 0);
        jPanel62.add(jLabel81, gridBagConstraints);

        BasketballManofTheMatch.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        BasketballManofTheMatch.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 196;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 40, 0, 0);
        jPanel62.add(BasketballManofTheMatch, gridBagConstraints);

        jLabel31.setForeground(new java.awt.Color(0, 51, 51));
        jLabel31.setText("jLabel31");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 34;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 80, 0);
        jPanel62.add(jLabel31, gridBagConstraints);

        BasketballMatch.getContentPane().add(jPanel62);
        jPanel62.setBounds(0, 0, 1501, 760);

        ChangeMatchDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ChangeMatchDialog.setTitle("Sign Up Form");
        ChangeMatchDialog.setBackground(new java.awt.Color(255, 255, 204));
        ChangeMatchDialog.setLocation(new java.awt.Point(300, 50));
        ChangeMatchDialog.setMinimumSize(new java.awt.Dimension(900, 690));
        ChangeMatchDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        ChangeMatchDialog.setType(java.awt.Window.Type.POPUP);

        jPanel65.setBackground(new java.awt.Color(0, 51, 51));
        jPanel65.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel135.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel135.setForeground(new java.awt.Color(255, 255, 255));
        jLabel135.setText("ChangeMatch");
        jPanel65.add(jLabel135, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 240, -1));

        jLabel136.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel136.setForeground(new java.awt.Color(255, 255, 255));
        jLabel136.setText("Date :");
        jPanel65.add(jLabel136, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 90, 40));

        SignUpButton2.setText("Update Schedule");
        SignUpButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateScheduleActionPerformed(evt);
            }
        });
        jPanel65.add(SignUpButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 590, 130, -1));

        jLabel137.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel137.setForeground(new java.awt.Color(255, 255, 255));
        jLabel137.setText("Venue :");
        jPanel65.add(jLabel137, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, 90, 30));

        jLabel148.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel148.setForeground(new java.awt.Color(255, 255, 255));
        jLabel148.setText("Match Id : ");
        jPanel65.add(jLabel148, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 100, 40));

        VenueComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel65.add(VenueComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 470, 200, 30));

        MatchIdComboBox1.setMaximumRowCount(20);
        jPanel65.add(MatchIdComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, 200, 30));

        jLabel150.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel150.setForeground(new java.awt.Color(255, 255, 255));
        jLabel150.setText("Time :");
        jPanel65.add(jLabel150, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 90, 30));

        TimeComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel65.add(TimeComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, 200, 30));

        datetextfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datetextfield1ActionPerformed(evt);
            }
        });
        jPanel65.add(datetextfield1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 260, 200, 30));

        javax.swing.GroupLayout ChangeMatchDialogLayout = new javax.swing.GroupLayout(ChangeMatchDialog.getContentPane());
        ChangeMatchDialog.getContentPane().setLayout(ChangeMatchDialogLayout);
        ChangeMatchDialogLayout.setHorizontalGroup(
            ChangeMatchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ChangeMatchDialogLayout.setVerticalGroup(
            ChangeMatchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChangeMatchDialogLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel65, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sports Management");

        MainPanel.setBackground(new java.awt.Color(0, 100, 100));
        MainPanel.setLayout(new java.awt.BorderLayout());

        HeaderPanel.setBackground(new java.awt.Color(255, 255, 255));
        HeaderPanel.setMinimumSize(new java.awt.Dimension(100, 50));
        HeaderPanel.setPreferredSize(new java.awt.Dimension(671, 70));

        LogoPanel.setBackground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout LogoPanelLayout = new javax.swing.GroupLayout(LogoPanel);
        LogoPanel.setLayout(LogoPanelLayout);
        LogoPanelLayout.setHorizontalGroup(
            LogoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );
        LogoPanelLayout.setVerticalGroup(
            LogoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("FAST Sports Management ");

        LoginButton.setBackground(new java.awt.Color(255, 255, 255));
        LoginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LoginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LoginButtonMouseExited(evt);
            }
        });

        LogInLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        LogInLabel.setText("LogIn");

        javax.swing.GroupLayout LoginButtonLayout = new javax.swing.GroupLayout(LoginButton);
        LoginButton.setLayout(LoginButtonLayout);
        LoginButtonLayout.setHorizontalGroup(
            LoginButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginButtonLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(LogInLabel)
                .addGap(51, 51, 51))
        );
        LoginButtonLayout.setVerticalGroup(
            LoginButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginButtonLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(LogInLabel)
                .addGap(22, 22, 22))
        );

        SignUpHeaderButton.setBackground(new java.awt.Color(255, 255, 255));
        SignUpHeaderButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpHeaderButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SignUpHeaderButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SignUpHeaderButtonMouseExited(evt);
            }
        });

        Signuplabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Signuplabel.setText("SignUp");

        javax.swing.GroupLayout SignUpHeaderButtonLayout = new javax.swing.GroupLayout(SignUpHeaderButton);
        SignUpHeaderButton.setLayout(SignUpHeaderButtonLayout);
        SignUpHeaderButtonLayout.setHorizontalGroup(
            SignUpHeaderButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUpHeaderButtonLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(Signuplabel)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        SignUpHeaderButtonLayout.setVerticalGroup(
            SignUpHeaderButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignUpHeaderButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Signuplabel)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addComponent(LogoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(SignUpHeaderButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LogoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(LoginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SignUpHeaderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(HeaderPanel, java.awt.BorderLayout.PAGE_START);

        MenuPanel.setBackground(new java.awt.Color(0, 51, 51));
        MenuPanel.setLayout(new java.awt.GridLayout(12, 1));

        homemenu.setBackground(new java.awt.Color(0, 51, 51));
        homemenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        homemenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homemenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homemenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homemenuMouseExited(evt);
            }
        });
        homemenu.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Home ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 63;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 15, 10, 6);
        homemenu.add(jLabel4, gridBagConstraints);

        jLabel123.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_home_24px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        homemenu.add(jLabel123, gridBagConstraints);

        MenuPanel.add(homemenu);

        CricketMenu.setBackground(new java.awt.Color(0, 51, 51));
        CricketMenu.setForeground(new java.awt.Color(255, 255, 255));
        CricketMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CricketMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CricketMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CricketMenuMouseExited(evt);
            }
        });
        CricketMenu.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cricket");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 48;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 21, 10, 20);
        CricketMenu.add(jLabel6, gridBagConstraints);

        jLabel124.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_cricket_26px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        CricketMenu.add(jLabel124, gridBagConstraints);

        MenuPanel.add(CricketMenu);

        FootballMenu.setBackground(new java.awt.Color(0, 51, 51));
        FootballMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FootballMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FootballMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                FootballMenuMouseExited(evt);
            }
        });
        FootballMenu.setLayout(new java.awt.GridBagLayout());

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Football");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 18, 0, 23);
        FootballMenu.add(jLabel8, gridBagConstraints);

        jLabel125.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_soccer_24px_1.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 16, 0);
        FootballMenu.add(jLabel125, gridBagConstraints);

        MenuPanel.add(FootballMenu);

        VolleyballMenu.setBackground(new java.awt.Color(0, 51, 51));
        VolleyballMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VolleyballMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VolleyballMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VolleyballMenuMouseExited(evt);
            }
        });
        VolleyballMenu.setLayout(new java.awt.GridBagLayout());

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Basketball");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 20, 0, 21);
        VolleyballMenu.add(jLabel10, gridBagConstraints);

        jLabel126.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_basketball_net_30px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 16, 0);
        VolleyballMenu.add(jLabel126, gridBagConstraints);

        MenuPanel.add(VolleyballMenu);

        RegisterTeamMenu.setBackground(new java.awt.Color(0, 51, 51));
        RegisterTeamMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterTeamMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RegisterTeamMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RegisterTeamMenuMouseExited(evt);
            }
        });
        RegisterTeamMenu.setLayout(new java.awt.GridBagLayout());

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Register Team");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 14, 30, 7);
        RegisterTeamMenu.add(jLabel14, gridBagConstraints);

        jLabel127.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_registration_26px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 30, 0);
        RegisterTeamMenu.add(jLabel127, gridBagConstraints);

        MenuPanel.add(RegisterTeamMenu);

        UsersListMenu.setBackground(new java.awt.Color(0, 51, 51));
        UsersListMenu.setForeground(new java.awt.Color(255, 255, 255));
        UsersListMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsersListMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UsersListMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UsersListMenuMouseExited(evt);
            }
        });
        UsersListMenu.setLayout(new java.awt.GridBagLayout());

        jLabel78.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(255, 255, 255));
        jLabel78.setText("Players");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 34;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 16, 31);
        UsersListMenu.add(jLabel78, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 40;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 16, 0);
        UsersListMenu.add(jLabel128, gridBagConstraints);

        jLabel129.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_user_account_24px_1.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 10, 0, 0);
        UsersListMenu.add(jLabel129, gridBagConstraints);

        MenuPanel.add(UsersListMenu);

        OrganizersListMenu.setBackground(new java.awt.Color(0, 51, 51));
        OrganizersListMenu.setForeground(new java.awt.Color(255, 255, 255));
        OrganizersListMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrganizersListMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                OrganizersListMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                OrganizersListMenuMouseExited(evt);
            }
        });
        OrganizersListMenu.setLayout(new java.awt.GridBagLayout());

        jLabel79.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(255, 255, 255));
        jLabel79.setText("Organizers");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 20, 0, 21);
        OrganizersListMenu.add(jLabel79, gridBagConstraints);

        jLabel130.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_planner_26px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 20, 0);
        OrganizersListMenu.add(jLabel130, gridBagConstraints);

        MenuPanel.add(OrganizersListMenu);

        NotificationMenu.setBackground(new java.awt.Color(0, 51, 51));
        NotificationMenu.setForeground(new java.awt.Color(255, 255, 255));
        NotificationMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NotificationMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NotificationMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NotificationMenuMouseExited(evt);
            }
        });
        NotificationMenu.setLayout(new java.awt.GridBagLayout());

        jLabel82.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(255, 255, 255));
        jLabel82.setText("Notification");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 19, 0, 22);
        NotificationMenu.add(jLabel82, gridBagConstraints);

        jLabel131.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_topic_push_notification_24px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 16, 0);
        NotificationMenu.add(jLabel131, gridBagConstraints);

        MenuPanel.add(NotificationMenu);

        UserProfileMenu.setBackground(new java.awt.Color(0, 51, 51));
        UserProfileMenu.setForeground(new java.awt.Color(255, 255, 255));
        UserProfileMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserProfileMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UserProfileMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UserProfileMenuMouseExited(evt);
            }
        });
        UserProfileMenu.setLayout(new java.awt.GridBagLayout());

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("User Profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 19, 0, 22);
        UserProfileMenu.add(jLabel16, gridBagConstraints);

        jLabel132.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_male_user_26px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 20, 0);
        UserProfileMenu.add(jLabel132, gridBagConstraints);

        MenuPanel.add(UserProfileMenu);

        PaymentMenu.setBackground(new java.awt.Color(0, 51, 51));
        PaymentMenu.setForeground(new java.awt.Color(255, 255, 255));
        PaymentMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PaymentMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaymentMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaymentMenuMouseExited(evt);
            }
        });
        PaymentMenu.setLayout(new java.awt.GridBagLayout());

        jLabel90.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel90.setForeground(new java.awt.Color(255, 255, 255));
        jLabel90.setText("Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 51);
        PaymentMenu.add(jLabel90, gridBagConstraints);

        jLabel133.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_payment_history_32px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 30, 0);
        PaymentMenu.add(jLabel133, gridBagConstraints);

        MenuPanel.add(PaymentMenu);

        CertificateMenu.setBackground(new java.awt.Color(0, 51, 51));
        CertificateMenu.setForeground(new java.awt.Color(255, 255, 255));
        CertificateMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CertificateMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CertificateMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CertificateMenuMouseExited(evt);
            }
        });
        CertificateMenu.setLayout(new java.awt.GridBagLayout());

        jLabel110.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel110.setForeground(new java.awt.Color(255, 255, 255));
        jLabel110.setText("Certificate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 41);
        CertificateMenu.add(jLabel110, gridBagConstraints);

        jLabel134.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_certificate_26px.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 26, 0);
        CertificateMenu.add(jLabel134, gridBagConstraints);

        MenuPanel.add(CertificateMenu);

        MainPanel.add(MenuPanel, java.awt.BorderLayout.LINE_START);

        InnerMainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        InnerMainPanel.setForeground(new java.awt.Color(255, 255, 255));
        InnerMainPanel.setLayout(new java.awt.CardLayout());

        HomePanel.setBackground(new java.awt.Color(0, 51, 51));
        HomePanel.setForeground(new java.awt.Color(255, 255, 255));
        HomePanel.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(0, 51, 51));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Home");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 237, 25, 453);
        jPanel6.add(jLabel11, gridBagConstraints);

        HomePanel.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridBagLayout());
        HomePanel.add(jPanel8, java.awt.BorderLayout.LINE_END);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.GridBagLayout());
        HomePanel.add(jPanel9, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(0, 90, 92));
        jPanel2.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Basketball");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(50, 200, 140, 55);

        jLabel138.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_basketball_player_240px.png"))); // NOI18N
        jLabel138.setText("jLabel138");
        jPanel2.add(jLabel138);
        jLabel138.setBounds(0, 0, 210, 190);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 209;
        gridBagConstraints.ipady = 259;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(90, 110, 66, 46);
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(20, 50, 50));
        jPanel3.setLayout(null);

        jLabel144.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel144.setForeground(new java.awt.Color(255, 255, 255));
        jLabel144.setText("Last Date For Registration :");
        jPanel3.add(jLabel144);
        jLabel144.setBounds(40, 80, 260, 40);

        jLabel145.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel145.setForeground(new java.awt.Color(255, 255, 255));
        jLabel145.setText("13th May, 2020");
        jPanel3.add(jLabel145);
        jLabel145.setBounds(390, 80, 200, 40);

        jLabel146.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel146.setForeground(new java.awt.Color(255, 255, 255));
        jLabel146.setText("Start Date :");
        jPanel3.add(jLabel146);
        jLabel146.setBounds(40, 30, 120, 40);

        jLabel147.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel147.setForeground(new java.awt.Color(255, 255, 255));
        jLabel147.setText("15th May, 2020");
        jPanel3.add(jLabel147);
        jLabel147.setBounds(390, 30, 200, 40);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 859;
        gridBagConstraints.ipady = 139;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 80, 0, 46);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel42.setBackground(new java.awt.Color(0, 90, 90));
        jPanel42.setLayout(null);

        jLabel139.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel139.setForeground(new java.awt.Color(255, 255, 255));
        jLabel139.setText("Football");
        jPanel42.add(jLabel139);
        jLabel139.setBounds(60, 200, 110, 55);

        jLabel140.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_soccer_ball_200px.png"))); // NOI18N
        jLabel140.setText("jLabel137");
        jPanel42.add(jLabel140);
        jLabel140.setBounds(10, 20, 200, 160);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 209;
        gridBagConstraints.ipady = 259;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(90, 120, 66, 0);
        jPanel1.add(jPanel42, gridBagConstraints);

        jPanel64.setBackground(new java.awt.Color(0, 90, 90));
        jPanel64.setLayout(null);

        jLabel141.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel141.setForeground(new java.awt.Color(255, 255, 255));
        jLabel141.setText("Cricket");
        jPanel64.add(jLabel141);
        jLabel141.setBounds(50, 200, 110, 55);

        jLabel142.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_cricketer_60px.png"))); // NOI18N
        jPanel64.add(jLabel142);
        jLabel142.setBounds(30, 40, 110, 120);

        jLabel143.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_baseball_ball_60px.png"))); // NOI18N
        jPanel64.add(jLabel143);
        jLabel143.setBounds(110, 90, 70, 100);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 209;
        gridBagConstraints.ipady = 259;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(90, 80, 66, 0);
        jPanel1.add(jPanel64, gridBagConstraints);

        HomePanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(HomePanel, "card5");

        FootballPanel.setBackground(new java.awt.Color(0, 51, 51));
        FootballPanel.setForeground(new java.awt.Color(255, 255, 255));
        FootballPanel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        FootballPanel.setOpaque(true);

        Teams_Football.setBackground(new java.awt.Color(255, 255, 255));
        Teams_Football.setLayout(new java.awt.BorderLayout());

        jPanel25.setBackground(new java.awt.Color(0, 51, 51));
        jPanel25.setLayout(new java.awt.GridBagLayout());

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Teams Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 425);
        jPanel25.add(jLabel29, gridBagConstraints);

        Teams_Football.add(jPanel25, java.awt.BorderLayout.PAGE_START);

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));
        jPanel27.setLayout(new java.awt.GridBagLayout());

        Teams_Football_data.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Teams_Football_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id#", "Team Name", "Captain", "PayStatus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Teams_Football_data.setColumnSelectionAllowed(true);
        Teams_Football_data.setRowHeight(26);
        Teams_Football_data.setRowMargin(3);
        Teams_Football_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Teams_Football_dataMouseClicked(evt);
            }
        });
        Teams_Football_scroller.setViewportView(Teams_Football_data);
        Teams_Football_data.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 930;
        gridBagConstraints.ipady = 376;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 49);
        jPanel27.add(Teams_Football_scroller, gridBagConstraints);

        Remove_Football_team_Button.setText("Remove Unpaid Teams");
        Remove_Football_team_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_Football_team_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 390, 58, 0);
        jPanel27.add(Remove_Football_team_Button, gridBagConstraints);

        Teams_Football.add(jPanel27, java.awt.BorderLayout.CENTER);

        FootballPanel.addTab("Teams", Teams_Football);

        Points_Football.setBackground(new java.awt.Color(255, 255, 255));
        Points_Football.setLayout(new java.awt.BorderLayout());

        jPanel20.setBackground(new java.awt.Color(0, 51, 51));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Points Table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 425);
        jPanel20.add(jLabel3, gridBagConstraints);

        Points_Football.add(jPanel20, java.awt.BorderLayout.PAGE_START);

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setLayout(new java.awt.GridBagLayout());

        PointsTable_Football.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        PointsTable_Football.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Position", "Team Name", "MatchesPlayed", "MatchesWon", "MatchesLost", "MatchesTied", "Points"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PointsTable_Football.setRowHeight(26);
        PointsTable_Football.setRowMargin(3);
        Points_Volley_Scroller1.setViewportView(PointsTable_Football);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 800;
        gridBagConstraints.ipady = 416;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(21, 20, 76, 20);
        jPanel28.add(Points_Volley_Scroller1, gridBagConstraints);

        Points_Football.add(jPanel28, java.awt.BorderLayout.CENTER);

        FootballPanel.addTab("Points Table", Points_Football);

        Fixtures_Football.setBackground(new java.awt.Color(255, 255, 255));
        Fixtures_Football.setLayout(new java.awt.BorderLayout());

        jPanel29.setBackground(new java.awt.Color(0, 51, 51));
        jPanel29.setLayout(new java.awt.GridBagLayout());

        jLabel36.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Fixtures Table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 406);
        jPanel29.add(jLabel36, gridBagConstraints);

        Fixtures_Football.add(jPanel29, java.awt.BorderLayout.PAGE_START);

        jPanel31.setBackground(new java.awt.Color(255, 255, 255));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel39.setBackground(new java.awt.Color(255, 255, 255));
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("jLabel20");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 792;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel31.add(jLabel39, gridBagConstraints);

        Fixtures_Football_Scroller.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Fixtures_Football_ScrollerMouseClicked(evt);
            }
        });

        Fixtures_Football_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Fixtures_Football_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Team1", "Date", "Time", "Venue", "Team2", "status", "Organizer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Fixtures_Football_Table.setRowHeight(26);
        Fixtures_Football_Table.setRowMargin(3);
        Fixtures_Football_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Fixtures_Football_TableMouseClicked(evt);
            }
        });
        Fixtures_Football_Scroller.setViewportView(Fixtures_Football_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1090;
        gridBagConstraints.ipady = 426;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 29);
        jPanel31.add(Fixtures_Football_Scroller, gridBagConstraints);

        Football_Add_Match_Button.setText("Add Match");
        Football_Add_Match_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Football_Add_Match_ButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 310, 0, 0);
        jPanel31.add(Football_Add_Match_Button, gridBagConstraints);

        Change_Football_Match_Button.setText("Update Match");
        Change_Football_Match_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Football_Match_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 230, 0, 0);
        jPanel31.add(Change_Football_Match_Button, gridBagConstraints);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("jLabel9");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 34;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 120, 16, 0);
        jPanel31.add(jLabel9, gridBagConstraints);

        Fixtures_Football.add(jPanel31, java.awt.BorderLayout.CENTER);

        FootballPanel.addTab("Fixtures", Fixtures_Football);

        Football_Players_Scores.setBackground(new java.awt.Color(255, 255, 255));
        Football_Players_Scores.setLayout(new java.awt.BorderLayout());

        jPanel72.setBackground(new java.awt.Color(0, 51, 51));
        jPanel72.setLayout(new java.awt.GridBagLayout());

        jLabel50.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("Player Scores");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 406);
        jPanel72.add(jLabel50, gridBagConstraints);

        Football_Players_Scores.add(jPanel72, java.awt.BorderLayout.PAGE_START);

        jPanel73.setBackground(new java.awt.Color(255, 255, 255));
        jPanel73.setLayout(new java.awt.GridBagLayout());
        Football_Players_Scores.add(jPanel73, java.awt.BorderLayout.PAGE_END);

        jPanel74.setBackground(new java.awt.Color(255, 255, 255));
        jPanel74.setLayout(new java.awt.GridBagLayout());

        Football_Assist_Scorers_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Football_Assist_Scorers_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Name ", "TotalAssists"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Football_Assist_Scorers_Table.setRowHeight(26);
        Football_Assist_Scorers_Table.setRowMargin(3);
        Football_Assist_Scorers_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Football_Assist_Scorers_TableMouseClicked(evt);
            }
        });
        Fixtures_Cricket_Scroller5.setViewportView(Football_Assist_Scorers_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 710;
        gridBagConstraints.ipady = 446;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 0, 68);
        jPanel74.add(Fixtures_Cricket_Scroller5, gridBagConstraints);

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("jLabel17");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 230, 11, 0);
        jPanel74.add(jLabel26, gridBagConstraints);

        Football_Goal_Scorers_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Football_Goal_Scorers_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Name ", "TotalGoals"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Football_Goal_Scorers_Table.setRowHeight(26);
        Football_Goal_Scorers_Table.setRowMargin(3);
        Football_Goal_Scorers_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Football_Goal_Scorers_TableMouseClicked(evt);
            }
        });
        Fixtures_Cricket_Scroller6.setViewportView(Football_Goal_Scorers_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 710;
        gridBagConstraints.ipady = 446;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 0, 0);
        jPanel74.add(Fixtures_Cricket_Scroller6, gridBagConstraints);

        Football_Players_Scores.add(jPanel74, java.awt.BorderLayout.CENTER);

        FootballPanel.addTab("Top Scorers", Football_Players_Scores);

        InnerMainPanel.add(FootballPanel, "card2");

        BasketballPanel.setBackground(new java.awt.Color(0, 51, 51));
        BasketballPanel.setForeground(new java.awt.Color(255, 255, 255));
        BasketballPanel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        BasketballPanel.setOpaque(true);

        Teams_Basketball.setBackground(new java.awt.Color(255, 255, 255));
        Teams_Basketball.setLayout(new java.awt.BorderLayout());

        jPanel22.setBackground(new java.awt.Color(0, 51, 51));
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Teams Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 425);
        jPanel22.add(jLabel25, gridBagConstraints);

        Teams_Basketball.add(jPanel22, java.awt.BorderLayout.PAGE_START);

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));
        jPanel24.setLayout(new java.awt.GridBagLayout());

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("jLabel20");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 1326;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel24.add(jLabel28, gridBagConstraints);

        Teams_Basketball_data.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Teams_Basketball_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id#", "Team Name", "Captain", "PayStatus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Teams_Basketball_data.setRowHeight(26);
        Teams_Basketball_data.setRowMargin(3);
        Teams_Basketball_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Teams_Basketball_dataMouseClicked(evt);
            }
        });
        Teams_Basketball_scroller.setViewportView(Teams_Basketball_data);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1060;
        gridBagConstraints.ipady = 366;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(24, 20, 0, 0);
        jPanel24.add(Teams_Basketball_scroller, gridBagConstraints);

        Remove_Basketball_team_button.setText("Remove Team");
        Remove_Basketball_team_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_Basketball_team_buttonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 490, 32, 0);
        jPanel24.add(Remove_Basketball_team_button, gridBagConstraints);

        Teams_Basketball.add(jPanel24, java.awt.BorderLayout.CENTER);

        BasketballPanel.addTab("Teams", Teams_Basketball);

        Points_Basketball.setBackground(new java.awt.Color(255, 255, 255));
        Points_Basketball.setLayout(new java.awt.BorderLayout());

        jPanel5.setBackground(new java.awt.Color(0, 51, 51));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Points Table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 425);
        jPanel5.add(jLabel1, gridBagConstraints);

        Points_Basketball.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1930, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        Points_Basketball.add(jPanel17, java.awt.BorderLayout.PAGE_END);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("jLabel13");
        Points_Basketball.add(jLabel13, java.awt.BorderLayout.LINE_START);

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("jLabel15");
        Points_Basketball.add(jLabel15, java.awt.BorderLayout.LINE_END);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setLayout(new java.awt.BorderLayout());

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("jLabel20");
        jPanel15.add(jLabel20, java.awt.BorderLayout.PAGE_START);

        PointsTableBasketball.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        PointsTableBasketball.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Position", "Team Name", "MatchesPlayed", "MatchesWon", "MatchesLost", "MatchesTied", "Points"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PointsTableBasketball.setRowHeight(26);
        PointsTableBasketball.setRowMargin(3);
        Points_Basketball_Scroller.setViewportView(PointsTableBasketball);

        jPanel15.add(Points_Basketball_Scroller, java.awt.BorderLayout.CENTER);

        Points_Basketball.add(jPanel15, java.awt.BorderLayout.CENTER);

        BasketballPanel.addTab("Points Table", Points_Basketball);

        Fixtures_Basketball.setBackground(new java.awt.Color(255, 255, 255));
        Fixtures_Basketball.setLayout(new java.awt.BorderLayout());

        jPanel16.setBackground(new java.awt.Color(0, 51, 51));
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Fixtures Table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 406);
        jPanel16.add(jLabel21, gridBagConstraints);

        Fixtures_Basketball.add(jPanel16, java.awt.BorderLayout.PAGE_START);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("jLabel20");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 1146;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel19.add(jLabel24, gridBagConstraints);

        Fixtures_Basketball_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Fixtures_Basketball_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Team1", "Date", "Time", "Venue", "Team2", "Status", "Organizer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Fixtures_Basketball_Table.setRowHeight(26);
        Fixtures_Basketball_Table.setRowMargin(3);
        Fixtures_Basketball_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Fixtures_Basketball_TableMouseClicked(evt);
            }
        });
        Fixtures_Basketball_Scroller.setViewportView(Fixtures_Basketball_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1060;
        gridBagConstraints.ipady = 356;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 34, 0, 0);
        jPanel19.add(Fixtures_Basketball_Scroller, gridBagConstraints);

        Basketball_Add_Match_Button.setText("Add Match");
        Basketball_Add_Match_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Basketball_Add_Match_ButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 340, 0, 0);
        jPanel19.add(Basketball_Add_Match_Button, gridBagConstraints);

        Change_Basketball_Match_Button.setText("Update Match");
        Change_Basketball_Match_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Basketball_Match_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 180, 0, 0);
        jPanel19.add(Change_Basketball_Match_Button, gridBagConstraints);

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("jLabel18");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 160, 47, 0);
        jPanel19.add(jLabel18, gridBagConstraints);

        Fixtures_Basketball.add(jPanel19, java.awt.BorderLayout.CENTER);

        BasketballPanel.addTab("Fixtures", Fixtures_Basketball);

        Basketball_Players_Scores.setBackground(new java.awt.Color(255, 255, 255));
        Basketball_Players_Scores.setLayout(new java.awt.BorderLayout());

        jPanel69.setBackground(new java.awt.Color(0, 51, 51));
        jPanel69.setLayout(new java.awt.GridBagLayout());

        jLabel49.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("Player Scores");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 406);
        jPanel69.add(jLabel49, gridBagConstraints);

        Basketball_Players_Scores.add(jPanel69, java.awt.BorderLayout.PAGE_START);

        jPanel70.setBackground(new java.awt.Color(255, 255, 255));
        jPanel70.setLayout(new java.awt.GridBagLayout());
        Basketball_Players_Scores.add(jPanel70, java.awt.BorderLayout.PAGE_END);

        jPanel71.setBackground(new java.awt.Color(255, 255, 255));
        jPanel71.setLayout(new java.awt.GridBagLayout());

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("jLabel17");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 1000, 11, 0);
        jPanel71.add(jLabel23, gridBagConstraints);

        Basketball_Point_Scorers_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Basketball_Point_Scorers_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Name ", "TotalPoints"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Basketball_Point_Scorers_Table.setRowHeight(26);
        Basketball_Point_Scorers_Table.setRowMargin(3);
        Basketball_Point_Scorers_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Basketball_Point_Scorers_TableMouseClicked(evt);
            }
        });
        Basketball_top_dunkers.setViewportView(Basketball_Point_Scorers_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1110;
        gridBagConstraints.ipady = 446;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 160, 0, 194);
        jPanel71.add(Basketball_top_dunkers, gridBagConstraints);

        Basketball_Players_Scores.add(jPanel71, java.awt.BorderLayout.CENTER);

        BasketballPanel.addTab("Top Scorers", Basketball_Players_Scores);

        InnerMainPanel.add(BasketballPanel, "card2");

        CricketPanel.setBackground(new java.awt.Color(0, 51, 51));
        CricketPanel.setForeground(new java.awt.Color(255, 255, 255));
        CricketPanel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CricketPanel.setOpaque(true);

        Teams_Cricket.setBackground(new java.awt.Color(255, 255, 255));
        Teams_Cricket.setLayout(new java.awt.BorderLayout());

        jPanel32.setBackground(new java.awt.Color(0, 51, 51));
        jPanel32.setLayout(new java.awt.GridBagLayout());

        jLabel40.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Teams Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 425);
        jPanel32.add(jLabel40, gridBagConstraints);

        Teams_Cricket.add(jPanel32, java.awt.BorderLayout.PAGE_START);

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));
        jPanel33.setLayout(new java.awt.GridBagLayout());

        Remove_Cricket_Team_Button.setText("Remove Team");
        Remove_Cricket_Team_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_Cricket_Team_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 353, 42, 413);
        jPanel33.add(Remove_Cricket_Team_Button, gridBagConstraints);

        Teams_Cricket.add(jPanel33, java.awt.BorderLayout.PAGE_END);

        jLabel41.setBackground(new java.awt.Color(255, 255, 255));
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("jLabel13");
        Teams_Cricket.add(jLabel41, java.awt.BorderLayout.LINE_START);

        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("jLabel15");
        Teams_Cricket.add(jLabel42, java.awt.BorderLayout.LINE_END);

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));
        jPanel34.setLayout(new java.awt.BorderLayout());

        jLabel43.setBackground(new java.awt.Color(255, 255, 255));
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("jLabel20");
        jPanel34.add(jLabel43, java.awt.BorderLayout.PAGE_START);

        Teams_Cricket_data.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Teams_Cricket_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id#", "Team Name", "Captain", "PayStatus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Teams_Cricket_data.setRowHeight(26);
        Teams_Cricket_data.setRowMargin(3);
        Teams_Cricket_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Teams_Cricket_dataMouseClicked(evt);
            }
        });
        Teams_Cricket_scroller.setViewportView(Teams_Cricket_data);

        jPanel34.add(Teams_Cricket_scroller, java.awt.BorderLayout.CENTER);

        Teams_Cricket.add(jPanel34, java.awt.BorderLayout.CENTER);

        CricketPanel.addTab("Teams", Teams_Cricket);

        Points_Cricket.setBackground(new java.awt.Color(255, 255, 255));
        Points_Cricket.setLayout(new java.awt.BorderLayout());

        jPanel35.setBackground(new java.awt.Color(0, 51, 51));
        jPanel35.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Points Table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 425);
        jPanel35.add(jLabel5, gridBagConstraints);

        Points_Cricket.add(jPanel35, java.awt.BorderLayout.PAGE_START);

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        Points_Cricket.add(jPanel36, java.awt.BorderLayout.PAGE_END);

        jLabel44.setBackground(new java.awt.Color(255, 255, 255));
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("jLabel13");
        Points_Cricket.add(jLabel44, java.awt.BorderLayout.LINE_START);

        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("jLabel15");
        Points_Cricket.add(jLabel45, java.awt.BorderLayout.LINE_END);

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));
        jPanel37.setLayout(new java.awt.BorderLayout());

        jLabel46.setBackground(new java.awt.Color(255, 255, 255));
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("jLabel20");
        jPanel37.add(jLabel46, java.awt.BorderLayout.PAGE_START);

        PointsTable_Cricket.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        PointsTable_Cricket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Position", "Team Name", "MatchesPlayed", "MatchesWon", "MatchesLost", "MatchesTied", "Points"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PointsTable_Cricket.setRowHeight(26);
        PointsTable_Cricket.setRowMargin(3);
        Points_Volley_Scroller2.setViewportView(PointsTable_Cricket);

        jPanel37.add(Points_Volley_Scroller2, java.awt.BorderLayout.CENTER);

        Points_Cricket.add(jPanel37, java.awt.BorderLayout.CENTER);

        CricketPanel.addTab("Points Table", Points_Cricket);

        Fixtures_Cricket.setBackground(new java.awt.Color(255, 255, 255));
        Fixtures_Cricket.setLayout(new java.awt.BorderLayout());

        jPanel38.setBackground(new java.awt.Color(0, 51, 51));
        jPanel38.setLayout(new java.awt.GridBagLayout());

        jLabel47.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Fixtures Table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 406);
        jPanel38.add(jLabel47, gridBagConstraints);

        Fixtures_Cricket.add(jPanel38, java.awt.BorderLayout.PAGE_START);

        jPanel39.setBackground(new java.awt.Color(255, 255, 255));
        jPanel39.setLayout(new java.awt.GridBagLayout());
        Fixtures_Cricket.add(jPanel39, java.awt.BorderLayout.PAGE_END);

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setLayout(new java.awt.GridBagLayout());

        Fixtures_Cricket_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Fixtures_Cricket_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id #", "Team1", "Date", "Time", "Venue", "Team2", "Status", "Organizer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Fixtures_Cricket_Table.setRowHeight(26);
        Fixtures_Cricket_Table.setRowMargin(3);
        Fixtures_Cricket_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Fixtures_Cricket_TableMouseClicked(evt);
            }
        });
        Fixtures_Cricket_Scroller.setViewportView(Fixtures_Cricket_Table);
        if (Fixtures_Cricket_Table.getColumnModel().getColumnCount() > 0) {
            Fixtures_Cricket_Table.getColumnModel().getColumn(7).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1060;
        gridBagConstraints.ipady = 446;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 0, 42);
        jPanel40.add(Fixtures_Cricket_Scroller, gridBagConstraints);

        Cricket_Add_Match_Button.setText("Add Match");
        Cricket_Add_Match_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cricket_Add_Match_ButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 340, 0, 0);
        jPanel40.add(Cricket_Add_Match_Button, gridBagConstraints);

        Change_Cricket_Match_Button.setText("Update Match");
        Change_Cricket_Match_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Cricket_Match_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 220, 0, 0);
        jPanel40.add(Change_Cricket_Match_Button, gridBagConstraints);

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("jLabel17");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 242, 18, 0);
        jPanel40.add(jLabel17, gridBagConstraints);

        Fixtures_Cricket.add(jPanel40, java.awt.BorderLayout.CENTER);

        CricketPanel.addTab("Fixtures", Fixtures_Cricket);

        Cricket_Players_Scores.setBackground(new java.awt.Color(255, 255, 255));
        Cricket_Players_Scores.setLayout(new java.awt.BorderLayout());

        jPanel66.setBackground(new java.awt.Color(0, 51, 51));
        jPanel66.setLayout(new java.awt.GridBagLayout());

        jLabel48.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Player Scores");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 264, 24, 406);
        jPanel66.add(jLabel48, gridBagConstraints);

        Cricket_Players_Scores.add(jPanel66, java.awt.BorderLayout.PAGE_START);

        jPanel67.setBackground(new java.awt.Color(255, 255, 255));
        jPanel67.setLayout(new java.awt.GridBagLayout());
        Cricket_Players_Scores.add(jPanel67, java.awt.BorderLayout.PAGE_END);

        jPanel68.setBackground(new java.awt.Color(255, 255, 255));
        jPanel68.setLayout(new java.awt.GridBagLayout());

        Cricket_Wicket_Takers_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Cricket_Wicket_Takers_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Name", "Totalwickets"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Cricket_Wicket_Takers_Table.setRowHeight(26);
        Cricket_Wicket_Takers_Table.setRowMargin(3);
        Cricket_Wicket_Takers_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cricket_Wicket_Takers_TableMouseClicked(evt);
            }
        });
        Fixtures_Cricket_Scroller1.setViewportView(Cricket_Wicket_Takers_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 710;
        gridBagConstraints.ipady = 446;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 0, 68);
        jPanel68.add(Fixtures_Cricket_Scroller1, gridBagConstraints);

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("jLabel17");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 230, 11, 0);
        jPanel68.add(jLabel22, gridBagConstraints);

        Cricket_Run_Scorers_Table.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Cricket_Run_Scorers_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Name ", "TotalRuns"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Cricket_Run_Scorers_Table.setRowHeight(26);
        Cricket_Run_Scorers_Table.setRowMargin(3);
        Cricket_Run_Scorers_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cricket_Run_Scorers_TableMouseClicked(evt);
            }
        });
        Fixtures_Cricket_Scroller2.setViewportView(Cricket_Run_Scorers_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 710;
        gridBagConstraints.ipady = 446;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 0, 0);
        jPanel68.add(Fixtures_Cricket_Scroller2, gridBagConstraints);

        Cricket_Players_Scores.add(jPanel68, java.awt.BorderLayout.CENTER);

        CricketPanel.addTab("Top Scorers", Cricket_Players_Scores);

        InnerMainPanel.add(CricketPanel, "card2");

        RegisterTeamPanel.setBackground(new java.awt.Color(0, 51, 51));
        RegisterTeamPanel.setForeground(new java.awt.Color(255, 255, 255));
        RegisterTeamPanel.setLayout(new java.awt.BorderLayout());

        jPanel10.setBackground(new java.awt.Color(0, 51, 51));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel59.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 255, 255));
        jLabel59.setText("Register Team");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 237, 25, 453);
        jPanel10.add(jLabel59, gridBagConstraints);

        RegisterTeamPanel.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        RegisterInnerPanel.setBackground(new java.awt.Color(255, 255, 255));
        RegisterInnerPanel.setLayout(new java.awt.CardLayout());

        SelectSportPanel.setBackground(new java.awt.Color(255, 255, 255));
        SelectSportPanel.setLayout(null);

        jLabel72.setBackground(new java.awt.Color(255, 255, 255));
        jLabel72.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel72.setText("Select Tournamnet :");
        SelectSportPanel.add(jLabel72);
        jLabel72.setBounds(90, 40, 180, 24);

        RegisterVolleyballChoice.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegisterVolleyballChoice.setForeground(new java.awt.Color(255, 255, 255));
        RegisterVolleyballChoice.setText("Basketball");
        RegisterVolleyballChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterVolleyballChoiceActionPerformed(evt);
            }
        });
        SelectSportPanel.add(RegisterVolleyballChoice);
        RegisterVolleyballChoice.setBounds(710, 170, 170, 120);

        RegisterFootballChoice.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegisterFootballChoice.setForeground(new java.awt.Color(255, 255, 255));
        RegisterFootballChoice.setText("Football");
        RegisterFootballChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterFootballChoiceActionPerformed(evt);
            }
        });
        SelectSportPanel.add(RegisterFootballChoice);
        RegisterFootballChoice.setBounds(130, 170, 170, 120);

        RegisterCricketChoice.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegisterCricketChoice.setForeground(new java.awt.Color(255, 255, 255));
        RegisterCricketChoice.setText("Cricket");
        RegisterCricketChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterCricketChoiceActionPerformed(evt);
            }
        });
        SelectSportPanel.add(RegisterCricketChoice);
        RegisterCricketChoice.setBounds(420, 170, 170, 120);

        RegisterInnerPanel.add(SelectSportPanel, "card2");

        TeamInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        TeamInfoPanel.setLayout(new java.awt.GridBagLayout());

        jLabel76.setBackground(new java.awt.Color(255, 255, 255));
        jLabel76.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel76.setText("Enter Team Data :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 90, 0, 0);
        TeamInfoPanel.add(jLabel76, gridBagConstraints);

        TeamRegistrationNameField.setBackground(new java.awt.Color(204, 204, 255));
        TeamRegistrationNameField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        TeamRegistrationNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeamRegistrationNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 216;
        gridBagConstraints.ipady = -2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 50, 0, 0);
        TeamInfoPanel.add(TeamRegistrationNameField, gridBagConstraints);

        TeamRegistrationPlayerTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        TeamRegistrationPlayerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Player Name", "Player Designation", "Player Email", "PhoneNo"
            }
        ));
        TeamRegistrationPlayerTable.setRowHeight(24);
        jScrollPane4.setViewportView(TeamRegistrationPlayerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1193;
        gridBagConstraints.ipady = 693;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 90, 0, 21);
        TeamInfoPanel.add(jScrollPane4, gridBagConstraints);

        jLabel77.setBackground(new java.awt.Color(255, 255, 255));
        jLabel77.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel77.setText("Team Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 63;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 90, 0, 0);
        TeamInfoPanel.add(jLabel77, gridBagConstraints);

        RegisterTeamButton.setText("Register");
        RegisterTeamButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterTeamButtonMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RegisterTeamButtonMouseReleased(evt);
            }
        });
        RegisterTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterTeamButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 62;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 140, 0, 0);
        TeamInfoPanel.add(RegisterTeamButton, gridBagConstraints);

        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("jLabel27");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 340, 21, 0);
        TeamInfoPanel.add(jLabel27, gridBagConstraints);

        RegisterInnerPanel.add(TeamInfoPanel, "card3");

        RegisterTeamPanel.add(RegisterInnerPanel, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(RegisterTeamPanel, "card5");

        UserProfilePanel.setBackground(new java.awt.Color(0, 51, 51));
        UserProfilePanel.setForeground(new java.awt.Color(255, 255, 255));
        UserProfilePanel.setLayout(new java.awt.BorderLayout());

        jPanel11.setBackground(new java.awt.Color(0, 51, 51));
        jPanel11.setForeground(new java.awt.Color(255, 255, 255));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel60.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(255, 255, 255));
        jLabel60.setText("User Profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 237, 25, 453);
        jPanel11.add(jLabel60, gridBagConstraints);

        UserProfilePanel.add(jPanel11, java.awt.BorderLayout.PAGE_START);

        jPanel49.setBackground(new java.awt.Color(255, 255, 255));
        jPanel49.setLayout(new java.awt.GridBagLayout());

        jLabel61.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel61.setText("PhoneNo :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 210, 0, 0);
        jPanel49.add(jLabel61, gridBagConstraints);

        jLabel62.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel62.setText("UserName :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 210, 0, 0);
        jPanel49.add(jLabel62, gridBagConstraints);

        UserProfileTeamLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserProfileTeamLabel.setText("Team Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 103;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 210, 66, 0);
        jPanel49.add(UserProfileTeamLabel, gridBagConstraints);

        jLabel71.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel71.setText("Email :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 210, 0, 0);
        jPanel49.add(jLabel71, gridBagConstraints);

        UserProfileId.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserProfileId.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 87;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 80, 0, 0);
        jPanel49.add(UserProfileId, gridBagConstraints);

        UserProfileName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserProfileName.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 80, 0, 174);
        jPanel49.add(UserProfileName, gridBagConstraints);

        UserProfileUSername.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserProfileUSername.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 80, 0, 174);
        jPanel49.add(UserProfileUSername, gridBagConstraints);

        UserProfilePhoneNo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserProfilePhoneNo.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 80, 0, 174);
        jPanel49.add(UserProfilePhoneNo, gridBagConstraints);

        UserProfileEmail.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserProfileEmail.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 80, 0, 174);
        jPanel49.add(UserProfileEmail, gridBagConstraints);

        UserProfileTeamName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserProfileTeamName.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 80, 66, 174);
        jPanel49.add(UserProfileTeamName, gridBagConstraints);

        jLabel115.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel115.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 87;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 210, 0, 0);
        jPanel49.add(jLabel115, gridBagConstraints);

        jLabel117.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel117.setText("ID :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 210, 0, 0);
        jPanel49.add(jLabel117, gridBagConstraints);

        UserProfilePanel.add(jPanel49, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(UserProfilePanel, "card5");

        UsersListPanel.setBackground(new java.awt.Color(0, 51, 51));
        UsersListPanel.setForeground(new java.awt.Color(255, 255, 255));
        UsersListPanel.setLayout(new java.awt.BorderLayout());

        jPanel14.setBackground(new java.awt.Color(0, 51, 51));
        jPanel14.setForeground(new java.awt.Color(255, 255, 255));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabel74.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(255, 255, 255));
        jLabel74.setText(" Players List");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 35;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 319, 0, 376);
        jPanel14.add(jLabel74, gridBagConstraints);

        UsersListPanel.add(jPanel14, java.awt.BorderLayout.PAGE_START);

        jPanel43.setBackground(new java.awt.Color(255, 255, 255));
        jPanel43.setLayout(new java.awt.GridBagLayout());
        UsersListPanel.add(jPanel43, java.awt.BorderLayout.LINE_END);

        jPanel45.setBackground(new java.awt.Color(255, 255, 255));
        jPanel45.setLayout(new java.awt.GridBagLayout());

        PlayersListTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        PlayersListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Email", "PhoneNo"
            }
        ));
        PlayersListTable.setRowHeight(24);
        jScrollPane2.setViewportView(PlayersListTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1099;
        gridBagConstraints.ipady = 803;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 90, 0, 107);
        jPanel45.add(jScrollPane2, gridBagConstraints);

        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("jLabel30");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 82;
        gridBagConstraints.ipady = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 580, 42, 0);
        jPanel45.add(jLabel30, gridBagConstraints);

        UsersListPanel.add(jPanel45, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(UsersListPanel, "card5");

        OrganizersListPanel.setBackground(new java.awt.Color(0, 51, 51));
        OrganizersListPanel.setForeground(new java.awt.Color(255, 255, 255));
        OrganizersListPanel.setLayout(new java.awt.BorderLayout());

        jPanel41.setBackground(new java.awt.Color(0, 51, 51));
        jPanel41.setForeground(new java.awt.Color(255, 255, 255));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jLabel75.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(255, 255, 255));
        jLabel75.setText(" Organizer List");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 35;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 319, 0, 376);
        jPanel41.add(jLabel75, gridBagConstraints);

        OrganizersListPanel.add(jPanel41, java.awt.BorderLayout.PAGE_START);

        jPanel44.setBackground(new java.awt.Color(255, 255, 255));
        jPanel44.setLayout(new java.awt.GridBagLayout());
        OrganizersListPanel.add(jPanel44, java.awt.BorderLayout.LINE_END);

        jPanel46.setBackground(new java.awt.Color(255, 255, 255));
        jPanel46.setLayout(new java.awt.GridBagLayout());

        OrganizersListTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        OrganizersListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Email", "PhoneNo"
            }
        ));
        OrganizersListTable.setRowHeight(24);
        jScrollPane3.setViewportView(OrganizersListTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1110;
        gridBagConstraints.ipady = 773;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 90, 0, 111);
        jPanel46.add(jScrollPane3, gridBagConstraints);

        jButton25.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton25.setText("Add Organizer");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(43, 560, 54, 0);
        jPanel46.add(jButton25, gridBagConstraints);

        OrganizersListPanel.add(jPanel46, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(OrganizersListPanel, "card5");

        NotificationPanel.setBackground(new java.awt.Color(0, 51, 51));
        NotificationPanel.setForeground(new java.awt.Color(255, 255, 255));
        NotificationPanel.setLayout(new java.awt.BorderLayout());

        jPanel48.setBackground(new java.awt.Color(0, 51, 51));
        jPanel48.setForeground(new java.awt.Color(255, 255, 255));
        jPanel48.setLayout(new java.awt.GridBagLayout());

        jLabel83.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(255, 255, 255));
        jLabel83.setText("Notification");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 35;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 319, 0, 376);
        jPanel48.add(jLabel83, gridBagConstraints);

        NotificationPanel.add(jPanel48, java.awt.BorderLayout.PAGE_START);

        jPanel53.setBackground(new java.awt.Color(255, 255, 255));
        jPanel53.setLayout(new java.awt.GridBagLayout());
        NotificationPanel.add(jPanel53, java.awt.BorderLayout.LINE_END);

        jPanel54.setBackground(new java.awt.Color(255, 255, 255));
        jPanel54.setLayout(new java.awt.GridBagLayout());

        Send_Notification_Button.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Send_Notification_Button.setForeground(new java.awt.Color(255, 255, 255));
        Send_Notification_Button.setText("Send ");
        Send_Notification_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_Notification_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 110, 36, 0);
        jPanel54.add(Send_Notification_Button, gridBagConstraints);

        Notification_Search_Table.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Notification_Search_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id#", "Name", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Notification_Search_Table.setRowHeight(18);
        jScrollPane14.setViewportView(Notification_Search_Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 830;
        gridBagConstraints.ipady = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(28, 50, 0, 55);
        jPanel54.add(jScrollPane14, gridBagConstraints);

        Notification_Player_Option.setBackground(new java.awt.Color(255, 255, 255));
        Notification_Player_Option.setText("Player");
        Notification_Player_Option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Notification_Player_OptionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 60, 0, 0);
        jPanel54.add(Notification_Player_Option, gridBagConstraints);

        Notification_Organizer_Option.setBackground(new java.awt.Color(255, 255, 255));
        Notification_Organizer_Option.setText("Organizer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
        jPanel54.add(Notification_Organizer_Option, gridBagConstraints);

        Notification_Search_Name_Field.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 255), java.awt.Color.darkGray));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 166;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 110, 0, 0);
        jPanel54.add(Notification_Search_Name_Field, gridBagConstraints);

        Notification_Search_Button.setForeground(new java.awt.Color(255, 255, 255));
        Notification_Search_Button.setText("Search");
        Notification_Search_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Notification_Search_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 40, 0, 0);
        jPanel54.add(Notification_Search_Button, gridBagConstraints);

        Notification_Text_Area.setBackground(new java.awt.Color(255, 255, 240));
        Notification_Text_Area.setColumns(20);
        Notification_Text_Area.setRows(5);
        jScrollPane13.setViewportView(Notification_Text_Area);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 830;
        gridBagConstraints.ipady = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 0, 55);
        jPanel54.add(jScrollPane13, gridBagConstraints);

        Notification_Subject_Field.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Notification_Subject_Field.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.darkGray));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 296;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        jPanel54.add(Notification_Subject_Field, gridBagConstraints);

        jLabel87.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel87.setText("Subject :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 60, 0, 0);
        jPanel54.add(jLabel87, gridBagConstraints);

        Notification_SMS_Option.setBackground(new java.awt.Color(255, 255, 255));
        Notification_SMS_Option.setText("SMS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 70, 0, 0);
        jPanel54.add(Notification_SMS_Option, gridBagConstraints);

        Notification_Email_Option.setBackground(new java.awt.Color(255, 255, 255));
        Notification_Email_Option.setText("Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel54.add(Notification_Email_Option, gridBagConstraints);

        Notification_Select_All_Option.setBackground(new java.awt.Color(255, 255, 255));
        Notification_Select_All_Option.setText("Select All");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 100, 0, 0);
        jPanel54.add(Notification_Select_All_Option, gridBagConstraints);

        NotificationPanel.add(jPanel54, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(NotificationPanel, "card5");

        PaymentPanel.setBackground(new java.awt.Color(0, 51, 51));
        PaymentPanel.setForeground(new java.awt.Color(255, 255, 255));
        PaymentPanel.setLayout(new java.awt.BorderLayout());

        jPanel58.setBackground(new java.awt.Color(0, 51, 51));
        jPanel58.setForeground(new java.awt.Color(255, 255, 255));
        jPanel58.setLayout(new java.awt.GridBagLayout());

        jLabel91.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel91.setForeground(new java.awt.Color(255, 255, 255));
        jLabel91.setText("Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 237, 25, 453);
        jPanel58.add(jLabel91, gridBagConstraints);

        PaymentPanel.add(jPanel58, java.awt.BorderLayout.PAGE_START);

        jPanel59.setBackground(new java.awt.Color(255, 255, 255));
        jPanel59.setLayout(new java.awt.GridBagLayout());

        jLabel98.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel98.setText("Select Payment Method ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(79, 200, 0, 0);
        jPanel59.add(jLabel98, gridBagConstraints);

        AccountInfoField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        AccountInfoField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        AccountInfoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountInfoFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 268;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(70, 100, 0, 263);
        jPanel59.add(AccountInfoField, gridBagConstraints);

        jLabel103.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel103.setText("Account No :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(69, 200, 0, 0);
        jPanel59.add(jLabel103, gridBagConstraints);

        PayButton.setText("Pay");
        PayButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PayButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 69;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(91, 10, 126, 0);
        jPanel59.add(PayButton, gridBagConstraints);

        JazzCashButton.setText("Jazz Cash");
        JazzCashButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JazzCashButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(51, 200, 0, 0);
        jPanel59.add(JazzCashButton, gridBagConstraints);

        EasyPaisaButton.setText("Easy Paisa");
        EasyPaisaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EasyPaisaButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(51, 30, 0, 0);
        jPanel59.add(EasyPaisaButton, gridBagConstraints);

        PaymentPanel.add(jPanel59, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(PaymentPanel, "card5");

        CertificatePanel.setBackground(new java.awt.Color(0, 51, 51));
        CertificatePanel.setForeground(new java.awt.Color(255, 255, 255));
        CertificatePanel.setLayout(new java.awt.BorderLayout());

        jPanel52.setBackground(new java.awt.Color(0, 51, 51));
        jPanel52.setForeground(new java.awt.Color(255, 255, 255));
        jPanel52.setLayout(new java.awt.GridBagLayout());

        jLabel111.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel111.setForeground(new java.awt.Color(255, 255, 255));
        jLabel111.setText("Certification");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 237, 25, 453);
        jPanel52.add(jLabel111, gridBagConstraints);

        CertificatePanel.add(jPanel52, java.awt.BorderLayout.PAGE_START);

        jPanel63.setBackground(new java.awt.Color(255, 255, 255));
        jPanel63.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Certificate_Purpose_Field.setFont(new java.awt.Font("Dialog", 2, 36)); // NOI18N
        Certificate_Purpose_Field.setText("Certificate Of Participation");
        jPanel63.add(Certificate_Purpose_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 520, 70));

        jLabel112.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel112.setText("For");
        jPanel63.add(jLabel112, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 300, 40, 30));

        CertificateNameField.setFont(new java.awt.Font("Dialog", 3, 48)); // NOI18N
        CertificateNameField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CertificateNameField.setText("hamza");
        jPanel63.add(CertificateNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 680, 90));

        jLabel114.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel114.setText("Presented To");
        jPanel63.add(jLabel114, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 150, 100, 30));

        Certificate_Description_Field.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        Certificate_Description_Field.setText("Participation in FAST Sports Gala this May 2020 in the Sports Category  ");
        jPanel63.add(Certificate_Description_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 610, 60));

        jLabel116.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel116.setText("Executive Sports Director");
        jPanel63.add(jLabel116, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 520, 160, 40));

        jLabel118.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel118.setText("Mr. Ahmad Hayat");
        jPanel63.add(jLabel118, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 460, 130, 40));

        jLabel119.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel119.setText("Mr. Ahmad Hayat");
        jPanel63.add(jLabel119, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 470, 120, 40));

        jLabel120.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel120.setText("Director Of Sports ");
        jPanel63.add(jLabel120, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 510, 120, 40));

        CertificatePanel.add(jPanel63, java.awt.BorderLayout.CENTER);

        InnerMainPanel.add(CertificatePanel, "card5");

        MainPanel.add(InnerMainPanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1156, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 736, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SignUpFormShow()
    {   
        this.SignUpNameField.setText("");
        this.SignUpUsernameField.setText("");
        this.SignUpEmailField.setText("");
        this.SignUpPasswordField.setText("");
        this.SignUpConfirmPasswordField.setText("");
        this.SignUpPhoneField.setText("");
        this.Invalidname.setVisible(false);
        this.InvalidUsername.setVisible(false);
        this.InvalidEmail.setVisible(false);
        this.InvalidPassword.setVisible(false);
        this.ErrorConfirmPassword.setVisible(false);
        this.InvalidPhone.setVisible(false);
        
        this.SignUp_Panel.setVisible(true);
        
       
        
    }
    
    public void Layout_Editable(boolean b)
    {
            
        this.Fixtures_Cricket_Table.setEnabled(true);
        this.PointsTable_Cricket.setEnabled(false);
        this.Cricket_Add_Match_Button.setVisible(b);
        this.Change_Cricket_Match_Button.setVisible(b);
        this.Remove_Cricket_Team_Button.setVisible(b);
        this.SaveCricketSummaryButton.setVisible(b);
        this.CricketManOfTheMatch.setEditable(b);
        this.CrcketSummaryTeam1Name.setEditable(b);
        this.CricketSummaryTeam2Name.setEditable(b);
        this.CricketSummaryTeam1Runs.setEditable(b);
        this.CricketSummaryTeam2Runs.setEditable(b);
        this.CricketSummaryTeam1Overs.setEditable(b);
        this.CricketSummaryTeam2Overs.setEditable(b);
        this.CricketSummaryTeam1Wickets.setEditable(b);
        this.CricketSummaryTeam2Wickets.setEditable(b);
        this.Team1BattingTable.setEnabled(b);
        this.Team1BowlingTable.setEnabled(b);
        this.Team2BattingTable.setEnabled(b);
        this.Team2BowlingTable.setEnabled(b);
        this.Cricket_Wicket_Takers_Table.setEnabled(false);
        this.Cricket_Run_Scorers_Table.setEnabled(false);
        this.Teams_Cricket_data.setEnabled(b);
        
        
        this.Fixtures_Football.setEnabled(true);
        this.PointsTable_Football.setEnabled(false);
        this.FootballSummarySaveButton.setVisible(b);
        this.Football_Add_Match_Button.setVisible(b);
        this.Change_Football_Match_Button.setVisible(b);
        this.Remove_Football_team_Button.setVisible(b);
        this.FootballMatchTeam1PlayerTable.setEnabled(b);
        this.FootballManOfTheMatch.setEditable(b);
        this.FootballMatchTeam1Name.setEditable(b);
        this.FootballMatchTeam2Name.setEditable(b);
        this.FootballMatchTeam1PlayerTable.setEnabled(b);
        this.FootballMatchTeam2PlayerTable.setEnabled(b);
        this.FootballMatchTeam1Score.setEditable(b);
        this.FootballMatchTeam2Score.setEditable(b);
        this.Football_Goal_Scorers_Table.setEnabled(false);
        this.Football_Assist_Scorers_Table.setEnabled(false);
        this.Teams_Football_data.setEnabled(b);
        
        
        this.Fixtures_Basketball.setEnabled(true);
        this.PointsTableBasketball.setEnabled(false);
        this.Basketball_Add_Match_Button.setVisible(b);
        this.Change_Basketball_Match_Button.setVisible(b);
        this.Remove_Basketball_team_button.setVisible(b);
        this.BasketballSummarySaveButton.setVisible(b);
        this.BasketballManofTheMatch.setEditable(b);
        this.BasketballMatchTeam1Name.setEditable(b);
        this.BasketballMatchTeam2Name.setEditable(b);
        this.BasketballMatchTeam1Score.setEditable(b);
        this.BasketballMatchTeam2Score.setEditable(b);
        this.BasketballMatchTeam1PlayerTable.setEnabled(b);
        this.BasketballMatchTeam2PlayerTable.setEnabled(b);
        this.Basketball_Point_Scorers_Table.setEnabled(false);
        this.Teams_Basketball_data.setEnabled(b);
        
        this.PlayersListTable.setEnabled(false);
        this.OrganizersListTable.setEnabled(false);
        
    }
    
    public void User_Layout()
    {
       if(this.appUser!=null)
       {
         if(this.appUser.getUserType()==3)
         {       
            this.MenuPanel.setLayout(new GridLayout(9,1)); 
             int type=0;
            if(this.manage.getCaptainTeam(1, this.appUser.getId())!=null)
            {
                type=1;
                this.RegisterTeamButton.setVisible(false);
            }   
            else if(this.manage.getCaptainTeam(2, this.appUser.getId())!=null)
            {
                type=2;
                this.RegisterTeamButton.setVisible(false);
            }   
            else if(this.manage.getCaptainTeam(3, this.appUser.getId())!=null)
            {
                type=3;
                this.RegisterTeamButton.setVisible(false);
            }
            if(type!=0)
            {
                if(this.manage.getCaptainTeam(type, this.appUser.getId()).getPaymentStatus())
                {
                    this.CertificateNameField.setText(this.appUser.getName());
                    this.MenuPanel.add(this.CertificateMenu);
                }
            }
            else
            {
                this.RegisterTeamButton.setVisible(true);
            }
            
            this.MenuPanel.add(this.PaymentMenu);
            this.MenuPanel.add(this.UserProfileMenu);
            this.FootballPanel.remove(this.Teams_Football);
            this.BasketballPanel.remove(this.Teams_Basketball);
            this.CricketPanel.remove(this.Teams_Cricket);
            
            
            this.Teams_Football.setVisible(false);
            
            this.Layout_Editable(false);
         }
         else if(this.appUser.getUserType()==2)
         {    
           this.MenuPanel.remove(this.RegisterTeamMenu);
           this.MenuPanel.add(this.UserProfileMenu);
           
           this.FootballPanel.remove(this.Teams_Football);
           this.BasketballPanel.remove(this.Teams_Basketball);
           this.CricketPanel.remove(this.Teams_Cricket);
           
           this.Layout_Editable(true);
         }
         else if(this.appUser.getUserType()==1)
         {
           this.MenuPanel.setLayout(new GridLayout(9,1));   
             
          
           this.FootballPanel.removeAll();
           
           
           this.FootballPanel.add("Teams",this.Teams_Football);
           this.FootballPanel.add("Fixtures",this.Fixtures_Football);
           this.FootballPanel.add("PointsTable",this.Points_Football);
           this.FootballPanel.add("Top Scorers",this.Football_Players_Scores);
           
           this.CricketPanel.removeAll();
          
           this.CricketPanel.add("Teams",this.Teams_Cricket);
           this.CricketPanel.add("Fixtures",this.Fixtures_Cricket);
           this.CricketPanel.add("PointsTable",this.Points_Cricket);
           this.CricketPanel.add("Top Scorers",this.Cricket_Players_Scores);
           
           this.BasketballPanel.removeAll();
           
           this.BasketballPanel.add("Teams",this.Teams_Basketball);
           this.BasketballPanel.add("Fixtures",this.Fixtures_Basketball);
           this.BasketballPanel.add("PointsTable",this.Points_Basketball);
           this.BasketballPanel.add("Top Scorers",this.Basketball_Players_Scores);
           
           
           this.MenuPanel.remove(this.RegisterTeamMenu);
        
           this.Notification_Search_Name_Field.setText("");
           this.Notification_Subject_Field.setText("");
           this.Notification_Text_Area.setText("");
           this.Notification_Email_Option.setSelected(false);
           this.Notification_SMS_Option.setSelected(false);
           this.Notification_Organizer_Option.setSelected(false);
           this.Notification_Player_Option.setSelected(false);
           this.Notification_Select_All_Option.setSelected(false);
        
           this.MenuPanel.add(this.OrganizersListMenu);
           this.MenuPanel.add(this.UsersListMenu);
           this.MenuPanel.add(this.NotificationMenu);
           this.MenuPanel.add(this.UserProfileMenu);
           
           this.Layout_Editable(true);
         }
       }
       else
       {
           this.MenuPanel.setLayout(new GridLayout(7,1));
           this.MenuPanel.remove(this.OrganizersListMenu);
           this.MenuPanel.remove(this.UsersListMenu);
           this.MenuPanel.remove(this.NotificationMenu);
           this.MenuPanel.remove(this.UserProfileMenu);   
           this.MenuPanel.remove(this.CertificateMenu);
           this.MenuPanel.remove(this.PaymentMenu);
           this.MenuPanel.add(this.RegisterTeamMenu);
           this.FootballPanel.remove(this.Teams_Football);
           this.BasketballPanel.remove(this.Teams_Basketball);
           this.CricketPanel.remove(this.Teams_Cricket);
           
           
           this.Layout_Editable(false);
             
       }
       
       this.MenuPanel.revalidate();
       this.MenuPanel.repaint();
       this.FootballPanel.revalidate();
       this.CricketPanel.revalidate();
       this.BasketballPanel.revalidate();
       
       
        
    }
    
    class Sortbypoints implements Comparator <Team> 
    { 
    // Used for sorting in ascending order of 
    // roll number 
    @Override
    public int compare(Team a, Team b) 
    { 
        return b.getPoints() - a.getPoints(); 
    } 
    } 
    
     class Sortbygoals implements Comparator <FootballPlayer> 
    { 
    // Used for sorting in ascending order of 
    // roll number 
    @Override
    public int compare(FootballPlayer a, FootballPlayer b) 
    { 
        return b.getGoals() - a.getGoals(); 
    } 
    }
     
       class Sortbyassists implements Comparator <FootballPlayer> 
    { 
    // Used for sorting in ascending order of 
    // roll number 
    @Override
    public int compare(FootballPlayer a, FootballPlayer b) 
    { 
        return b.getAssists()- a.getAssists(); 
    } 
    } 
       
    class Sortbydunks implements Comparator <BasketBallPlayer> 
    { 
    // Used for sorting in ascending order of 
    // roll number 
    @Override
    public int compare(BasketBallPlayer a, BasketBallPlayer b) 
    { 
        return b.getTtotalPoints()- a.getTtotalPoints(); 
    } 
    }
    
    class Sortbyruns implements Comparator <CricketPlayer> 
    { 
    // Used for sorting in ascending order of 
    // roll number 
    @Override
    public int compare(CricketPlayer a, CricketPlayer b) 
    { 
        return b.getTotalruns()- a.getTotalruns(); 
    } 
    }
    
    class Sortbywickets implements Comparator <CricketPlayer> 
    { 
    // Used for sorting in ascending order of 
    // roll number 
    @Override
    public int compare(CricketPlayer a, CricketPlayer b) 
    { 
        return b.getTotalwickets()- a.getTotalwickets(); 
    } 
    } 
     
    
    private boolean isValidName(String a) {

        int len = a.length();
        int i = 0;
        while (i < len) {
            if ( ((a.charAt(i) >= 'A' ||  a.charAt(i) >= 'a' ) &&  (a.charAt(i) <= 'Z'|| a.charAt(i) <= 'z')) || a.charAt(i)==' ') {
                i++;
            }
            else 
                return false;
            
        }
        return true;  
    }
    
     private boolean isValidPhoneNumber(String s) {

        Pattern p = Pattern.compile("(03)?[0-9]{2}?(-)[0-9]{7}");
        Matcher m = p.matcher(s);
        return (m.find() && m.group().equals(s));

    }
    
    private boolean isValidEmail(String email){
        
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\." + "[a-zA-Z0-9_+&*-]+)*@" + "(?:[a-zA-Z0-9-]+\\.)+[a-z" + "A-Z]{2,7}$";
        Pattern pattern = Pattern.compile(emailRegex);
        
        if(email == null){
            return false;
        }
        
        return pattern.matcher(email).matches() && (email.endsWith("@gmail.com") || email.endsWith("@hotmail.com"));
      
    } 
     
    private boolean isValidUsername(String name) 
    { 
  
        // Regex to check valid username. 
        String regex = "^[aA-zZ]\\w{5,29}$"; 
  
        // Compile the ReGex 
        Pattern p = Pattern.compile(regex); 
  
        // If the username is empty 
        // return false 
        if (name == null) { 
            return false; 
        } 
  
        // Pattern class contains matcher() method 
        // to find matching between given username 
        // and regular expression. 
        Matcher m = p.matcher(name); 
  
        // Return if the username 
        // matched the ReGex 
        return m.matches(); 
    } 
    
     public static boolean valid_date(String strDate) {
        if (strDate.trim().equals(""))
	{
	    return false;
	}
        else
	{
            SimpleDateFormat sdfrmt = new SimpleDateFormat("dd/MM/yyyy");
            sdfrmt.setLenient(false);
            
            try
	    {
	        Date javaDate = sdfrmt.parse(strDate); 
	        //System.out.println(strDate+" is valid date format");
               
	    }
              catch (ParseException e)
	    {
	       // System.out.println(strDate+" is Invalid Date format");
	        return false;
	    }
            return true;
        }
        
        
    }
    
    
    
    private void homemenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homemenuMouseEntered
       homemenu.setBackground(hoverColor);
    }//GEN-LAST:event_homemenuMouseEntered

    private void homemenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homemenuMouseExited
       homemenu.setBackground(menuColor);
    }//GEN-LAST:event_homemenuMouseExited

    private void CricketMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CricketMenuMouseEntered
        CricketMenu.setBackground(hoverColor);
    }//GEN-LAST:event_CricketMenuMouseEntered

    private void CricketMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CricketMenuMouseExited
        CricketMenu.setBackground(menuColor);
    }//GEN-LAST:event_CricketMenuMouseExited

    private void FootballMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FootballMenuMouseEntered
        FootballMenu.setBackground(hoverColor);
    }//GEN-LAST:event_FootballMenuMouseEntered

    private void FootballMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FootballMenuMouseExited
        FootballMenu.setBackground(menuColor);
    }//GEN-LAST:event_FootballMenuMouseExited

    private void VolleyballMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VolleyballMenuMouseEntered
        VolleyballMenu.setBackground(hoverColor);
    }//GEN-LAST:event_VolleyballMenuMouseEntered

    private void VolleyballMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VolleyballMenuMouseExited
        VolleyballMenu.setBackground(menuColor);
    }//GEN-LAST:event_VolleyballMenuMouseExited

    private void RegisterTeamMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterTeamMenuMouseEntered
        RegisterTeamMenu.setBackground(hoverColor);
        
    }//GEN-LAST:event_RegisterTeamMenuMouseEntered

    private void RegisterTeamMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterTeamMenuMouseExited
        RegisterTeamMenu.setBackground(menuColor);
        
    }//GEN-LAST:event_RegisterTeamMenuMouseExited

    private void homemenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homemenuMouseClicked
        
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(HomePanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();   
    }//GEN-LAST:event_homemenuMouseClicked

    private void PrintCricketFixtures()
    {
       ArrayList<Schedule> List2=new ArrayList<Schedule>();
       List2=this.manage.getScheduleList(SportType);
       
       DefaultTableModel model2=(DefaultTableModel)Fixtures_Cricket_Table.getModel();
        
       Object[] row2 =new Object[8];
       model2.setRowCount(0);
       for(int i=0;i<List2.size();i++)
       {
       row2[0]=List2.get(i).getID();
       row2[1]=List2.get(i).getTeam1().getName();
       row2[2]=List2.get(i).getDate();
       row2[3]=List2.get(i).getTime();
       row2[4]=List2.get(i).getVenue();
       row2[5]=List2.get(i).getTeam2().getName();
       row2[6]=List2.get(i).getStatus();
       row2[7]=List2.get(i).getOffcial().getName();
       model2.addRow(row2);
          
       }   
    }
    
      private void PrintFootballFixtures()
    {
       ArrayList<Schedule> List2=new ArrayList<Schedule>();
       List2=this.manage.getScheduleList(SportType);
       
       DefaultTableModel model2=(DefaultTableModel)Fixtures_Football_Table.getModel();
        
       Object[] row2 =new Object[8];
       model2.setRowCount(0);
       for(int i=0;i<List2.size();i++)
       {
       row2[0]=List2.get(i).getID();
       row2[1]=List2.get(i).getTeam1().getName();
       row2[2]=List2.get(i).getDate();
       row2[3]=List2.get(i).getTime();
       row2[4]=List2.get(i).getVenue();
       row2[5]=List2.get(i).getTeam2().getName();
       row2[6]=List2.get(i).getStatus();
       row2[7]=List2.get(i).getOffcial().getName();
       model2.addRow(row2);
          
       }   
    }
    
       private void PrintBasketballFixtures()
    {
       ArrayList<Schedule> List2=new ArrayList<Schedule>();
       List2=this.manage.getScheduleList(SportType);
       
       DefaultTableModel model2=(DefaultTableModel)Fixtures_Basketball_Table.getModel();
        
       Object[] row2 =new Object[8];
       model2.setRowCount(0);
       for(int i=0;i<List2.size();i++)
       {
       row2[0]=List2.get(i).getID();
       row2[1]=List2.get(i).getTeam1().getName();
       row2[2]=List2.get(i).getDate();
       row2[3]=List2.get(i).getTime();
       row2[4]=List2.get(i).getVenue();
       row2[5]=List2.get(i).getTeam2().getName();
       row2[6]=List2.get(i).getStatus();
       row2[7]=List2.get(i).getOffcial().getName();
       model2.addRow(row2);
          
       }   
    }
    
     private void PrintFootballTeams()
    {
        ArrayList<Team> List=new ArrayList<Team>();
        List=this.manage.getTeamList(2);
        
       DefaultTableModel model=(DefaultTableModel)Teams_Football_data.getModel();
        
       Object[] row =new Object[4];
       model.setRowCount(0);
       for(int i=0;i<List.size();i++)
       {
          
       row[0]=List.get(i).getId();
       row[1]=List.get(i).getName();
       row[2]=List.get(i).getCaptain().getName();
       row[3]=List.get(i).getPaymentStatus();
        model.addRow(row);
          
       }
    }  
       
     private void PrintBasketballTeams()
    {
        ArrayList<Team> List=new ArrayList<Team>();
        List=this.manage.getTeamList(3);
        
       DefaultTableModel model=(DefaultTableModel)Teams_Basketball_data.getModel();
        
       Object[] row =new Object[4];
       model.setRowCount(0);
       for(int i=0;i<List.size();i++)
       {
          
       row[0]=List.get(i).getId();
       row[1]=List.get(i).getName();
       row[2]=List.get(i).getCaptain().getName();
       row[3]=List.get(i).getPaymentStatus();
        model.addRow(row);
          
       }
    }   
     
    private void PrintCricketTeams()
    {
        ArrayList<Team> List=new ArrayList<Team>();
        List=this.manage.getTeamList(SportType);
        
       DefaultTableModel model=(DefaultTableModel)Teams_Cricket_data.getModel();
        
       Object[] row =new Object[4];
       model.setRowCount(0);
       for(int i=0;i<List.size();i++)
       {
          
       row[0]=List.get(i).getId();
       row[1]=List.get(i).getName();
       row[2]=List.get(i).getCaptain().getName();
       row[3]=List.get(i).getPaymentStatus();
        model.addRow(row);
          
       }
    }
    
    private void PrintCricketPointsTable()
    {
        ArrayList<Team> List3=new ArrayList<Team>();
        List3=this.manage.getTeamList(1);
       Collections.sort(List3, new Sortbypoints()); 
       DefaultTableModel model3=(DefaultTableModel)PointsTable_Cricket.getModel();
        
       Object[] row3 =new Object[7];
       model3.setRowCount(0);
       for(int i=0;i<List3.size();i++)
       {
          
       row3[0]=i+1;
       row3[1]=List3.get(i).getName();
       row3[2]=List3.get(i).getPlayed();
       row3[3]=List3.get(i).getWins();
       row3[4]=List3.get(i).getLosses();
       row3[5]=List3.get(i).getTies();
       row3[6]=List3.get(i).getPoints();
       model3.addRow(row3);
          
       }
    }
    
    private void PrintFootballPointsTable()
    {
        
        
        ArrayList<Team> List3=new ArrayList<Team>();
        List3=this.manage.getTeamList(2);
       Collections.sort(List3, new Sortbypoints()); 
       DefaultTableModel model3=(DefaultTableModel)PointsTable_Football.getModel();
        
       Object[] row3 =new Object[7];
       model3.setRowCount(0);
       for(int i=0;i<List3.size();i++)
       {
          
       row3[0]=i+1;
       row3[1]=List3.get(i).getName();
       row3[2]=List3.get(i).getPlayed();
       row3[3]=List3.get(i).getWins();
       row3[4]=List3.get(i).getLosses();
       row3[5]=List3.get(i).getTies();
       row3[6]=List3.get(i).getPoints();
       model3.addRow(row3);
          
       }
    }
    
    private void PrintBasketballPointsTable()
    {
        ArrayList<Team> List3=new ArrayList<Team>();
        List3=this.manage.getTeamList(3);
       
       DefaultTableModel model3=(DefaultTableModel)PointsTableBasketball.getModel();
       Collections.sort(List3, new Sortbypoints()); 
       Object[] row3 =new Object[7];
       model3.setRowCount(0);
       for(int i=0;i<List3.size();i++)
       {
          
       row3[0]=i+1;
       row3[1]=List3.get(i).getName();
       row3[2]=List3.get(i).getPlayed();
       row3[3]=List3.get(i).getWins();
       row3[4]=List3.get(i).getLosses();
       row3[5]=List3.get(i).getTies();
       row3[6]=List3.get(i).getPoints();
       model3.addRow(row3);
          
       }
    }
    
    private void PrintFootballTopGoalScorers()
    {
        ArrayList<FootballPlayer> List4=new ArrayList<FootballPlayer>();
        ArrayList<Team> List3=new ArrayList<Team>();
        
        List3=this.manage.getTeamList(2);
        
        for(int i=0;i<List3.size();i++)
        {
         for(int j=0;j<List3.get(i).playerList.size();j++)
         {
         List4.add((FootballPlayer)List3.get(i).playerList.get(j));
         }
        }
        
        DefaultTableModel model3=(DefaultTableModel)Football_Goal_Scorers_Table.getModel();
        Collections.sort(List4, new Sortbygoals());
       
       Object[] row3 =new Object[3];
       model3.setRowCount(0);
       
       for(int i=0;i<List4.size();i++)
       {
          if(i==10)  //for top 10
              break;
       row3[0]=i+1;
       row3[1]=List4.get(i).getName();
       row3[2]=String.valueOf(List4.get(i).getGoals());
      
       model3.addRow(row3);
          
       }
    }
    
    private void PrintFootballTopAssistMakers()
    {
       ArrayList<FootballPlayer> List4=new ArrayList<FootballPlayer>();
        ArrayList<Team> List3=new ArrayList<Team>();
        
        List3=this.manage.getTeamList(2);
        
        for(int i=0;i<List3.size();i++)
        {
         for(int j=0;j<List3.get(i).playerList.size();j++)
         {
         List4.add((FootballPlayer)List3.get(i).playerList.get(j));
         }
        }
        
        DefaultTableModel model3=(DefaultTableModel)Football_Assist_Scorers_Table.getModel();
        Collections.sort(List4, new Sortbyassists());
       
       Object[] row3 =new Object[3];
       model3.setRowCount(0);
       
       for(int i=0;i<List4.size();i++)
       {
          if(i==10)  //for top 10
              break;
       row3[0]=i+1;
       row3[1]=List4.get(i).getName();
       row3[2]=String.valueOf(List4.get(i).getAssists());
      
       model3.addRow(row3);
          
       }
    }
    
    private void PrintBasketballTopDunkers()
    {
       ArrayList<BasketBallPlayer> List4=new ArrayList<BasketBallPlayer>();
        ArrayList<Team> List3=new ArrayList<Team>();
        
        List3=this.manage.getTeamList(3);
        
        for(int i=0;i<List3.size();i++)
        {
         for(int j=0;j<List3.get(i).playerList.size();j++)
         {
         List4.add((BasketBallPlayer)List3.get(i).playerList.get(j));
         }
        }
        
        DefaultTableModel model3=(DefaultTableModel)Basketball_Point_Scorers_Table.getModel();
        Collections.sort(List4, new Sortbydunks());
       
       Object[] row3 =new Object[3];
       model3.setRowCount(0);
       
       for(int i=0;i<List4.size();i++)
       {
          if(i==10)  //for top 10
              break;
       row3[0]=i+1;
       row3[1]=List4.get(i).getName();
       row3[2]=String.valueOf(List4.get(i).getTtotalPoints());
      
       model3.addRow(row3);
          
       }
    }
    
    private void PrintCricketTopScorers()
    {
       ArrayList<CricketPlayer> List4=new ArrayList<CricketPlayer>();
        ArrayList<Team> List3=new ArrayList<Team>();
        
        List3=this.manage.getTeamList(1);
        
        for(int i=0;i<List3.size();i++)
        {
         for(int j=0;j<List3.get(i).playerList.size();j++)
         {
         List4.add((CricketPlayer)List3.get(i).playerList.get(j));
         }
        }
        
        DefaultTableModel model3=(DefaultTableModel)Cricket_Run_Scorers_Table.getModel();
        Collections.sort(List4, new Sortbyruns());
       
       Object[] row3 =new Object[3];
       model3.setRowCount(0);
       
       for(int i=0;i<List4.size();i++)
       {
          if(i==10)  //for top 10
              break;
       row3[0]=i+1;
       row3[1]=List4.get(i).getName();
       row3[2]=String.valueOf(List4.get(i).getTotalruns());
      
       model3.addRow(row3);
          
       }
    }
    
    private void PrintCricketTopWicketTakers()
    {
       ArrayList<CricketPlayer> List4=new ArrayList<CricketPlayer>();
        ArrayList<Team> List3=new ArrayList<Team>();
        
        List3=this.manage.getTeamList(1);
        
        for(int i=0;i<List3.size();i++)
        {
         for(int j=0;j<List3.get(i).playerList.size();j++)
         {
         List4.add((CricketPlayer)List3.get(i).playerList.get(j));
         }
        }
        
        DefaultTableModel model3=(DefaultTableModel)Cricket_Wicket_Takers_Table.getModel();
        Collections.sort(List4, new Sortbywickets());
       
       Object[] row3 =new Object[3];
       model3.setRowCount(0);
       
       for(int i=0;i<List4.size();i++)
       {
          if(i==10)  //for top 10
              break;
       row3[0]=i+1;
       row3[1]=List4.get(i).getName();
       row3[2]=String.valueOf(List4.get(i).getWickets());
      
       model3.addRow(row3);
          
       }
    }
    
    
    
    
    
    private void CricketMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CricketMenuMouseClicked
      
       InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        
        this.SportType=1;
       
       this.PrintCricketTeams();
       this.PrintCricketPointsTable();
       this.PrintCricketFixtures();
       this.PrintCricketTopScorers();
       this.PrintCricketTopWicketTakers();
        
       /* for(int i=0;i<this.Teams_Cricket_data.getModel().getRowCount();i++)
        {
            this.Teams_Cricket_data.getModel().setValueAt("", i, 0);
            this.Teams_Cricket_data.getModel().setValueAt("", i, 1);
            this.Teams_Cricket_data.getModel().setValueAt("", i, 2);
            this.Teams_Cricket_data.getModel().setValueAt(false, i, 3);
            
            if(i<List.size())
            {
                 this.Teams_Cricket_data.getModel().setValueAt(List.get(i).getId(), i, 0);
                 this.Teams_Cricket_data.getModel().setValueAt(List.get(i).getName(), i, 1);
                 this.Teams_Cricket_data.getModel().setValueAt(List.get(i).getCaptain().getName(), i, 2);
                 this.Teams_Cricket_data.getModel().setValueAt(List.get(i).getPaymentStatus(), i, 3);
            }
            
        
        }*/
        
        InnerMainPanel.add(CricketPanel);
        
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        
        
        
        
    }//GEN-LAST:event_CricketMenuMouseClicked

    private void FootballMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FootballMenuMouseClicked
        
         InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        
        this.SportType=2;
        ArrayList<Team> List=new ArrayList<Team>();
        List=this.manage.getTeamList(SportType);
        
         DefaultTableModel model=(DefaultTableModel)Teams_Football_data.getModel();
        
       Object[] row =new Object[4];
       model.setRowCount(0);
       for(int i=0;i<List.size();i++)
       {
          
       row[0]=List.get(i).getId();
       row[1]=List.get(i).getName();
       row[2]=List.get(i).getCaptain().getName();
       row[3]=List.get(i).getPaymentStatus();
        model.addRow(row);
          
       }
       
       this.PrintFootballPointsTable();
       this.PrintFootballFixtures();
       this.PrintFootballTopGoalScorers();
       this.PrintFootballTopAssistMakers();
       
        /*for(int i=0;i<this.Teams_Football_data.getModel().getRowCount();i++)
        {
            this.Teams_Football_data.getModel().setValueAt("", i, 0);
            this.Teams_Football_data.getModel().setValueAt("", i, 1);
            this.Teams_Football_data.getModel().setValueAt("", i, 2);
            this.Teams_Football_data.getModel().setValueAt(false, i, 3);
            
            if(i<List.size())
            {
                 this.Teams_Football_data.getModel().setValueAt(List.get(i).getId(), i, 0);
                 this.Teams_Football_data.getModel().setValueAt(List.get(i).getName(), i, 1);
                 this.Teams_Football_data.getModel().setValueAt(List.get(i).getCaptain().getName(), i, 2);
                 this.Teams_Football_data.getModel().setValueAt(List.get(i).getPaymentStatus(), i, 3);
            }
            
        
        }*/
        InnerMainPanel.add(FootballPanel);
        
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        
    }//GEN-LAST:event_FootballMenuMouseClicked

    private void VolleyballMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VolleyballMenuMouseClicked
        
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        
        this.SportType=3;
        ArrayList<Team> List=new ArrayList<Team>();
        List=this.manage.getTeamList(SportType);
        
       DefaultTableModel model=(DefaultTableModel)Teams_Basketball_data.getModel();
        
       Object[] row =new Object[4];
       model.setRowCount(0);
       for(int i=0;i<List.size();i++)
       {
          
       row[0]=List.get(i).getId();
       row[1]=List.get(i).getName();
       row[2]=List.get(i).getCaptain().getName();
       row[3]=List.get(i).getPaymentStatus();
        model.addRow(row);
          
       }
       
       this.PrintBasketballFixtures();
       this.PrintBasketballPointsTable();
       this.PrintBasketballTopDunkers();
       
        /*for(int i=0;i<this.Teams_Volley_data.getModel().getRowCount();i++)
        {
            this.Teams_Volley_data.getModel().setValueAt("", i, 0);
            this.Teams_Volley_data.getModel().setValueAt("", i, 1);
            this.Teams_Volley_data.getModel().setValueAt("", i, 2);
            this.Teams_Volley_data.getModel().setValueAt(false, i, 3);
            
            if(i<List.size())
            {
                 this.Teams_Volley_data.getModel().setValueAt(List.get(i).getId(), i, 0);
                 this.Teams_Volley_data.getModel().setValueAt(List.get(i).getName(), i, 1);
                 this.Teams_Volley_data.getModel().setValueAt(List.get(i).getCaptain().getName(), i, 2);
                 this.Teams_Volley_data.getModel().setValueAt(List.get(i).getPaymentStatus(), i, 3);
            }
            
        }*/
        
        InnerMainPanel.add(BasketballPanel);
       
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        
    }//GEN-LAST:event_VolleyballMenuMouseClicked

    private void LoginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseEntered
        LoginButton.setBackground(new Color(204,204,255));
    }//GEN-LAST:event_LoginButtonMouseEntered

    private void LoginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseExited
          LoginButton.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_LoginButtonMouseExited

    private void LoginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseClicked
       
       if(this.LogInLabel.getText().equals("LogOut"))
       {
           this.appUser=null;
           this.User_Layout();
           this.SignUpHeaderButton.setVisible(true);
           this.LogInLabel.setText("LogIn"); 
           InnerMainPanel.removeAll();
           InnerMainPanel.repaint();
           InnerMainPanel.revalidate();
           InnerMainPanel.add(HomePanel);
           InnerMainPanel.repaint();
           InnerMainPanel.revalidate(); 
       }
       else
       {
        this.LoginUsernameField.setText("");
        this.LoginPasswordField.setText("");
        this.LogInError.setForeground(menuColor);
        LogIn_Panel.setVisible(true);  
       }
    }//GEN-LAST:event_LoginButtonMouseClicked

    private void LoginUsernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginUsernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginUsernameFieldActionPerformed

    private void LoginPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginPasswordFieldActionPerformed

    private void Teams_Basketball_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Teams_Basketball_dataMouseClicked
          
        int index=this.Teams_Basketball_data.getSelectedRow();
        
        Team T;
        
        if((this.Teams_Basketball_data.getModel().getValueAt(index, 0))!=null)
        {
        
         T=manage.getTeam(SportType, (Integer)(this.Teams_Basketball_data.getModel().getValueAt(index, 0)));
        
        
        this.VolleyballTeamDataNameField.setText(T.getName());
        
        
       DefaultTableModel model=(DefaultTableModel)jTable15.getModel();
        
       Object[] row =new Object[2];
       model.setRowCount(0);
       for(int i=0;i<T.playerList.size();i++)
       {
          
       row[0]=T.playerList.get(i).getName();
       row[1]=T.playerList.get(i).getPoints();
        model.addRow(row);
           
       }
       Volleyball_Team_Data.setVisible(true);
        }
          
    }//GEN-LAST:event_Teams_Basketball_dataMouseClicked

    private void FootballTeamDataNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FootballTeamDataNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FootballTeamDataNameFieldActionPerformed

    private void SignUpEmailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpEmailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignUpEmailFieldActionPerformed

    private void SignUpConfirmPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpConfirmPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignUpConfirmPasswordFieldActionPerformed

    private void SignUpPhoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpPhoneFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignUpPhoneFieldActionPerformed

    private void SignUpPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignUpPasswordFieldActionPerformed

    private void SignUpNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignUpNameFieldActionPerformed

    private void RegisterTeamMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterTeamMenuMouseClicked
       
        
        this.TeamRegistrationNameField.setText("");
        for(int i=0;i<11;i++)
        {
            this.TeamRegistrationPlayerTable.setValueAt("", i, 0);
            this.TeamRegistrationPlayerTable.setValueAt("", i, 1);
            this.TeamRegistrationPlayerTable.setValueAt("", i, 2);
            this.TeamRegistrationPlayerTable.setValueAt("", i, 3);
        }
        
        if(this.appUser==null)
        {
           this.SignUpFormShow();
        }
        if(this.appUser!=null)
        {
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(RegisterTeamPanel);
        
        RegisterInnerPanel.removeAll();
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();
        RegisterInnerPanel.add(SelectSportPanel);
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();   
        
        RegisterVolleyballChoice.setBackground(new Color(0,100,100));
        RegisterFootballChoice.setBackground(new Color(0,100,100));
        RegisterCricketChoice.setBackground(new Color(0,100,100));
       
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        }
        
    }//GEN-LAST:event_RegisterTeamMenuMouseClicked

    private void RegisterVolleyballChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterVolleyballChoiceActionPerformed
        
        RegisterInnerPanel.removeAll();
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();
        RegisterInnerPanel.add(TeamInfoPanel);
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();   
        this.SportType=3;
        
    }//GEN-LAST:event_RegisterVolleyballChoiceActionPerformed

    private void RegisterFootballChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterFootballChoiceActionPerformed
        
        RegisterInnerPanel.removeAll();
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();
        RegisterInnerPanel.add(TeamInfoPanel);
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();   
        this.SportType=2;
        
    }//GEN-LAST:event_RegisterFootballChoiceActionPerformed

    private void RegisterCricketChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterCricketChoiceActionPerformed
        
        RegisterInnerPanel.removeAll();
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();
        RegisterInnerPanel.add(TeamInfoPanel);
        RegisterInnerPanel.repaint();
        RegisterInnerPanel.revalidate();   
        this.SportType=1;
    }//GEN-LAST:event_RegisterCricketChoiceActionPerformed

    private void UserProfileMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserProfileMenuMouseEntered
        
        UserProfileMenu.setBackground(hoverColor);
        
    }//GEN-LAST:event_UserProfileMenuMouseEntered

    private void UserProfileMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserProfileMenuMouseExited
        
        UserProfileMenu.setBackground(menuColor);
        
    }//GEN-LAST:event_UserProfileMenuMouseExited

    private void UserProfileMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserProfileMenuMouseClicked
        
        this.UserProfileId.setText(String.valueOf(this.appUser.getId()));
        this.UserProfileName.setText(this.appUser.getName());
        this.UserProfileUSername.setText(this.appUser.getUsername());
        this.UserProfilePhoneNo.setText(this.appUser.getPhoneno());
        this.UserProfileEmail.setText(this.appUser.getEmail());
        
        if(this.appUser.getUserType()==3)
        {
            this.UserProfileTeamLabel.setText("TeamName :");
            
            if(this.manage.getCaptainTeam(1, this.appUser.getId())!=null)
            {
                this.UserProfileTeamName.setText(this.manage.getCaptainTeam(1,this.appUser.getId()).getName());
            }
            else if(this.manage.getCaptainTeam(2, this.appUser.getId())!=null)
            {
                this.UserProfileTeamName.setText(this.manage.getCaptainTeam(2,this.appUser.getId()).getName());
            }
            else if(this.manage.getCaptainTeam(3, this.appUser.getId())!=null)
            {
                this.UserProfileTeamName.setText(this.manage.getCaptainTeam(3,this.appUser.getId()).getName());
            }
        }
        else if(this.appUser.getUserType()==2)
        {
            this.UserProfileTeamLabel.setText("User Type :");
            this.UserProfileTeamName.setText("Organizer");
        }
         else if(this.appUser.getUserType()==1)
        {
            this.UserProfileTeamLabel.setText("User Type :");
            this.UserProfileTeamName.setText("Admin");
        }
        
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(UserProfilePanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();   
        
    }//GEN-LAST:event_UserProfileMenuMouseClicked

    private void UsersListMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsersListMenuMouseClicked
        
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(UsersListPanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();  
        
       DefaultTableModel model=(DefaultTableModel)PlayersListTable.getModel();
        
       Object[] row =new Object[4];
       model.setRowCount(0);
       for(int i=0;i<this.manage.userList.size();i++)
       {
           if(this.manage.userList.get(i).getUserType()==3)
           {
       row[0]=this.manage.userList.get(i).getId();
       row[1]=this.manage.userList.get(i).getName();
       row[2]=this.manage.userList.get(i).getEmail();
       row[3]=this.manage.userList.get(i).getPhoneno();
        model.addRow(row);
           }
       }
        
    }//GEN-LAST:event_UsersListMenuMouseClicked

    private void UsersListMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsersListMenuMouseEntered
        UsersListMenu.setBackground(hoverColor);
    }//GEN-LAST:event_UsersListMenuMouseEntered

    private void UsersListMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsersListMenuMouseExited
        UsersListMenu.setBackground(menuColor);
    }//GEN-LAST:event_UsersListMenuMouseExited

    private void OrganizersListMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrganizersListMenuMouseClicked
       
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(OrganizersListPanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();   
        
       DefaultTableModel model=(DefaultTableModel)OrganizersListTable.getModel();
        
       Object[] row =new Object[4];
       model.setRowCount(0);
       for(int i=0;i<this.manage.userList.size();i++)
       {
           if(this.manage.userList.get(i).getUserType()==2)
           {
       row[0]=this.manage.userList.get(i).getId();
       row[1]=this.manage.userList.get(i).getName();
       row[2]=this.manage.userList.get(i).getEmail();
       row[3]=this.manage.userList.get(i).getPhoneno();
        model.addRow(row);
           }
       }
        
    }//GEN-LAST:event_OrganizersListMenuMouseClicked

    private void OrganizersListMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrganizersListMenuMouseEntered
        OrganizersListMenu.setBackground(hoverColor);
    }//GEN-LAST:event_OrganizersListMenuMouseEntered

    private void OrganizersListMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrganizersListMenuMouseExited
        OrganizersListMenu.setBackground(menuColor);
    }//GEN-LAST:event_OrganizersListMenuMouseExited

    private void Fixtures_Football_ScrollerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Fixtures_Football_ScrollerMouseClicked
       
    }//GEN-LAST:event_Fixtures_Football_ScrollerMouseClicked

    private void Fixtures_Football_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Fixtures_Football_TableMouseClicked
        
        this.FootballManOfTheMatch.setText("");
        
        
        
        int index = this.Fixtures_Football_Table.getSelectedRow();
        SportType = 2;
        
        
        int id=(Integer)this.Fixtures_Football_Table.getValueAt(index, 0);
        
        Schedule s = this.manage.getSchedule(SportType, id);
        
        if(s.getStatus()==true)
        {
            this.FootballSummarySaveButton.setVisible(false);
        }
        else
        {
            this.FootballSummarySaveButton.setVisible(true);    
        }
        
        Team T1 = s.getTeam1();
        Team T2 = s.getTeam2();
         System.out.println(T1.getName());
         System.out.println(T2.getName());
        if(s.getMatchsummary()!=null)
        {
        
        this.FootballManOfTheMatch.setText(s.getMatchsummary().MVP.getName());
            
        ArrayList<FootballPlayer> list1=new ArrayList<FootballPlayer>();
        ArrayList<FootballPlayer> list2=new ArrayList<FootballPlayer>();
        
        for(int i=0;i<T1.playerList.size();i++)
        {
            FootballPlayer plyr = (FootballPlayer)T1.getPlayeratindex(i);
            FootballPlayer plyr1 = (FootballPlayer)T2.getPlayeratindex(i);
            list1.add(plyr);
            list2.add(plyr1);
        }
        
        FootballSummary fs =(FootballSummary) s.getMatchsummary(); 
        
        this.FootballMatchTeam1Name.setText(T1.getName());
        this.FootballMatchTeam1Score.setText(String.valueOf(fs.getteam1Goals()));
        //this.CricketSummaryTeam1Wickets.setText(String.valueOf(cs.team1Wickets));
        //this.CricketSummaryTeam1Overs.setText(String.valueOf(cs.team1Overs));
        
        this.FootballMatchTeam2Name.setText(T2.getName());
        this.FootballMatchTeam2Score.setText(String.valueOf(fs.getteam2Goals()));
        
        //this.CricketSummaryTeam2Wickets.setText(String.valueOf(cs.team2Wickets));
        //this.CricketSummaryTeam2Overs.setText(String.valueOf(cs.team2Overs));
        
        DefaultTableModel model1=(DefaultTableModel)this.FootballMatchTeam1PlayerTable.getModel();
        DefaultTableModel model2=(DefaultTableModel)this.FootballMatchTeam2PlayerTable.getModel();
        
        Object[] row1 =new Object[3];
        Object[] row2 =new Object[3];
        model1.setRowCount(0);
        model2.setRowCount(0);
       
           for(int i=0;i<list1.size();i++)
        {
            row1[0]=list1.get(i).getName();
            row2[0]=list2.get(i).getName();
            //row2[0]=row1[0];
            FootballPlayerMatchStats temp = fs.getPlayerMatchStats(list1.get(i).getId());
            FootballPlayerMatchStats temp2 = fs.getPlayerMatchStats(list2.get(i).getId());
            row1[1]=temp.getGoals();
            row2[1]=temp2.getGoals();
            row1[2]=temp.getAssists();
            row2[2]=temp2.getAssists();
            //row2[3]=temp.overs;
            
            model1.addRow(row1);
            model2.addRow(row2);
        }
        }
         else
        {
        this.FootballMatchTeam1Name.setText(T1.getName());
        this.FootballMatchTeam1Score.setText("0");
        //this.CricketSummaryTeam1Wickets.setText("0");
        //this.CricketSummaryTeam1Overs.setText("0.0");
        
         this.FootballMatchTeam2Name.setText(T2.getName());
        this.FootballMatchTeam2Score.setText("0");
        //this.CricketSummaryTeam2Wickets.setText("0");
        //this.CricketSummaryTeam2Overs.setText("0.0");
        
        ArrayList<Player> list1=new ArrayList<Player>();
        ArrayList<Player> list2=new ArrayList<Player>();
        
        for(int i=0;i<T1.playerList.size();i++)
        {
            Player plyr = T1.getPlayeratindex(i);
            Player plyr1 = T2.getPlayeratindex(i);
            list1.add(plyr);
            list2.add(plyr1);
        }
        
        DefaultTableModel model1=(DefaultTableModel)this.FootballMatchTeam1PlayerTable.getModel();
        DefaultTableModel model2=(DefaultTableModel)this.FootballMatchTeam2PlayerTable.getModel();
        //DefaultTableModel model3=(DefaultTableModel)this.Team2BattingTable.getModel();
        //DefaultTableModel model4=(DefaultTableModel)this.Team1BowlingTable.getModel();
        
        
       Object[] row1 =new Object[3];
       Object[] row2 =new Object[3];
       model1.setRowCount(0);
       model2.setRowCount(0);
       
        for(int i=0;i<list1.size();i++)
        {
            row1[0]=list1.get(i).getName();
            row2[0]=list2.get(i).getName();
            row1[1]=0;
            row2[1]=0;
            row1[2]=0;
            row2[2]=0;
            //row2[3]=0;
            
            model1.addRow(row1);
            model2.addRow(row2);
        }
        
        
        
        
        }
        FootballMatch.setVisible(true);
        
        
       
    }//GEN-LAST:event_Fixtures_Football_TableMouseClicked

    private void CricketSummaryTeam2WicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketSummaryTeam2WicketsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketSummaryTeam2WicketsActionPerformed

    private void CricketSummaryTeam2OversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketSummaryTeam2OversActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketSummaryTeam2OversActionPerformed

    private void CricketSummaryTeam2NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketSummaryTeam2NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketSummaryTeam2NameActionPerformed

    private void CrcketSummaryTeam1NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrcketSummaryTeam1NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CrcketSummaryTeam1NameActionPerformed

    private void CricketSummaryTeam1OversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketSummaryTeam1OversActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketSummaryTeam1OversActionPerformed

    private void CricketSummaryTeam1WicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketSummaryTeam1WicketsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketSummaryTeam1WicketsActionPerformed

    private void Fixtures_Cricket_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Fixtures_Cricket_TableMouseClicked
       
        this.CrcketSummaryTeam1Name.setText("");
        this.CricketSummaryTeam2Name.setText("");
        this.CricketManOfTheMatch.setText("");
        
        int index = this.Fixtures_Cricket_Table.getSelectedRow();
        SportType = 1;
        
        
        int id=(Integer)this.Fixtures_Cricket_Table.getValueAt(index, 0);
        
        Schedule s = this.manage.getSchedule(SportType, id);
        
        if(s.getStatus()==true)
        {
            this.SaveCricketSummaryButton.setVisible(false);
        }
        else
        {
            this.SaveCricketSummaryButton.setVisible(true);   
        }
        
        Team T1 = s.getTeam1();
        Team T2 = s.getTeam2();
        
        if(s.getMatchsummary()!=null)
        {
        
        ArrayList<CricketPlayer> list1=new ArrayList<CricketPlayer>();
        ArrayList<CricketPlayer> list2=new ArrayList<CricketPlayer>();
        
        this.CricketManOfTheMatch.setText(s.getMatchsummary().MVP.getName());
        
        for(int i=0;i<T1.playerList.size();i++)
        {
            CricketPlayer plyr = (CricketPlayer)T1.getPlayeratindex(i);
            CricketPlayer plyr1 = (CricketPlayer)T2.getPlayeratindex(i);
            list1.add(plyr);
            list2.add(plyr1);
        }
        
        CricketSummary cs =(CricketSummary) s.getMatchsummary();  
        
        this.CrcketSummaryTeam1Name.setText(T1.getName());
        this.CricketSummaryTeam1Runs.setText(String.valueOf(cs.getteam1Score()));
        this.CricketSummaryTeam1Wickets.setText(String.valueOf(cs.getteam1Wickets()));
        this.CricketSummaryTeam1Overs.setText(String.valueOf(cs.getteam1Overs()));
        
        this.CricketSummaryTeam2Name.setText(T2.getName());
        this.CricketSummaryTeam2Runs.setText(String.valueOf(cs.getteam2Score()));
        this.CricketSummaryTeam2Wickets.setText(String.valueOf(cs.getteam2Wickets()));
        this.CricketSummaryTeam2Overs.setText(String.valueOf(cs.getteam2Overs()));
        
        DefaultTableModel model1=(DefaultTableModel)this.Team1BattingTable.getModel();
        DefaultTableModel model2=(DefaultTableModel)this.Team2BowlingTable.getModel();
        DefaultTableModel model3=(DefaultTableModel)this.Team2BattingTable.getModel();
        DefaultTableModel model4=(DefaultTableModel)this.Team1BowlingTable.getModel();
        
        
       Object[] row1 =new Object[3];
       Object[] row2 =new Object[4];
       model1.setRowCount(0);
       model2.setRowCount(0);
       
        for(int i=0;i<list1.size();i++)
        {
            row1[0]=list1.get(i).getName();
            row2[0]=row1[0];
            CricketPlayerMatchStats temp = cs.getPlayerMatchStats(list1.get(i).getId());
            row1[1]=temp.getScore();
            row2[1]=temp.getRunsConceeded();
            row1[2]=temp.getBalls();
            row2[2]=temp.getWickets();
            row2[3]=temp.getOvers();
            
            model1.addRow(row1);
            model2.addRow(row2);
        }
        
        Object[] row3 =new Object[3];
       Object[] row4 =new Object[4];
       model3.setRowCount(0);
       model4.setRowCount(0);
       
        for(int i=0;i<list2.size();i++)
        {
            row3[0]=list2.get(i).getName();
            row4[0]=row3[0];
            CricketPlayerMatchStats temp = cs.getPlayerMatchStats(list2.get(i).getId());
            row3[1]=temp.getScore();
            row4[1]=temp.getRunsConceeded();
            row3[2]=temp.getBalls();
            row4[2]=temp.getWickets();
            row4[3]=temp.getOvers();
            
            model3.addRow(row3);
            model4.addRow(row4);
        }
        }
        else
        {
        this.CrcketSummaryTeam1Name.setText(T1.getName());
        this.CricketSummaryTeam1Runs.setText("0");
        this.CricketSummaryTeam1Wickets.setText("0");
        this.CricketSummaryTeam1Overs.setText("0.0");
        
        this.CricketSummaryTeam2Name.setText(T2.getName());
        this.CricketSummaryTeam2Runs.setText("0");
        this.CricketSummaryTeam2Wickets.setText("0");
        this.CricketSummaryTeam2Overs.setText("0.0");
        
        ArrayList<Player> list1=new ArrayList<Player>();
        ArrayList<Player> list2=new ArrayList<Player>();
        
        for(int i=0;i<T1.playerList.size();i++)
        {
            Player plyr = T1.getPlayeratindex(i);
            Player plyr1 = T2.getPlayeratindex(i);
            list1.add(plyr);
            list2.add(plyr1);
        }
        
        DefaultTableModel model1=(DefaultTableModel)this.Team1BattingTable.getModel();
        DefaultTableModel model2=(DefaultTableModel)this.Team2BowlingTable.getModel();
        DefaultTableModel model3=(DefaultTableModel)this.Team2BattingTable.getModel();
        DefaultTableModel model4=(DefaultTableModel)this.Team1BowlingTable.getModel();
        
        
       Object[] row1 =new Object[3];
       Object[] row2 =new Object[4];
       model1.setRowCount(0);
       model2.setRowCount(0);
       
        for(int i=0;i<list1.size();i++)
        {
            row1[0]=list1.get(i).getName();
            row2[0]=row1[0];
            row1[1]=0;
            row2[1]=0;
            row1[2]=0;
            row2[2]=0;
            row2[3]=0;
            
            model1.addRow(row1);
            model2.addRow(row2);
        }
        
        Object[] row3 =new Object[3];
       Object[] row4 =new Object[4];
       model3.setRowCount(0);
       model4.setRowCount(0);
       
        for(int i=0;i<list2.size();i++)
        {
            row3[0]=list2.get(i).getName();
            row4[0]=row3[0];
            row3[1]=0;
            row4[1]=0;
            row3[2]=0;
            row4[2]=0;
            row4[3]=0;
            
            model3.addRow(row3);
            model4.addRow(row4);
        }
        
        
        }
        CricketMatch.setVisible(true);
    }//GEN-LAST:event_Fixtures_Cricket_TableMouseClicked

    private void FootballMatchTeam2ScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FootballMatchTeam2ScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FootballMatchTeam2ScoreActionPerformed

    private void FootballMatchTeam1ScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FootballMatchTeam1ScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FootballMatchTeam1ScoreActionPerformed

    private void Fixtures_Basketball_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Fixtures_Basketball_TableMouseClicked
        
        this.BasketballManofTheMatch.setText("");
        
        int index = this.Fixtures_Basketball_Table.getSelectedRow();
         SportType = 3;
        
        
        int id=(Integer)this.Fixtures_Basketball_Table.getValueAt(index, 0);
        
        Schedule s = this.manage.getSchedule(SportType, id);
        
        if(s.getStatus()==true)
        {
            this.BasketballSummarySaveButton.setVisible(false);
        }
        else
        {
            this.BasketballSummarySaveButton.setVisible(true);
        }
        
        Team T1 = s.getTeam1();
        Team T2 = s.getTeam2();
        
        if(s.getMatchsummary()!=null)
        {
        
        this.BasketballManofTheMatch.setText(s.getMatchsummary().MVP.getName());
            
        ArrayList<BasketBallPlayer> list1=new ArrayList<BasketBallPlayer>();
        ArrayList<BasketBallPlayer> list2=new ArrayList<BasketBallPlayer>();
        
        for(int i=0;i<T1.playerList.size();i++)
        {
            BasketBallPlayer plyr = (BasketBallPlayer)T1.getPlayeratindex(i);
            BasketBallPlayer plyr1 = (BasketBallPlayer)T2.getPlayeratindex(i);
            list1.add(plyr);
            list2.add(plyr1);
        }
        
        BasketBallSummary bs =(BasketBallSummary) s.getMatchsummary();  
        
        this.BasketballMatchTeam1Name.setText(T1.getName());
        this.BasketballMatchTeam1Score.setText(String.valueOf(bs.getteam1Points()));
        //this.CricketSummaryTeam1Wickets.setText(String.valueOf(cs.team1Wickets));
        //this.CricketSummaryTeam1Overs.setText(String.valueOf(cs.team1Overs));
        
        this.BasketballMatchTeam2Name.setText(T2.getName());
        this.BasketballMatchTeam2Score.setText(String.valueOf(bs.getteam2Points()));
        //this.CricketSummaryTeam2Wickets.setText(String.valueOf(cs.team2Wickets));
        //this.CricketSummaryTeam2Overs.setText(String.valueOf(cs.team2Overs));
        
        DefaultTableModel model1=(DefaultTableModel)this.BasketballMatchTeam1PlayerTable.getModel();
        DefaultTableModel model2=(DefaultTableModel)this.BasketballMatchTeam2PlayerTable.getModel();
        //DefaultTableModel model3=(DefaultTableModel)this.Team2BattingTable.getModel();
        //DefaultTableModel model4=(DefaultTableModel)this.Team1BowlingTable.getModel();
        
        
       Object[] row1 =new Object[3];
       Object[] row2 =new Object[3];
       model1.setRowCount(0);
       model2.setRowCount(0);
       
        for(int i=0;i<list1.size();i++)
        {
            row1[0]=list1.get(i).getName();
            row2[0]=list2.get(i).getName();
            BasketBallPlayerMatchStats temp = bs.getPlayerMatchStats(list1.get(i).getId());
            BasketBallPlayerMatchStats temp2 = bs.getPlayerMatchStats(list2.get(i).getId());
            row1[1]=temp.getPoints();
            row2[1]=temp2.getPoints();
            row1[2]=temp.getSteals();
            row2[2]=temp2.getSteals();
           
            
            model1.addRow(row1);
            model2.addRow(row2);
        }
        
       
        }
        else
        {
        this.BasketballMatchTeam1Name.setText(T1.getName());
        this.BasketballMatchTeam1Score.setText("0");
        //this.CricketSummaryTeam1Wickets.setText("0");
        //this.CricketSummaryTeam1Overs.setText("0.0");
        
        this.BasketballMatchTeam2Name.setText(T2.getName());
        this.BasketballMatchTeam2Score.setText("0");
        //this.CricketSummaryTeam2Wickets.setText("0");
        //this.CricketSummaryTeam2Overs.setText("0.0");
        
        ArrayList<Player> list1=new ArrayList<Player>();
        ArrayList<Player> list2=new ArrayList<Player>();
        
        for(int i=0;i<T1.playerList.size();i++)
        {
            Player plyr = T1.getPlayeratindex(i);
            Player plyr1 = T2.getPlayeratindex(i);
            list1.add(plyr);
            list2.add(plyr1);
        }
        
        DefaultTableModel model1=(DefaultTableModel)this.BasketballMatchTeam1PlayerTable.getModel();
        DefaultTableModel model2=(DefaultTableModel)this.BasketballMatchTeam2PlayerTable.getModel();
        //DefaultTableModel model3=(DefaultTableModel)this.Team2BattingTable.getModel();
        //DefaultTableModel model4=(DefaultTableModel)this.Team1BowlingTable.getModel();
        
        
       Object[] row1 =new Object[3];
       Object[] row2 =new Object[3];
       model1.setRowCount(0);
       model2.setRowCount(0);
       
        for(int i=0;i<list1.size();i++)
        {
            row1[0]=list1.get(i).getName();
            row2[0]=list2.get(i).getName();
            row1[1]=0;
            row2[1]=0;
            row1[2]=0;
            row2[2]=0;
            //row2[3]=0;
            
            model1.addRow(row1);
            model2.addRow(row2);
        }
        
       
        
        
        }
        BasketballMatch.setVisible(true);
    }//GEN-LAST:event_Fixtures_Basketball_TableMouseClicked

    private void NotificationMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NotificationMenuMouseClicked
        
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(NotificationPanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();   
        
    }//GEN-LAST:event_NotificationMenuMouseClicked

    private void NotificationMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NotificationMenuMouseEntered
        NotificationMenu.setBackground(hoverColor);
    }//GEN-LAST:event_NotificationMenuMouseEntered

    private void NotificationMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NotificationMenuMouseExited
          NotificationMenu.setBackground(menuColor);
    }//GEN-LAST:event_NotificationMenuMouseExited

    private void Notification_Player_OptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Notification_Player_OptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Notification_Player_OptionActionPerformed

    private void LogInConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogInConfirmButtonActionPerformed
     
       if(this.manage.usernameExists(this.LoginUsernameField.getText()) && this.manage.passwordExists(this.LoginPasswordField.getText()))
       {
          this.SignUpHeaderButton.setVisible(false);
          this.LogInLabel.setText("LogOut");
          this.appUser = this.manage.getUser(this.LoginUsernameField.getText());
          
          this.User_Layout();
          InnerMainPanel.removeAll();
          InnerMainPanel.repaint();
          InnerMainPanel.revalidate();
          InnerMainPanel.add(HomePanel);
          InnerMainPanel.repaint();
          InnerMainPanel.revalidate();   
          this.LogIn_Panel.setVisible(false);
       }
       else
       {
           LogInError.setForeground(Color.RED);
       }    
           
    }//GEN-LAST:event_LogInConfirmButtonActionPerformed

    private void LoginUsernameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginUsernameFieldMouseClicked
        LogInError.setForeground(menuColor);
    }//GEN-LAST:event_LoginUsernameFieldMouseClicked

    private void LoginPasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginPasswordFieldMouseClicked
        LogInError.setForeground(menuColor);
    }//GEN-LAST:event_LoginPasswordFieldMouseClicked

    private void CricketTeamDataNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketTeamDataNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketTeamDataNameFieldActionPerformed

    private void VolleyballTeamDataNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolleyballTeamDataNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VolleyballTeamDataNameFieldActionPerformed

    private void Teams_Football_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Teams_Football_dataMouseClicked
        
        
         int index=this.Teams_Football_data.getSelectedRow();
        
        Team T;
        
        if((this.Teams_Football_data.getModel().getValueAt(index, 0))!=null)
        {
        
         T=manage.getTeam(SportType, (Integer)(this.Teams_Football_data.getModel().getValueAt(index, 0)));
        
        
        this.FootballTeamDataNameField.setText(T.getName());
        
        
       DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        
       Object[] row =new Object[3];
       model.setRowCount(0);
       for(int i=0;i<T.playerList.size();i++)
       {
          
       row[0]=T.playerList.get(i).getName();
       row[1]=T.playerList.get(i).getGoals();
       row[2]=T.playerList.get(i).getAssists();
       
        model.addRow(row);
           
       }
       Football_Team_Data.setVisible(true);
      }
    }//GEN-LAST:event_Teams_Football_dataMouseClicked

    private void Teams_Cricket_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Teams_Cricket_dataMouseClicked
         int index=this.Teams_Cricket_data.getSelectedRow();
        
        Team T;
        
        if((this.Teams_Cricket_data.getModel().getValueAt(index, 0))!=null)
        {
        
         T=manage.getTeam(SportType, (Integer)(this.Teams_Cricket_data.getModel().getValueAt(index, 0)));
        
        
        this.CricketTeamDataNameField.setText(T.getName());
        
        
       DefaultTableModel model=(DefaultTableModel)jTable13.getModel();
        
       Object[] row =new Object[3];
       model.setRowCount(0);
       for(int i=0;i<T.playerList.size();i++)
       {
          
       row[0]=T.playerList.get(i).getName();
       row[1]=T.playerList.get(i).getRuns();
       row[2]=T.playerList.get(i).getWickets();
       
        model.addRow(row);
           
       }
       Cricket_Team_Data.setVisible(true);
        }
    }//GEN-LAST:event_Teams_Cricket_dataMouseClicked

    private void SignUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpButtonActionPerformed
          
        boolean validInfo=true;
        
        if(!this.isValidName(this.SignUpNameField.getText()))
        { validInfo = false;
            this.Invalidname.setVisible(true);}
        
        if(!this.isValidUsername(this.SignUpUsernameField.getText()))
        { validInfo = false;
          this.InvalidUsername.setText("Invalid Username");
          this.InvalidUsername.setVisible(true);}
        
        if(!this.isValidEmail(this.SignUpEmailField.getText()))
        { validInfo = false;
          this.InvalidEmail.setVisible(true);}
        
        if(!this.isValidPhoneNumber(this.SignUpPhoneField.getText()))
        { validInfo = false;
          this.InvalidPhone.setVisible(true);}
        
        if(!(this.SignUpPasswordField.getText().length()>=7 && this.SignUpPasswordField.getText().length()<=20))
        { validInfo = false;
          this.InvalidPassword.setVisible(true);}
        
        if(!(this.SignUpConfirmPasswordField.getText().equals(this.SignUpPasswordField.getText())))
        { validInfo = false;
          this.ErrorConfirmPassword.setVisible(true);}
        
        if(this.manage.usernameExists(this.SignUpUsernameField.getText()))
        { validInfo = false;
          this.InvalidUsername.setText("Username Already exists");
          this.InvalidUsername.setVisible(true);}
        
        if(validInfo == true)
        {
            this.appUser = new RegisteredUser(this.manage.getNewUserId(),this.SignUpNameField.getText(),this.SignUpUsernameField.getText(),this.SignUpPasswordField.getText(),this.SignUpEmailField.getText(),this.SignUpPhoneField.getText());
            this.LogInLabel.setText("LogOut");
            this.SignUpHeaderButton.setVisible(false);
            this.User_Layout();
            if(manage.AddUSer(appUser,3))
            {
                this.SignUp_Panel.setVisible(false);
            }
        }
    }//GEN-LAST:event_SignUpButtonActionPerformed

    private void SignUpUsernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpUsernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignUpUsernameFieldActionPerformed

    private void RegisterTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterTeamButtonActionPerformed
        
      
      
        
        if(this.TeamRegistrationNameField.getText().isEmpty())
        {
             JOptionPane.showMessageDialog(rootPane,"Team Name Field Left Empty!!");
             return;
        }
        else
        {
        
        int playerCount = manage.getPlayerLimit(SportType);
        Team registeredTeam = new Team((this.manage.getNewTeamID()),this.TeamRegistrationNameField.getText(),this.appUser,false);
        
        
        db.AddTeam(registeredTeam, SportType);
        
        this.UserSportType=this.SportType;
        for(int i=0; i<playerCount; i++)
        {
            String name = this.TeamRegistrationPlayerTable.getValueAt(i,0).toString();
            String Designation = this.TeamRegistrationPlayerTable.getValueAt(i,1).toString();
            String email = this.TeamRegistrationPlayerTable.getValueAt(i,2).toString();
            String phoneNo = this.TeamRegistrationPlayerTable.getValueAt(i,3).toString();
            
          if(name.isEmpty() || Designation.isEmpty() || email.isEmpty() || phoneNo.isEmpty())
          {
             JOptionPane.showMessageDialog(rootPane,"All fields need to be filled!!");
            
             return; 
            
          }
          else if(this.isValidName(name)==false )
          {
             JOptionPane.showMessageDialog(rootPane,"Inavlid name of player entered!!");
              
             return;   
          }
          else if(this.isValidName(Designation)==false )
          {
             JOptionPane.showMessageDialog(rootPane,"Inavlid designation of player entered!!");
            
             return;    
          }
          else if(this.isValidEmail(email)==false )
          {
             JOptionPane.showMessageDialog(rootPane,"Inavlid email format of player entered!!");
           
             return; 
          }
          else if(this.isValidPhoneNumber(phoneNo)==false )
          {
             JOptionPane.showMessageDialog(rootPane,"Inavlid phoneNo format of player entered!!");
             
             return;      
          }
          
         else
          {
          
          
          
            switch (SportType) {
                case 1:
                    registeredTeam.AddPlayer(new CricketPlayer(db.getPlayerCount()+1,name,email,phoneNo,Designation),SportType);
                    break;
                case 2:
                    registeredTeam.AddPlayer(new FootballPlayer(db.getPlayerCount()+1,name,email,phoneNo,Designation),SportType);
                    break;
                case 3:
                    registeredTeam.AddPlayer(new BasketBallPlayer(db.getPlayerCount()+1,name,email,phoneNo,Designation),SportType);
                    break;
                default: 
                    break;
            }
       
        }
         }
              
             manage.AddTeam(registeredTeam, SportType);
             this.RegisterTeamButton.setVisible(false);
             this.PaymentOption.setVisible(true); 
             
          }
        
     //}
    }//GEN-LAST:event_RegisterTeamButtonActionPerformed

    private void TeamRegistrationNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeamRegistrationNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TeamRegistrationNameFieldActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
       
        this.Add_Organizer_Name_Field.setText("");
        this.Add_Organizer_Username_Field.setText("");
        this.Add_Organizer_Email_Field.setText("");
        this.Add_Organizer_Password_Field.setText("");
        this.Add_Organizer_Confirm_Field.setText("");
        this.Add_Organizer_Phone_Field.setText("");
        
        OrganizerAddPanel.setVisible(true);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void Add_Organizer_Email_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Organizer_Email_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_Organizer_Email_FieldActionPerformed

    private void AddOrganizerConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddOrganizerConfirmButtonActionPerformed
         
        if(Add_Organizer_Name_Field.getText().isEmpty() || Add_Organizer_Username_Field.getText().isEmpty() || Add_Organizer_Phone_Field.getText().isEmpty() || Add_Organizer_Email_Field.getText().isEmpty() || Add_Organizer_Password_Field.getText().isEmpty() || Add_Organizer_Confirm_Field.getText().isEmpty()  )
             JOptionPane.showMessageDialog(rootPane,"All fields need to be filled!!");
            
        else if(this.isValidName(Add_Organizer_Name_Field.getText())==false)
            JOptionPane.showMessageDialog(rootPane,"Invalid Name Format!!");
        
        else if(this.isValidUsername(Add_Organizer_Username_Field.getText())==false)
            JOptionPane.showMessageDialog(rootPane,"Invalid Username Format!!");
         
        else if(this.isValidEmail(Add_Organizer_Email_Field.getText())==false)
            JOptionPane.showMessageDialog(rootPane,"Invalid email Format!!");
          
        else if(this.isValidPhoneNumber(Add_Organizer_Phone_Field.getText())==false)
            JOptionPane.showMessageDialog(rootPane,"Invalid PhoneNo Format!!");
         
        else if(!Add_Organizer_Password_Field.getText().equals(Add_Organizer_Confirm_Field.getText()))
         {
          JOptionPane.showMessageDialog(rootPane,"Passwords doesn't match!!");
         }
        else if(this.manage.usernameExists(Add_Organizer_Username_Field.getText()))
        {
        JOptionPane.showMessageDialog(rootPane,"username already exists!!");
        }
        
        else if(Add_Organizer_Password_Field.getText().equals(Add_Organizer_Confirm_Field.getText()) && this.Add_Organizer_Password_Field.getText().length()==this.Add_Organizer_Confirm_Field.getText().length())
        {
         User tempOrganizer = new Organizer(this.manage.getNewUserId(),this.Add_Organizer_Name_Field.getText(),this.Add_Organizer_Username_Field.getText(),this.Add_Organizer_Password_Field.getText(),this.Add_Organizer_Email_Field.getText(),this.Add_Organizer_Phone_Field.getText());
   
       manage.AddUSer(tempOrganizer,2);
       
         DefaultTableModel model=(DefaultTableModel)OrganizersListTable.getModel();
        
       Object[] row =new Object[4];
       
       row[0]=tempOrganizer.getId();
       row[1]=tempOrganizer.getName();
       row[2]=tempOrganizer.getEmail();
       row[3]=tempOrganizer.getPhoneno();
       model.addRow(row);
        
         JOptionPane.showMessageDialog(rootPane,"Organizer Added");
         this.OrganizerAddPanel.setVisible(false);
        
        }
    }//GEN-LAST:event_AddOrganizerConfirmButtonActionPerformed

    private void Add_Organizer_Confirm_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Organizer_Confirm_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_Organizer_Confirm_FieldActionPerformed

    private void Add_Organizer_Password_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Organizer_Password_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_Organizer_Password_FieldActionPerformed

    private void Add_Organizer_Username_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Organizer_Username_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_Organizer_Username_FieldActionPerformed

    private void Add_Organizer_Phone_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Organizer_Phone_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_Organizer_Phone_FieldActionPerformed

    private void Add_Organizer_Name_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Organizer_Name_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_Organizer_Name_FieldActionPerformed

    private void PaymentMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaymentMenuMouseClicked
       
        this.AccountInfoField.setText("");
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(PaymentPanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();  
    }//GEN-LAST:event_PaymentMenuMouseClicked

    private void PaymentMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaymentMenuMouseEntered
        
          PaymentMenu.setBackground(hoverColor);
    }//GEN-LAST:event_PaymentMenuMouseEntered

    private void PaymentMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaymentMenuMouseExited
        
          PaymentMenu.setBackground(menuColor);
    }//GEN-LAST:event_PaymentMenuMouseExited

    private void AccountInfoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountInfoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AccountInfoFieldActionPerformed

    private void JazzCashButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JazzCashButtonMouseClicked
        this.EasyPaisaButton.setSelected(false);
    }//GEN-LAST:event_JazzCashButtonMouseClicked

    private void EasyPaisaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EasyPaisaButtonMouseClicked
        this.JazzCashButton.setSelected(false);
    }//GEN-LAST:event_EasyPaisaButtonMouseClicked

    private void PayButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PayButtonMouseClicked
        
      if(this.isValidPhoneNumber(this.AccountInfoField.getText()))
      {
        
        Team T = this.manage.getCaptainTeam(this.UserSportType,this.appUser.getId());
        int paymentType=0;
        
        if(this.EasyPaisaButton.getModel().isSelected()==true)
        {
            paymentType=2;
            T.setPaymentStatus(true);
        }
        else if(this.JazzCashButton.getModel().isSelected()==true)
        {
            paymentType=1;
            T.setPaymentStatus(true);
        }
        
        if(db.UpdateTeam(T))
        {
            if(db.addPayment(T.getId(), paymentType, this.AccountInfoField.getText()))
            {
             this.manage.UpdateTeam(T, this.UserSportType);
            }
        }
      }
      else
      {
          JOptionPane.showMessageDialog(rootPane, "Invalid Account Format (03XX-XXXXXXX) ");
      }
    }//GEN-LAST:event_PayButtonMouseClicked

    private void PayNowButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PayNowButtonMouseClicked
        
        this.PaymentOption.setVisible(false);
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(PaymentPanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();  
        
    }//GEN-LAST:event_PayNowButtonMouseClicked

    private void PayLaterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PayLaterButtonMouseClicked
        
        this.PaymentOption.setVisible(false);
        
    }//GEN-LAST:event_PayLaterButtonMouseClicked

    private void AddMatchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMatchButtonActionPerformed
        
         Team t1=this.manage.getTeam(SportType,Team1ComboBox.getSelectedItem().toString());
        Team t2=this.manage.getTeam(SportType,Team2ComboBox.getSelectedItem().toString()); 
        
     if(!(t1.getName().equals(t2.getName())))
     {
        
        Schedule s=new Schedule(this.manage.getNewMatchID(),t1,t2,TimeComboBox.getSelectedItem().toString(),datetextfield.getText(),VenueComboBox.getSelectedItem().toString(),false);
        
        for(int i=0;i<this.manage.userList.size();i++) //lol
        {
          if(this.manage.userList.get(i).getName().equals(this.OfficialComboBox1.getSelectedItem().toString()))
          {
          s.setOffcial((Organizer)this.manage.userList.get(i));
          break;
          }
        
        }
        
        
        
        if(valid_date(datetextfield.getText())==false || datetextfield.getText().isEmpty())
            JOptionPane.showMessageDialog(rootPane,"Invalid date format");
        
        else if(this.manage.CheckSchedule(s, SportType))
        {
           
          if(this.manage.CheckOfficial(s))
          {
              
          
        db.AddMatch(s, SportType);
        this.manage.AddMatch(s, SportType);
        
        DefaultTableModel model2 =null;
        
        if(SportType==1)
           model2=(DefaultTableModel)Fixtures_Cricket_Table.getModel();
        if(SportType==2)
           model2=(DefaultTableModel)Fixtures_Football_Table.getModel();
        if(SportType==3)
           model2=(DefaultTableModel)Fixtures_Basketball_Table.getModel();
        
       Object[] row2 =new Object[8];
       
       row2[0]=s.getID();
       row2[1]=s.getTeam1().getName();
       row2[2]=s.getDate();
       row2[3]=s.getTime();
       row2[4]=s.getVenue();
       row2[5]=s.getTeam2().getName();
       row2[6]=s.getStatus();
       row2[7]=s.getOffcial().getName();
       model2.addRow(row2);
       
       JOptionPane.showMessageDialog(rootPane, "Match Successfully Added !!");
       this.AddMatchDialog.setVisible(false);
       
        }
        else
        {
             JOptionPane.showMessageDialog(rootPane, "This official Already has been allocated to a match at this time");
        }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"A match At this Time Already Exists Or One of the teams has a match at this time !!");
        }
     }
     else
     {
         JOptionPane.showMessageDialog(rootPane,"Both the Selected Teams for the match are the same !!");
     }
     
    }//GEN-LAST:event_AddMatchButtonActionPerformed

    private void Football_Add_Match_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Football_Add_Match_ButtonMouseClicked
        
            this.Team1ComboBox.removeAllItems();
            this.Team2ComboBox.removeAllItems();
            this.TimeComboBox.removeAllItems();
            this.VenueComboBox.removeAllItems();
            this.OfficialComboBox1.removeAllItems();
            
        ArrayList<String> venues=new ArrayList<>();
        venues.add("Cricket Ground");
        venues.add("Football Ground");
        venues.add("Basketball Ground");
        
        ArrayList<String> timings=new ArrayList<>();
        timings.add("1-2 pm");
        timings.add("2-3 pm");
        timings.add("3-4 pm");
        timings.add("4-5 pm");
        timings.add("5-6 pm");
        timings.add("6-7 pm");
        
        ArrayList<Team> teams=new ArrayList<Team>();
        teams = this.manage.getTeamList(2);
         
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team1ComboBox.addItem(teams.get(i).getName());
        }
        
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team2ComboBox.addItem(teams.get(i).getName());
        }
        
         for(int i=0;i<timings.size();i++)
        {
            //if(teams.get(i).paymentStatus==true)
            this.TimeComboBox.addItem(timings.get(i));
        }
        
        for(int i=0;i<venues.size();i++)
        {
            this.VenueComboBox.addItem(venues.get(i));
        }
        
        for(int i=0;i<this.manage.userList.size();i++)
        {
            if(this.manage.userList.get(i).getUserType()==2)
                this.OfficialComboBox1.addItem(this.manage.userList.get(i).getName());
        }
        
        this.datetextfield.setText("");
        
        this.AddMatchDialog.setVisible(true);
      
    }//GEN-LAST:event_Football_Add_Match_ButtonMouseClicked

    private void Basketball_Add_Match_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Basketball_Add_Match_ButtonMouseClicked
        
            this.Team1ComboBox.removeAllItems();
            this.Team2ComboBox.removeAllItems();
            this.TimeComboBox.removeAllItems();
            this.VenueComboBox.removeAllItems();
            this.OfficialComboBox1.removeAllItems();
            
            ArrayList<String> venues=new ArrayList<>();
        venues.add("Cricket Ground");
        venues.add("Football Ground");
        venues.add("Basketball Ground");
        
        ArrayList<String> timings=new ArrayList<>();
        timings.add("1-2 pm");
        timings.add("2-3 pm");
        timings.add("3-4 pm");
        timings.add("4-5 pm");
        timings.add("5-6 pm");
        timings.add("6-7 pm");
        
        
        
        ArrayList<Team> teams=new ArrayList<Team>();
        teams = this.manage.getTeamList(3);
         
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team1ComboBox.addItem(teams.get(i).getName());
        }
        
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team2ComboBox.addItem(teams.get(i).getName());
        }
        
        for(int i=0;i<timings.size();i++)
        {
            //if(teams.get(i).paymentStatus==true)
            this.TimeComboBox.addItem(timings.get(i));
        }
        
        for(int i=0;i<venues.size();i++)
        {
            this.VenueComboBox.addItem(venues.get(i));
        }
        
        for(int i=0;i<this.manage.userList.size();i++)
        {
            if(this.manage.userList.get(i).getUserType()==2)
                this.OfficialComboBox1.addItem(this.manage.userList.get(i).getName());
        }
        
       this.datetextfield.setText("");
        
        this.AddMatchDialog.setVisible(true);
        
    }//GEN-LAST:event_Basketball_Add_Match_ButtonMouseClicked

    private void Cricket_Add_Match_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cricket_Add_Match_ButtonMouseClicked
       
            this.Team1ComboBox.removeAllItems();
            this.Team2ComboBox.removeAllItems();
            this.TimeComboBox.removeAllItems();
            this.VenueComboBox.removeAllItems();
            this.OfficialComboBox1.removeAllItems();
            
            ArrayList<String> venues=new ArrayList<>();
        venues.add("Cricket Ground");
        venues.add("Football Ground");
        venues.add("Volleyball Ground");
        
        ArrayList<String> timings=new ArrayList<>();
        timings.add("1-2 pm");
        timings.add("2-3 pm");
        timings.add("3-4 pm");
        timings.add("4-5 pm");
        timings.add("5-6 pm");
        timings.add("6-7 pm");
            
            
        ArrayList<Team> teams=new ArrayList<Team>();
        teams = this.manage.getTeamList(1);
         
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team1ComboBox.addItem(teams.get(i).getName());
        }
        
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team2ComboBox.addItem(teams.get(i).getName());
        }
        
         for(int i=0;i<timings.size();i++)
        {
            //if(teams.get(i).paymentStatus==true)
            this.TimeComboBox.addItem(timings.get(i));
        }
        
        for(int i=0;i<venues.size();i++)
        {
            this.VenueComboBox.addItem(venues.get(i));
        }
        
        for(int i=0;i<this.manage.userList.size();i++)
        {
            if(this.manage.userList.get(i).getUserType()==2)
                this.OfficialComboBox1.addItem(this.manage.userList.get(i).getName());
        }
        
        this.datetextfield.setText("");
        
        this.AddMatchDialog.setVisible(true);
        
        String temp=(String)this.Team1ComboBox.getSelectedItem();
        
        System.out.print(temp);
        
    }//GEN-LAST:event_Cricket_Add_Match_ButtonMouseClicked

    private void RegisterTeamButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterTeamButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_RegisterTeamButtonMouseClicked

    private void RegisterTeamButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterTeamButtonMouseReleased

    }//GEN-LAST:event_RegisterTeamButtonMouseReleased

    private void datetextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datetextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datetextfieldActionPerformed

    private void SignUpNameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpNameFieldMouseClicked
        this.Invalidname.setVisible(false);
    }//GEN-LAST:event_SignUpNameFieldMouseClicked

    private void SignUpUsernameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpUsernameFieldMouseClicked
        this.InvalidUsername.setVisible(false);
    }//GEN-LAST:event_SignUpUsernameFieldMouseClicked

    private void SignUpEmailFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpEmailFieldMouseClicked
        this.InvalidEmail.setVisible(false);
    }//GEN-LAST:event_SignUpEmailFieldMouseClicked

    private void SignUpPasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpPasswordFieldMouseClicked
        this.InvalidPassword.setVisible(false);
    }//GEN-LAST:event_SignUpPasswordFieldMouseClicked

    private void SignUpConfirmPasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpConfirmPasswordFieldMouseClicked
        this.ErrorConfirmPassword.setVisible(false);
    }//GEN-LAST:event_SignUpConfirmPasswordFieldMouseClicked

    private void SignUpPhoneFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpPhoneFieldMouseClicked
        this.InvalidPhone.setVisible(false);
    }//GEN-LAST:event_SignUpPhoneFieldMouseClicked

    private void CricketSummaryTeam1RunsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketSummaryTeam1RunsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketSummaryTeam1RunsActionPerformed

    private void CricketSummaryTeam2RunsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CricketSummaryTeam2RunsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CricketSummaryTeam2RunsActionPerformed
     
    private void SaveCricketSummaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveCricketSummaryButtonActionPerformed
        
        int index = this.Fixtures_Cricket_Table.getSelectedRow();
        SportType = 1;
        
        
        int id=(Integer)this.Fixtures_Cricket_Table.getValueAt(index, 0);
        
        String MVP_name = this.CricketManOfTheMatch.getText();
        
        Schedule s = this.manage.getSchedule(SportType, id);
        
        Team T1 = this.manage.getTeam(SportType, s.getTeam1().getName());
        Team T2 = this.manage.getTeam(SportType, s.getTeam2().getName());
        int score1 = Integer.valueOf(this.CricketSummaryTeam1Runs.getText());
        int score2 = Integer.valueOf(this.CricketSummaryTeam2Runs.getText());
        int wickets1 = Integer.valueOf(this.CricketSummaryTeam1Wickets.getText());
        int wickets2 = Integer.valueOf(this.CricketSummaryTeam2Wickets.getText());
        float overs1 = Float.valueOf(this.CricketSummaryTeam1Overs.getText());
        float overs2 = Float.valueOf(this.CricketSummaryTeam2Overs.getText());
        CricketSummary summary=new CricketSummary(score1,score2,wickets1,wickets2,overs1,overs2);
        
        ArrayList<Player> L1 = new ArrayList<Player>();
        ArrayList<Player> L2 = new ArrayList<Player>();
        
        for(int i=0;i<T1.playerList.size(); i++)
        {
            int p_id = T1.playerList.get(i).getId();
            int runs =Integer.parseInt(this.Team1BattingTable.getValueAt(i, 1).toString());
            int balls = Integer.parseInt(this.Team1BattingTable.getValueAt(i, 2).toString());
            int runsConceded = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 1).toString());
            int wickets = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 2).toString());
            float overs = Float.parseFloat(this.Team2BowlingTable.getValueAt(i, 3).toString());
            
            summary.addTeam1PlayerStats(new CricketPlayerMatchStats(p_id,runs,balls,overs,runsConceded,wickets));
            
            CricketPlayer player =(CricketPlayer) T1.playerList.get(i);
            player.setStats(player.getMatchesPlayed()+1, player.getTotalruns()+runs, player.getTotalwickets()+wickets, player.getTotalruns()/(player.getMatchesPlayed()+1));
            
            L1.add(player);
        }
        T1.LoadPlayers(L1);
        
        for(int i=0;i<T2.playerList.size(); i++)
        {
            int p_id = T2.playerList.get(i).getId();
            int runs =Integer.parseInt(this.Team2BattingTable.getValueAt(i, 1).toString());
            int balls = Integer.parseInt(this.Team2BattingTable.getValueAt(i, 2).toString());
            int runsConceded = Integer.parseInt(this.Team1BowlingTable.getValueAt(i, 1).toString());
            int wickets = Integer.parseInt(this.Team1BowlingTable.getValueAt(i, 2).toString());
            float overs = Float.parseFloat(this.Team1BowlingTable.getValueAt(i, 3).toString());
            
            summary.addTeam2PlayerStats(new CricketPlayerMatchStats(p_id,runs,balls,overs,runsConceded,wickets));
            
            CricketPlayer player =(CricketPlayer) T2.playerList.get(i);
            player.setStats(player.getMatchesPlayed()+1, player.getTotalruns()+runs, player.getTotalwickets()+wickets, player.getTotalruns()/(player.getMatchesPlayed()+1));
            
            L2.add(player);
        }
        
        T2.LoadPlayers(L2);
        
        if(summary.getteam1Score()>summary.getteam2Score())
        {
            T1.setStats(T1.getPlayed()+1, T1.getWins()+1, T1.getLosses(), T1.getTies(), T1.getPoints()+3);
            T2.setStats(T2.getPlayed()+1, T2.getWins(), T2.getLosses()+1, T2.getTies(), T2.getPoints());  
        }
        else if(summary.getteam1Score()<summary.getteam2Score())
        {    
            T1.setStats(T1.getPlayed()+1, T1.getWins(), T1.getLosses()+1, T1.getTies(), T1.getPoints());   
            T2.setStats(T2.getPlayed()+1, T2.getWins()+1, T2.getLosses(), T2.getTies(), T2.getPoints()+3);
        }
        else
        {
            T1.setStats(T1.getPlayed()+1, T1.getWins(), T1.getLosses(), T1.getTies()+1, T1.getPoints()+1);
            T2.setStats(T2.getPlayed()+1, T2.getWins(), T2.getLosses(), T2.getTies()+1, T2.getPoints()+1);
        }
        
        this.db.UpdateTeam(T1);
        this.db.updatePlayers(T1, SportType);
        this.db.UpdateTeam(T2);
        this.db.updatePlayers(T2, SportType);
        this.manage.UpdateTeam(T1, SportType);
        this.manage.UpdateTeam(T2, SportType);
        
         for(int i=0;i<T1.playerList.size();i++)
        {
            if(T1.playerList.get(i).getName().equals(MVP_name))
            {
                summary.setMVP(T1.getPlayeratindex(i));
                break;
            }
            else if(T2.playerList.get(i).getName().equals(MVP_name))
            {
                summary.setMVP(T2.getPlayeratindex(i));
                break;
            }
        }
        
        s.setTeam1(T1);
        s.setTeam2(T2);
        s.setMatchsummary(summary);
        s.setStatus(true);
        
        this.db.updateSchedule(s);
        this.manage.UpdateSchedule(s, SportType);  
        this.db.AddCricketSummary(s);
        
        this.PrintCricketPointsTable();
        this.PrintCricketFixtures();
        this.PrintCricketTopScorers();
        this.PrintCricketTopWicketTakers();
        this.CricketMatch.setVisible(false);
        
    }//GEN-LAST:event_SaveCricketSummaryButtonActionPerformed

    private void BasketballMatchTeam2ScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BasketballMatchTeam2ScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BasketballMatchTeam2ScoreActionPerformed

    private void BasketballMatchTeam1ScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BasketballMatchTeam1ScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BasketballMatchTeam1ScoreActionPerformed

    private void FootballSummarySaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FootballSummarySaveButtonActionPerformed


        int index = this.Fixtures_Football_Table.getSelectedRow();
        SportType = 2;
        
        
        int id=(Integer)this.Fixtures_Football_Table.getValueAt(index, 0);
        
        String MVP_name = this.FootballManOfTheMatch.getText();
        
        Schedule s = this.manage.getSchedule(SportType, id);
        
        Team T1 = this.manage.getTeam(SportType, s.getTeam1().getName());
        Team T2 = this.manage.getTeam(SportType, s.getTeam2().getName());
        int goals1 = Integer.valueOf(this.FootballMatchTeam1Score.getText());
        int goals2 = Integer.valueOf(this.FootballMatchTeam2Score.getText());
        //int wickets1 = Integer.valueOf(this.CricketSummaryTeam1Wickets.getText());
        //int wickets2 = Integer.valueOf(this.CricketSummaryTeam2Wickets.getText());
        //float overs1 = Float.valueOf(this.CricketSummaryTeam1Overs.getText());
        //float overs2 = Float.valueOf(this.CricketSummaryTeam2Overs.getText());
        FootballSummary summary=new FootballSummary(goals1,goals2);
        //---------------------------------------------------------------
        ArrayList<Player> L1 = new ArrayList<Player>();
        ArrayList<Player> L2 = new ArrayList<Player>();
        
        for(int i=0;i<T1.playerList.size(); i++)
        {
            int p_id = T1.playerList.get(i).getId();
            int goals =Integer.parseInt(this.FootballMatchTeam1PlayerTable.getValueAt(i, 1).toString());
            int assists = Integer.parseInt(this.FootballMatchTeam1PlayerTable.getValueAt(i, 2).toString());
            //int runsConceded = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 1).toString());
            //int wickets = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 2).toString());
            //float overs = Float.parseFloat(this.Team2BowlingTable.getValueAt(i, 3).toString());
            
            summary.addTeam1PlayerStats(new FootballPlayerMatchStats(p_id,goals,assists));
            
            FootballPlayer player =(FootballPlayer) T1.playerList.get(i);
            player.setStats(player.getTotalGoals()+goals, player.getTotalAssists()+assists);
            
            L1.add(player);
        }
        T1.LoadPlayers(L1);
        
        for(int i=0;i<T2.playerList.size(); i++)
        {
            int p_id = T2.playerList.get(i).getId();
            int goals =Integer.parseInt(this.FootballMatchTeam2PlayerTable.getValueAt(i, 1).toString());
            int assists = Integer.parseInt(this.FootballMatchTeam2PlayerTable.getValueAt(i, 2).toString());
            //int runsConceded = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 1).toString());
            //int wickets = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 2).toString());
            //float overs = Float.parseFloat(this.Team2BowlingTable.getValueAt(i, 3).toString());
            
            summary.addTeam1PlayerStats(new FootballPlayerMatchStats(p_id,goals,assists));
            
            FootballPlayer player =(FootballPlayer) T2.playerList.get(i);
            player.setStats(player.getTotalGoals()+goals, player.getTotalAssists()+assists);
            
            L2.add(player);
        }
        
        T2.LoadPlayers(L2);
        
        if(summary.getteam1Goals()>summary.getteam2Goals())
        {
            T1.setStats(T1.getPlayed()+1, T1.getWins()+1, T1.getLosses(), T1.getTies(), T1.getPoints()+3);
            T2.setStats(T2.getPlayed()+1, T2.getWins(), T2.getLosses()+1, T2.getTies(), T2.getPoints());  
        }
        else if(summary.getteam1Goals()<summary.getteam2Goals())
        {    
            T1.setStats(T1.getPlayed()+1, T1.getWins(), T1.getLosses()+1, T1.getTies(), T1.getPoints());   
            T2.setStats(T2.getPlayed()+1, T2.getWins()+1, T2.getLosses(), T2.getTies(), T2.getPoints()+3);
        }
        else
        {
            T1.setStats(T1.getPlayed()+1, T1.getWins(), T1.getLosses(), T1.getTies()+1, T1.getPoints()+1);
            T2.setStats(T2.getPlayed()+1, T2.getWins(), T2.getLosses(), T2.getTies()+1, T2.getPoints()+1);
        }
        
        this.db.UpdateTeam(T1);
        this.db.updatePlayers(T1, SportType); 
        this.db.UpdateTeam(T2);
        this.db.updatePlayers(T2, SportType);
        this.manage.UpdateTeam(T1, SportType);
        this.manage.UpdateTeam(T2, SportType);
        
         for(int i=0;i<T1.playerList.size();i++)
        {
            if(T1.playerList.get(i).getName().equals(MVP_name))
            {
                summary.setMVP(T1.getPlayeratindex(i));
                break;
            }
            else if(T2.playerList.get(i).getName().equals(MVP_name))
            {
                summary.setMVP(T2.getPlayeratindex(i));
                break;
            }
        }
        
        s.setTeam1(T1);
        s.setTeam2(T2);
        s.setMatchsummary(summary);
        s.setStatus(true);
        
        
        
        this.db.updateSchedule(s);
        this.manage.UpdateSchedule(s, SportType);  
        this.db.AddFootballSummary(s);
        
        //-----------------------------------------------------------------------
        this.PrintFootballPointsTable();
        this.PrintFootballFixtures();
        this.PrintFootballTopGoalScorers();
        this.PrintFootballTopAssistMakers();
        this.FootballMatch.setVisible(false);
        
                // TODO add your handling code here:
    }//GEN-LAST:event_FootballSummarySaveButtonActionPerformed

    private void BasketballSummarySaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BasketballSummarySaveButtonActionPerformed
        int index = this.Fixtures_Basketball_Table.getSelectedRow();
        SportType = 3;
        
        
        int id=(Integer)this.Fixtures_Basketball_Table.getValueAt(index, 0);
        
        String MVP_name = this.BasketballManofTheMatch.getText();
        
        Schedule s = this.manage.getSchedule(SportType, id);
        
        Team T1 = this.manage.getTeam(SportType, s.getTeam1().getName());
        Team T2 = this.manage.getTeam(SportType, s.getTeam2().getName());
        int points1 = Integer.valueOf(this.BasketballMatchTeam1Score.getText());
        int points2 = Integer.valueOf(this.BasketballMatchTeam2Score.getText());
        //int wickets1 = Integer.valueOf(this.CricketSummaryTeam1Wickets.getText());
        //int wickets2 = Integer.valueOf(this.CricketSummaryTeam2Wickets.getText());
        //float overs1 = Float.valueOf(this.CricketSummaryTeam1Overs.getText());
        //float overs2 = Float.valueOf(this.CricketSummaryTeam2Overs.getText());
        BasketBallSummary summary=new BasketBallSummary(points1,points2);
        //---------------------------------------------------------------
        ArrayList<Player> L1 = new ArrayList<Player>();
        ArrayList<Player> L2 = new ArrayList<Player>();
        
        for(int i=0;i<T1.playerList.size(); i++)
        {
            int p_id = T1.playerList.get(i).getId();
            int points =Integer.parseInt(this.BasketballMatchTeam1PlayerTable.getValueAt(i, 1).toString());
            int steals = Integer.parseInt(this.BasketballMatchTeam1PlayerTable.getValueAt(i, 2).toString());
            //int runsConceded = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 1).toString());
            //int wickets = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 2).toString());
            //float overs = Float.parseFloat(this.Team2BowlingTable.getValueAt(i, 3).toString());
            
            summary.addTeam1PlayerStats(new BasketBallPlayerMatchStats(p_id,points,steals));
            
            BasketBallPlayer player =(BasketBallPlayer) T1.playerList.get(i);
            player.setStats(player.getTtotalPoints()+points, player.getTotalSteals()+steals);
            
            L1.add(player);
        }
        T1.LoadPlayers(L1);
        
        for(int i=0;i<T2.playerList.size(); i++)
        {
            int p_id = T2.playerList.get(i).getId();
            int points =Integer.parseInt(this.BasketballMatchTeam2PlayerTable.getValueAt(i, 1).toString());
            int steals = Integer.parseInt(this.BasketballMatchTeam2PlayerTable.getValueAt(i, 2).toString());
            //int runsConceded = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 1).toString());
            //int wickets = Integer.parseInt(this.Team2BowlingTable.getValueAt(i, 2).toString());
            //float overs = Float.parseFloat(this.Team2BowlingTable.getValueAt(i, 3).toString());
            
            summary.addTeam1PlayerStats(new BasketBallPlayerMatchStats(p_id,points,steals));
            
            BasketBallPlayer player =(BasketBallPlayer) T2.playerList.get(i);
            player.setStats(player.getTtotalPoints()+points, player.getTotalSteals()+steals);
            
            L2.add(player);
        }
        
        T2.LoadPlayers(L2);
        
        if(summary.getteam1Points()>summary.getteam2Points())
        {
            T1.setStats(T1.getPlayed()+1, T1.getWins()+1, T1.getLosses(), T1.getTies(), T1.getPoints()+3);
            T2.setStats(T2.getPlayed()+1, T2.getWins(), T2.getLosses()+1, T2.getTies(), T2.getPoints());  
        }
        else if(summary.getteam1Points()<summary.getteam2Points())
        {    
            T1.setStats(T1.getPlayed()+1, T1.getWins(), T1.getLosses()+1, T1.getTies(), T1.getPoints());   
            T2.setStats(T2.getPlayed()+1, T2.getWins()+1, T2.getLosses(), T2.getTies(), T2.getPoints()+3);
        }
        else
        {
            T1.setStats(T1.getPlayed()+1, T1.getWins(), T1.getLosses(), T1.getTies()+1, T1.getPoints()+1);
            T2.setStats(T2.getPlayed()+1, T2.getWins(), T2.getLosses(), T2.getTies()+1, T2.getPoints()+1);
        }
        
        this.db.UpdateTeam(T1);
        this.db.updatePlayers(T1, SportType); 
        this.db.UpdateTeam(T2);
        this.db.updatePlayers(T2, SportType);
        this.manage.UpdateTeam(T1, SportType);
        this.manage.UpdateTeam(T2, SportType);
        
        for(int i=0;i<T1.playerList.size();i++)
        {
            if(T1.playerList.get(i).getName().equals(MVP_name))
            {
                summary.setMVP(T1.getPlayeratindex(i));
                break;
            }
            else if(T2.playerList.get(i).getName().equals(MVP_name))
            {
                summary.setMVP(T2.getPlayeratindex(i));
                break;
            }
        }
        
        
        
        s.setTeam1(T1);
        s.setTeam2(T2);
        s.setMatchsummary(summary);
        s.setStatus(true);
        
        
        this.db.updateSchedule(s);
        this.manage.UpdateSchedule(s, SportType);  
        this.db.AddBasketballSummary(s);
        
        //-----------------------------------------------------------------------
        this.PrintBasketballPointsTable();
        this.PrintBasketballFixtures();
        this.PrintBasketballTopDunkers();
        this.BasketballMatch.setVisible(false);
    }//GEN-LAST:event_BasketballSummarySaveButtonActionPerformed

    private void CertificateMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CertificateMenuMouseClicked
        
        InnerMainPanel.removeAll();
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate();
        InnerMainPanel.add(CertificatePanel);
        InnerMainPanel.repaint();
        InnerMainPanel.revalidate(); 
        
    }//GEN-LAST:event_CertificateMenuMouseClicked

    private void CertificateMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CertificateMenuMouseEntered
        
        this.CertificateMenu.setBackground(hoverColor);
        
    }//GEN-LAST:event_CertificateMenuMouseEntered

    private void CertificateMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CertificateMenuMouseExited
       
        this.CertificateMenu.setBackground(menuColor);
        
    }//GEN-LAST:event_CertificateMenuMouseExited

    private void SignUpHeaderButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpHeaderButtonMouseClicked
        this.SignUpFormShow();
    }//GEN-LAST:event_SignUpHeaderButtonMouseClicked

    private void SignUpHeaderButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpHeaderButtonMouseEntered
        this.SignUpHeaderButton.setBackground(new Color(204,204,255));
    }//GEN-LAST:event_SignUpHeaderButtonMouseEntered

    private void SignUpHeaderButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpHeaderButtonMouseExited
        this.SignUpHeaderButton.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_SignUpHeaderButtonMouseExited

    private void UpdateScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateScheduleActionPerformed
        
       if(this.MatchIdComboBox1.getSelectedItem()!=null)
       {
        Schedule s=this.manage.getSchedule(SportType,Integer.parseInt(this.MatchIdComboBox1.getSelectedItem().toString()));
        
        s.setDate(this.datetextfield1.getText());
        s.setVenue(this.VenueComboBox1.getSelectedItem().toString());
        s.setTime(this.TimeComboBox1.getSelectedItem().toString());
        
        if(valid_date(datetextfield1.getText())==false || datetextfield1.getText().isEmpty())//
            JOptionPane.showMessageDialog(rootPane,"Invalid date format");//
        
        else if(this.manage.CheckSchedule(s, SportType))//
        {
           
          if(this.manage.CheckOfficial(s))//
          {
        
        this.manage.UpdateSchedule(s,SportType);
        this.db.updateSchedule(s);
        JOptionPane.showMessageDialog(rootPane, "Successfully Updated Match !!");
        this.ChangeMatchDialog.setVisible(false);
        
        
         DefaultTableModel model2 =null;
        
        if(SportType==1)
           model2=(DefaultTableModel)Fixtures_Cricket_Table.getModel();
        if(SportType==2)
           model2=(DefaultTableModel)Fixtures_Football_Table.getModel();
        if(SportType==3)
           model2=(DefaultTableModel)Fixtures_Basketball_Table.getModel();
        
        
        for(int i=0;i<model2.getRowCount();i++)
        {
        if(Integer.parseInt(model2.getValueAt(i, 0).toString())==s.getId())
        {
            model2.setValueAt(s.getDate(), i, 2);
            model2.setValueAt(s.getTime(), i, 3);
            model2.setValueAt(s.getVenue(), i, 4);
            break;
        }
        }
         
          }
          else
          {
             JOptionPane.showMessageDialog(rootPane, "This official Already has been allocated to a match at this time");
          }
        }
       else
        {
            JOptionPane.showMessageDialog(rootPane,"A match At this Time Already Exists Or One of the teams has a match at this time !!");
        }
              
              
       }
      else
       {
           JOptionPane.showMessageDialog(rootPane, "No match To be Updated Exists !!");
       }
      /* Object[] row2 =new Object[8];
       
       row2[0]=s.getID();
       row2[1]=s.getTeam1().getName();
       row2[2]=s.getDate();
       row2[3]=s.getTime();
       row2[4]=s.getVenue();
       row2[5]=s.getTeam2().getName();
       row2[6]=s.getStatus();
       row2[7]=s.getOffcial().getName();
       model2.addRow(row2); */
        
    }//GEN-LAST:event_UpdateScheduleActionPerformed

    private void datetextfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datetextfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datetextfield1ActionPerformed

    private void Change_Football_Match_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Football_Match_ButtonActionPerformed
        //this.Team1ComboBox.removeAllItems();
        //this.Team2ComboBox.removeAllItems();
        this.MatchIdComboBox1.removeAllItems();
        this.TimeComboBox1.removeAllItems();
        this.VenueComboBox1.removeAllItems();
        //this.OfficialComboBox1.removeAllItems();
            
        ArrayList<String> venues=new ArrayList<>();
        venues.add("Cricket Ground");
        venues.add("Football Ground");
        venues.add("Basketball Ground");
        
        ArrayList<String> timings=new ArrayList<>();
        timings.add("1-2 pm");
        timings.add("2-3 pm");
        timings.add("3-4 pm");
        timings.add("4-5 pm");
        timings.add("5-6 pm");
        timings.add("6-7 pm");
            
            
       /* ArrayList<Team> teams=new ArrayList<Team>();
        teams = this.manage.getTeamList(1);
         
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team1ComboBox.addItem(teams.get(i).getName());
        }
        
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team2ComboBox.addItem(teams.get(i).getName());
        }
        */
       
       ArrayList<Schedule> ScheduleList=this.manage.getScheduleList(2);
       
       for(int i=0;i<ScheduleList.size();i++)
       {    
           if(ScheduleList.get(i).getStatus()==false)
           {
              this.MatchIdComboBox1.addItem(String.valueOf(ScheduleList.get(i).getId()));
           }
       }
         for(int i=0;i<timings.size();i++)
        {
            //if(teams.get(i).paymentStatus==true)
            this.TimeComboBox1.addItem(timings.get(i));
        }
        
        for(int i=0;i<venues.size();i++)
        {
            this.VenueComboBox1.addItem(venues.get(i));
        }
        
        this.datetextfield1.setText("");
        
        this.ChangeMatchDialog.setVisible(true);
    }//GEN-LAST:event_Change_Football_Match_ButtonActionPerformed

    private void Change_Basketball_Match_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Basketball_Match_ButtonActionPerformed
       
        //this.Team1ComboBox.removeAllItems();
        //this.Team2ComboBox.removeAllItems();
        this.MatchIdComboBox1.removeAllItems();
        this.TimeComboBox1.removeAllItems();
        this.VenueComboBox1.removeAllItems();
        //this.OfficialComboBox1.removeAllItems();
            
        ArrayList<String> venues=new ArrayList<>();
        venues.add("Cricket Ground");
        venues.add("Football Ground");
        venues.add("Basketball Ground");
        
        ArrayList<String> timings=new ArrayList<>();
        timings.add("1-2 pm");
        timings.add("2-3 pm");
        timings.add("3-4 pm");
        timings.add("4-5 pm");
        timings.add("5-6 pm");
        timings.add("6-7 pm");
            
            
       /* ArrayList<Team> teams=new ArrayList<Team>();
        teams = this.manage.getTeamList(1);
         
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team1ComboBox.addItem(teams.get(i).getName());
        }
        
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team2ComboBox.addItem(teams.get(i).getName());
        }
        */
       
       ArrayList<Schedule> ScheduleList=this.manage.getScheduleList(3);
       
       for(int i=0;i<ScheduleList.size();i++)
       {    
           if(ScheduleList.get(i).getStatus()==false)
           {
             this.MatchIdComboBox1.addItem(String.valueOf(ScheduleList.get(i).getId()));
           }
       }
         for(int i=0;i<timings.size();i++)
        {
            //if(teams.get(i).paymentStatus==true)
            this.TimeComboBox1.addItem(timings.get(i));
        }
        
        for(int i=0;i<venues.size();i++)
        {
            this.VenueComboBox1.addItem(venues.get(i));
        }
        
        this.datetextfield1.setText("");
        
        this.ChangeMatchDialog.setVisible(true);
        
        
    }//GEN-LAST:event_Change_Basketball_Match_ButtonActionPerformed

    private void Change_Cricket_Match_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Cricket_Match_ButtonActionPerformed
        //this.Team1ComboBox.removeAllItems();
        //this.Team2ComboBox.removeAllItems();
        this.MatchIdComboBox1.removeAllItems();
        this.TimeComboBox1.removeAllItems();
        this.VenueComboBox1.removeAllItems();
        //this.OfficialComboBox1.removeAllItems();
            
        ArrayList<String> venues=new ArrayList<>();
        venues.add("Cricket Ground");
        venues.add("Football Ground");
        venues.add("Basketball Ground");
        
        ArrayList<String> timings=new ArrayList<>();
        timings.add("1-2 pm");
        timings.add("2-3 pm");
        timings.add("3-4 pm");
        timings.add("4-5 pm");
        timings.add("5-6 pm");
        timings.add("6-7 pm");
            
            
       /* ArrayList<Team> teams=new ArrayList<Team>();
        teams = this.manage.getTeamList(1);
         
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team1ComboBox.addItem(teams.get(i).getName());
        }
        
        for(int i=0;i<teams.size();i++)
        {
            if(teams.get(i).getPaymentStatus()==true)
            this.Team2ComboBox.addItem(teams.get(i).getName());
        }
        */
       
       ArrayList<Schedule> ScheduleList=this.manage.getScheduleList(1);
       
       for(int i=0;i<ScheduleList.size();i++)
       {
           if(ScheduleList.get(i).getStatus()==false)
           {
           this.MatchIdComboBox1.addItem(String.valueOf(ScheduleList.get(i).getId()));
           }
       }
         for(int i=0;i<timings.size();i++)
        {
            //if(teams.get(i).paymentStatus==true)
            this.TimeComboBox1.addItem(timings.get(i));
        }
        
        for(int i=0;i<venues.size();i++)
        {
            this.VenueComboBox1.addItem(venues.get(i));
        }
        
        this.datetextfield1.setText("");
        
        this.ChangeMatchDialog.setVisible(true);
    }//GEN-LAST:event_Change_Cricket_Match_ButtonActionPerformed

    private void Notification_Search_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Notification_Search_ButtonActionPerformed
        
        
        DefaultTableModel model=(DefaultTableModel)this.Notification_Search_Table.getModel();
        model.setRowCount(0);
        Object[] row=new Object[3];
        
        ArrayList<User> usersList=new ArrayList<User>();
        usersList=this.manage.getUsersList();
        
        if(this.Notification_Search_Name_Field.getText().isEmpty())
        {
            for(int i=0;i<usersList.size();i++)
            {
                if(usersList.get(i).getUserType()==2 && this.Notification_Organizer_Option.isSelected())
                {
                    row[0]=usersList.get(i).getId();
                    row[1]=usersList.get(i).getUsername();
                    row[2] = this.Notification_Select_All_Option.isSelected();
                    model.addRow(row);
                }
                else if(usersList.get(i).getUserType()==3 && this.Notification_Player_Option.isSelected())
                {
                    row[0]=usersList.get(i).getId();
                    row[1]=usersList.get(i).getUsername();
                    row[2] = this.Notification_Select_All_Option.isSelected();
                    model.addRow(row);
                }
                
            }
        }
        else
        {
            for(int i=0;i<usersList.size();i++)
            {
                if(usersList.get(i).getName().equals(this.Notification_Search_Name_Field.getText()))
                {
                    row[0]=usersList.get(i).getId();
                    row[1]=usersList.get(i).getUsername();
                    row[2]=this.Notification_Select_All_Option.isSelected();
                    model.addRow(row);
                }
            }
        }
        
        
        
 
    }//GEN-LAST:event_Notification_Search_ButtonActionPerformed

    private void Send_Notification_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_Notification_ButtonActionPerformed
        
        ArrayList<Integer> users=new ArrayList<Integer>();
        int type=0;
        for(int i=0;i<this.Notification_Search_Table.getRowCount();i++)
        {
            if((boolean)this.Notification_Search_Table.getValueAt(i, 2))
            users.add((Integer)this.Notification_Search_Table.getValueAt(i, 0));
        }
        
        if(this.Notification_Email_Option.isSelected())
        {
              type=1;
        }
        else if(this.Notification_SMS_Option.isSelected())
        {
            type = 2;
        }
        else if(this.Notification_Email_Option.isSelected() && this.Notification_SMS_Option.isSelected()) 
        {
            type = 3;
        }
        
        if(type!=0 && !users.isEmpty() && !this.Notification_Subject_Field.getText().isEmpty())
        {
        this.db.AddNotification(users, this.Notification_Subject_Field.getText(), this.Notification_Text_Area.getText(),type );
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Please Specify All the Necessary Information !!");
        }
    }//GEN-LAST:event_Send_Notification_ButtonActionPerformed

    private void Cricket_Wicket_Takers_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cricket_Wicket_Takers_TableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Cricket_Wicket_Takers_TableMouseClicked

    private void Cricket_Run_Scorers_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cricket_Run_Scorers_TableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Cricket_Run_Scorers_TableMouseClicked

    private void Basketball_Point_Scorers_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Basketball_Point_Scorers_TableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Basketball_Point_Scorers_TableMouseClicked

    private void Football_Assist_Scorers_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Football_Assist_Scorers_TableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Football_Assist_Scorers_TableMouseClicked

    private void Football_Goal_Scorers_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Football_Goal_Scorers_TableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Football_Goal_Scorers_TableMouseClicked

    private void Remove_Football_team_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_Football_team_ButtonActionPerformed
        
        ArrayList<Team> teamList = new ArrayList<Team>();
        teamList = this.manage.getTeamList(2);
        
        for(int i=0;i<teamList.size();i++)
        {
            if(teamList.get(i).getPaymentStatus()==false)
            {
                if(this.db.RemoveTeam(teamList.get(i)))
                {
                    this.manage.RemoveTeam(teamList.get(i), 2);
                    i--;
                }
            }
        }
        this.PrintFootballTeams();
    }//GEN-LAST:event_Remove_Football_team_ButtonActionPerformed

    private void Remove_Basketball_team_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_Basketball_team_buttonActionPerformed
        
         ArrayList<Team> teamList = new ArrayList<Team>();
        teamList = this.manage.getTeamList(3);
        
        for(int i=0;i<teamList.size();i++)
        {
            if(teamList.get(i).getPaymentStatus()==false)
            {
                if(this.db.RemoveTeam(teamList.get(i)))
                {
                    this.manage.RemoveTeam(teamList.get(i), 3);
                    i--;
                }
            }
        }
        this.PrintBasketballTeams();
        
    }//GEN-LAST:event_Remove_Basketball_team_buttonActionPerformed

    private void Remove_Cricket_Team_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_Cricket_Team_ButtonActionPerformed
        
         ArrayList<Team> teamList = new ArrayList<Team>();
          teamList  = this.manage.getTeamList(1);
       
       
       for(int i=0;i<teamList.size();i++)
       {
            if(teamList.get(i).getPaymentStatus()==false)
            {
                if(this.db.RemoveTeam(teamList.get(i)))
                {
                    this.manage.RemoveTeam(teamList.get(i), 1);
                    i--;
                }
            }
        }
        this.PrintCricketTeams();
        
    }//GEN-LAST:event_Remove_Cricket_Team_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame1().setVisible(true);
                
            }
        });
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountInfoField;
    private javax.swing.JDialog AddMatchDialog;
    private javax.swing.JButton AddOrganizerConfirmButton;
    private javax.swing.JPasswordField Add_Organizer_Confirm_Field;
    private javax.swing.JTextField Add_Organizer_Email_Field;
    private javax.swing.JTextField Add_Organizer_Name_Field;
    private javax.swing.JPasswordField Add_Organizer_Password_Field;
    private javax.swing.JTextField Add_Organizer_Phone_Field;
    private javax.swing.JTextField Add_Organizer_Username_Field;
    private javax.swing.JTextField BasketballManofTheMatch;
    private javax.swing.JDialog BasketballMatch;
    private javax.swing.JTextField BasketballMatchTeam1Name;
    private javax.swing.JTable BasketballMatchTeam1PlayerTable;
    private javax.swing.JTextField BasketballMatchTeam1Score;
    private javax.swing.JTextField BasketballMatchTeam2Name;
    private javax.swing.JTable BasketballMatchTeam2PlayerTable;
    private javax.swing.JTextField BasketballMatchTeam2Score;
    private javax.swing.JTabbedPane BasketballPanel;
    private java.awt.Button BasketballSummarySaveButton;
    private javax.swing.JButton Basketball_Add_Match_Button;
    private javax.swing.JPanel Basketball_Players_Scores;
    private javax.swing.JTable Basketball_Point_Scorers_Table;
    private javax.swing.JScrollPane Basketball_top_dunkers;
    private javax.swing.JPanel CertificateMenu;
    private javax.swing.JLabel CertificateNameField;
    private javax.swing.JPanel CertificatePanel;
    private javax.swing.JLabel Certificate_Description_Field;
    private javax.swing.JLabel Certificate_Purpose_Field;
    private javax.swing.JDialog ChangeMatchDialog;
    private javax.swing.JButton Change_Basketball_Match_Button;
    private javax.swing.JButton Change_Cricket_Match_Button;
    private javax.swing.JButton Change_Football_Match_Button;
    private javax.swing.JTextField CrcketSummaryTeam1Name;
    private javax.swing.JTextField CricketManOfTheMatch;
    private javax.swing.JDialog CricketMatch;
    private javax.swing.JPanel CricketMenu;
    private javax.swing.JTabbedPane CricketPanel;
    private javax.swing.JTextField CricketSummaryTeam1Overs;
    private javax.swing.JTextField CricketSummaryTeam1Runs;
    private javax.swing.JTextField CricketSummaryTeam1Wickets;
    private javax.swing.JTextField CricketSummaryTeam2Name;
    private javax.swing.JTextField CricketSummaryTeam2Overs;
    private javax.swing.JTextField CricketSummaryTeam2Runs;
    private javax.swing.JTextField CricketSummaryTeam2Wickets;
    private javax.swing.JTextField CricketTeamDataNameField;
    private javax.swing.JButton Cricket_Add_Match_Button;
    private javax.swing.JPanel Cricket_Players_Scores;
    private javax.swing.JTable Cricket_Run_Scorers_Table;
    private javax.swing.JDialog Cricket_Team_Data;
    private javax.swing.JTable Cricket_Wicket_Takers_Table;
    private javax.swing.JRadioButton EasyPaisaButton;
    private javax.swing.JLabel ErrorConfirmPassword;
    private javax.swing.JPanel Fixtures_Basketball;
    private javax.swing.JScrollPane Fixtures_Basketball_Scroller;
    private javax.swing.JTable Fixtures_Basketball_Table;
    private javax.swing.JPanel Fixtures_Cricket;
    private javax.swing.JScrollPane Fixtures_Cricket_Scroller;
    private javax.swing.JScrollPane Fixtures_Cricket_Scroller1;
    private javax.swing.JScrollPane Fixtures_Cricket_Scroller2;
    private javax.swing.JScrollPane Fixtures_Cricket_Scroller5;
    private javax.swing.JScrollPane Fixtures_Cricket_Scroller6;
    private javax.swing.JTable Fixtures_Cricket_Table;
    private javax.swing.JPanel Fixtures_Football;
    private javax.swing.JScrollPane Fixtures_Football_Scroller;
    private javax.swing.JTable Fixtures_Football_Table;
    private javax.swing.JTextField FootballManOfTheMatch;
    private javax.swing.JDialog FootballMatch;
    private javax.swing.JTextField FootballMatchTeam1Name;
    private javax.swing.JTable FootballMatchTeam1PlayerTable;
    private javax.swing.JTextField FootballMatchTeam1Score;
    private javax.swing.JTextField FootballMatchTeam2Name;
    private javax.swing.JTable FootballMatchTeam2PlayerTable;
    private javax.swing.JTextField FootballMatchTeam2Score;
    private javax.swing.JPanel FootballMenu;
    private javax.swing.JTabbedPane FootballPanel;
    private java.awt.Button FootballSummarySaveButton;
    private javax.swing.JTextField FootballTeamDataNameField;
    private javax.swing.JScrollPane FootballTeamPlayerTable;
    private javax.swing.JButton Football_Add_Match_Button;
    private javax.swing.JTable Football_Assist_Scorers_Table;
    private javax.swing.JTable Football_Goal_Scorers_Table;
    private javax.swing.JPanel Football_Players_Scores;
    private javax.swing.JDialog Football_Team_Data;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JPanel InnerMainPanel;
    private javax.swing.JLabel InvalidEmail;
    private javax.swing.JLabel InvalidPassword;
    private javax.swing.JLabel InvalidPhone;
    private javax.swing.JLabel InvalidPhone1;
    private javax.swing.JLabel InvalidUsername;
    private javax.swing.JLabel Invalidname;
    private javax.swing.JRadioButton JazzCashButton;
    private javax.swing.JButton LogInConfirmButton;
    private javax.swing.JLabel LogInError;
    private javax.swing.JLabel LogInLabel;
    private javax.swing.JDialog LogIn_Panel;
    private javax.swing.JPanel LoginButton;
    private javax.swing.JPasswordField LoginPasswordField;
    private javax.swing.JTextField LoginUsernameField;
    private javax.swing.JPanel LogoPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JComboBox<String> MatchIdComboBox1;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JPanel NotificationMenu;
    private javax.swing.JPanel NotificationPanel;
    private javax.swing.JRadioButton Notification_Email_Option;
    private javax.swing.JRadioButton Notification_Organizer_Option;
    private javax.swing.JRadioButton Notification_Player_Option;
    private javax.swing.JRadioButton Notification_SMS_Option;
    private javax.swing.JButton Notification_Search_Button;
    private javax.swing.JTextField Notification_Search_Name_Field;
    private javax.swing.JTable Notification_Search_Table;
    private javax.swing.JRadioButton Notification_Select_All_Option;
    private javax.swing.JTextField Notification_Subject_Field;
    private javax.swing.JTextArea Notification_Text_Area;
    private javax.swing.JComboBox<String> OfficialComboBox1;
    private javax.swing.JDialog OrganizerAddPanel;
    private javax.swing.JPanel OrganizersListMenu;
    private javax.swing.JPanel OrganizersListPanel;
    private javax.swing.JTable OrganizersListTable;
    private javax.swing.JButton PayButton;
    private javax.swing.JButton PayLaterButton;
    private javax.swing.JButton PayNowButton;
    private javax.swing.JPanel PaymentMenu;
    private javax.swing.JDialog PaymentOption;
    private javax.swing.JPanel PaymentPanel;
    private javax.swing.JTable PlayersListTable;
    private javax.swing.JTable PointsTableBasketball;
    private javax.swing.JTable PointsTable_Cricket;
    private javax.swing.JTable PointsTable_Football;
    private javax.swing.JPanel Points_Basketball;
    private javax.swing.JScrollPane Points_Basketball_Scroller;
    private javax.swing.JPanel Points_Cricket;
    private javax.swing.JPanel Points_Football;
    private javax.swing.JScrollPane Points_Volley_Scroller1;
    private javax.swing.JScrollPane Points_Volley_Scroller2;
    private javax.swing.JButton RegisterCricketChoice;
    private javax.swing.JButton RegisterFootballChoice;
    private javax.swing.JPanel RegisterInnerPanel;
    private javax.swing.JButton RegisterTeamButton;
    private javax.swing.JPanel RegisterTeamMenu;
    private javax.swing.JPanel RegisterTeamPanel;
    private javax.swing.JButton RegisterVolleyballChoice;
    private javax.swing.JButton Remove_Basketball_team_button;
    private javax.swing.JButton Remove_Cricket_Team_Button;
    private javax.swing.JButton Remove_Football_team_Button;
    private java.awt.Button SaveCricketSummaryButton;
    private javax.swing.JPanel SelectSportPanel;
    private javax.swing.JButton Send_Notification_Button;
    private javax.swing.JButton SignUpButton;
    private javax.swing.JButton SignUpButton1;
    private javax.swing.JButton SignUpButton2;
    private javax.swing.JPasswordField SignUpConfirmPasswordField;
    private javax.swing.JTextField SignUpEmailField;
    private javax.swing.JPanel SignUpHeaderButton;
    private javax.swing.JTextField SignUpNameField;
    private javax.swing.JPasswordField SignUpPasswordField;
    private javax.swing.JTextField SignUpPhoneField;
    private javax.swing.JTextField SignUpUsernameField;
    private javax.swing.JDialog SignUp_Panel;
    private javax.swing.JLabel Signuplabel;
    private javax.swing.JTable Team1BattingTable;
    private javax.swing.JTable Team1BowlingTable;
    private javax.swing.JComboBox<String> Team1ComboBox;
    private javax.swing.JTable Team2BattingTable;
    private javax.swing.JTable Team2BowlingTable;
    private javax.swing.JComboBox<String> Team2ComboBox;
    private javax.swing.JPanel TeamInfoPanel;
    private javax.swing.JTextField TeamRegistrationNameField;
    private javax.swing.JTable TeamRegistrationPlayerTable;
    private javax.swing.JPanel Teams_Basketball;
    private javax.swing.JTable Teams_Basketball_data;
    private javax.swing.JScrollPane Teams_Basketball_scroller;
    private javax.swing.JPanel Teams_Cricket;
    private javax.swing.JTable Teams_Cricket_data;
    private javax.swing.JScrollPane Teams_Cricket_scroller;
    private javax.swing.JPanel Teams_Football;
    private javax.swing.JTable Teams_Football_data;
    private javax.swing.JScrollPane Teams_Football_scroller;
    private javax.swing.JComboBox<String> TimeComboBox;
    private javax.swing.JComboBox<String> TimeComboBox1;
    private javax.swing.JLabel UserProfileEmail;
    private javax.swing.JLabel UserProfileId;
    private javax.swing.JPanel UserProfileMenu;
    private javax.swing.JLabel UserProfileName;
    private javax.swing.JPanel UserProfilePanel;
    private javax.swing.JLabel UserProfilePhoneNo;
    private javax.swing.JLabel UserProfileTeamLabel;
    private javax.swing.JLabel UserProfileTeamName;
    private javax.swing.JLabel UserProfileUSername;
    private javax.swing.JPanel UsersListMenu;
    private javax.swing.JPanel UsersListPanel;
    private javax.swing.JComboBox<String> VenueComboBox;
    private javax.swing.JComboBox<String> VenueComboBox1;
    private javax.swing.JPanel VolleyballMenu;
    private javax.swing.JTextField VolleyballTeamDataNameField;
    private javax.swing.JDialog Volleyball_Team_Data;
    private javax.swing.JTextField datetextfield;
    private javax.swing.JTextField datetextfield1;
    private javax.swing.JPanel homemenu;
    private javax.swing.JButton jButton25;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JPanel jPanel67;
    private javax.swing.JPanel jPanel68;
    private javax.swing.JPanel jPanel69;
    private javax.swing.JPanel jPanel70;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel72;
    private javax.swing.JPanel jPanel73;
    private javax.swing.JPanel jPanel74;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable15;
    // End of variables declaration//GEN-END:variables
}

